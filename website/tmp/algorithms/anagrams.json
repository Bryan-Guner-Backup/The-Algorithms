{
  "slug": "anagrams",
  "name": "Anagrams",
  "categories": ["strings"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "strings/anagrams.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/strings/anagrams.py",
      "code": "<span class=\"hljs-keyword\">import</span> collections\n<span class=\"hljs-keyword\">import</span> os\n<span class=\"hljs-keyword\">import</span> pprint\n<span class=\"hljs-keyword\">import</span> time\n\nstart_time = time.time()\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;creating word list...&quot;</span>)\npath = os.path.split(os.path.realpath(__file__))\n<span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(path[<span class=\"hljs-number\">0</span>] + <span class=\"hljs-string\">&quot;/words.txt&quot;</span>) <span class=\"hljs-keyword\">as</span> f:\n    word_list = <span class=\"hljs-built_in\">sorted</span>(<span class=\"hljs-built_in\">list</span>({word.strip().lower() <span class=\"hljs-keyword\">for</span> word <span class=\"hljs-keyword\">in</span> f}))\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">signature</span>(<span class=\"hljs-params\">word</span>):\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>.join(<span class=\"hljs-built_in\">sorted</span>(word))\n\n\nword_bysig = collections.defaultdict(<span class=\"hljs-built_in\">list</span>)\n<span class=\"hljs-keyword\">for</span> word <span class=\"hljs-keyword\">in</span> word_list:\n    word_bysig[signature(word)].append(word)\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">anagram</span>(<span class=\"hljs-params\">my_word</span>):\n    <span class=\"hljs-keyword\">return</span> word_bysig[signature(my_word)]\n\n\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;finding anagrams...&quot;</span>)\nall_anagrams = {word: anagram(word) <span class=\"hljs-keyword\">for</span> word <span class=\"hljs-keyword\">in</span> word_list <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(anagram(word)) &gt; <span class=\"hljs-number\">1</span>}\n\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;writing anagrams to file...&quot;</span>)\n<span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;anagrams.txt&quot;</span>, <span class=\"hljs-string\">&quot;w&quot;</span>) <span class=\"hljs-keyword\">as</span> file:\n    file.write(<span class=\"hljs-string\">&quot;all_anagrams = &quot;</span>)\n    file.write(pprint.pformat(all_anagrams))\n\ntotal_time = <span class=\"hljs-built_in\">round</span>(time.time() - start_time, <span class=\"hljs-number\">2</span>)\n<span class=\"hljs-built_in\">print</span>((<span class=\"hljs-string\">&quot;Done [&quot;</span>, total_time, <span class=\"hljs-string\">&quot;seconds ]&quot;</span>))\n"
    }
  },
  "contributors": [
    {
      "name": "Harshil Darji",
      "email": "darjiharshil2994@gmail.com",
      "commits": 1
    },
    {
      "name": "",
      "email": "shyam.thiagarajan@gmail.com",
      "commits": 1
    },
    {
      "name": "matkosoric",
      "email": "soric.matko@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "MickaÃ«l Schoentgen",
      "email": "contact@tiger-222.fr",
      "commits": 1
    },
    {
      "name": "cclauss",
      "email": "cclauss@bluewin.ch",
      "commits": 1
    },
    {
      "name": "97arushisharma",
      "email": "97arushisharma@gmail.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}
