{
  "slug": "alphabetical",
  "name": "Alphabetical",
  "categories": ["strings"],
  "body": {},
  "implementations": {
    "java": {
      "dir": "strings/Alphabetical.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/strings/Alphabetical.java",
      "code": "<span class=\"hljs-keyword\">package</span> strings;\n\n<span class=\"hljs-comment\">/**\n * Alphabetical order is a system whereby character strings are placed in order based on the\n * position of the characters in the conventional ordering of an alphabet. Wikipedia:\n * https://en.wikipedia.org/wiki/Alphabetical_order\n */</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Alphabetical</span> {\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n    <span class=\"hljs-keyword\">assert</span> !isAlphabetical(<span class=\"hljs-string\">&quot;123abc&quot;</span>);\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isAlphabetical</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;aBC&quot;</span>)</span>;\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isAlphabetical</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;abc&quot;</span>)</span>;\n    <span class=\"hljs-keyword\">assert</span> !isAlphabetical(<span class=\"hljs-string\">&quot;xyzabc&quot;</span>);\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isAlphabetical</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;abcxyz&quot;</span>)</span>;\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Check if a string is alphabetical order or not\n   *\n   * <span class=\"hljs-doctag\">@param</span> s a string\n   * <span class=\"hljs-doctag\">@return</span> {<span class=\"hljs-doctag\">@code</span> true} if given string is alphabetical order, otherwise {<span class=\"hljs-doctag\">@code</span> false}\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">isAlphabetical</span><span class=\"hljs-params\">(String s)</span> {\n    s = s.toLowerCase();\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; s.length() - <span class=\"hljs-number\">1</span>; ++i) {\n      <span class=\"hljs-keyword\">if</span> (!Character.isLetter(s.charAt(i)) || !(s.charAt(i) &lt;= s.charAt(i + <span class=\"hljs-number\">1</span>))) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n      }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n  }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
