{
  "slug": "union-of-2-arrays",
  "name": "Union of 2 Arrays",
  "categories": ["operationsondatastructures"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "operations_on_datastructures/union_of_2_arrays.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/operations_on_datastructures/union_of_2_arrays.cpp",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-type\">int</span> m, n, i = <span class=\"hljs-number\">0</span>, j = <span class=\"hljs-number\">0</span>;\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter size of both arrays:&quot;</span>;\n    cin &gt;&gt; m &gt;&gt; n;\n    <span class=\"hljs-type\">int</span> a[m];\n    <span class=\"hljs-type\">int</span> b[n];\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter elements of array 1:&quot;</span>;\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; m; i++) cin &gt;&gt; a[i];\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter elements of array 2:&quot;</span>;\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) cin &gt;&gt; b[i];\n    i = <span class=\"hljs-number\">0</span>;\n    j = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">while</span> ((i &lt; m) &amp;&amp; (j &lt; n)) {\n        <span class=\"hljs-keyword\">if</span> (a[i] &lt; b[j])\n            cout &lt;&lt; a[i++] &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span>;\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (a[i] &gt; b[j])\n            cout &lt;&lt; b[j++] &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span>;\n        <span class=\"hljs-keyword\">else</span> {\n            cout &lt;&lt; a[i++];\n            j++;\n        }\n    }\n    <span class=\"hljs-keyword\">while</span> (i &lt; m) cout &lt;&lt; a[i++] &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span>;\n    <span class=\"hljs-keyword\">while</span> (j &lt; n) cout &lt;&lt; b[j++] &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
