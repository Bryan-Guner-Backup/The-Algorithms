{
  "slug": "binary-exponentiation",
  "name": "Binary Exponentiation",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/binary_exponentiation.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/binary_exponentiation.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;Binary Exponentiation.&quot;&quot;&quot;</span>\n\n<span class=\"hljs-comment\"># Author : Junth Basnet</span>\n<span class=\"hljs-comment\"># Time Complexity : O(logn)</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">binary_exponentiation</span>(<span class=\"hljs-params\">a, n</span>):\n\n    <span class=\"hljs-keyword\">if</span> n == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n\n    <span class=\"hljs-keyword\">elif</span> n % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">return</span> binary_exponentiation(a, n - <span class=\"hljs-number\">1</span>) * a\n\n    <span class=\"hljs-keyword\">else</span>:\n        b = binary_exponentiation(a, n / <span class=\"hljs-number\">2</span>)\n        <span class=\"hljs-keyword\">return</span> b * b\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">try</span>:\n        BASE = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter Base : &quot;</span>).strip())\n        POWER = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter Power : &quot;</span>).strip())\n    <span class=\"hljs-keyword\">except</span> ValueError:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Invalid literal for integer&quot;</span>)\n\n    RESULT = binary_exponentiation(BASE, POWER)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{BASE}</span>^(<span class=\"hljs-subst\">{POWER}</span>) : <span class=\"hljs-subst\">{RESULT}</span>&quot;</span>)\n"
    },
    "scala": {
      "dir": "src/main/scala/Mathematics/BinaryExponentiation.scala",
      "url": "https://github.com/TheAlgorithms/scala/tree/master/src/main/scala/Mathematics/BinaryExponentiation.scala",
      "code": "<span class=\"hljs-keyword\">package</span> <span class=\"hljs-type\">Mathematics</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">BinaryExponentiation</span> </span>{\n  <span class=\"hljs-comment\">/**\n    * Method returns the binary exponentiation of a given number\n    * when base and power are passed the parameters\n    *\n    * @param Int , Int\n    * @return\n    */</span>\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">binaryExponentiation</span></span>(base: <span class=\"hljs-type\">Int</span>, power: <span class=\"hljs-type\">Int</span>): <span class=\"hljs-type\">Int</span> = {\n    <span class=\"hljs-keyword\">if</span> (power == <span class=\"hljs-number\">0</span>) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (power % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">1</span>) {\n      <span class=\"hljs-keyword\">return</span> binaryExponentiation(base, power - <span class=\"hljs-number\">1</span>) * base\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">val</span> answer: <span class=\"hljs-type\">Int</span> = binaryExponentiation(base, power / <span class=\"hljs-number\">2</span>)\n      <span class=\"hljs-keyword\">return</span> answer * answer\n    }\n  }\n} \n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "khanhhuynguyenvu",
      "email": "khanhhuynguyenvu@gmail.com",
      "commits": 1
    },
    {
      "name": "aditiagarwal34550",
      "email": "aditiagarwal34550@gmail.com",
      "commits": 1
    },
    {
      "name": "PatOnTheBack",
      "email": "51241310+PatOnTheBack@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "GeorgeChambi",
      "email": "charalambous99@gmail.com",
      "commits": 1
    },
    {
      "name": "Junth Basnet",
      "email": "25685098+Junth19@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "97arushisharma",
      "email": "97arushisharma@gmail.com",
      "commits": 1
    },
    {
      "name": "Aditi Agarwal",
      "email": "31546143+aditiagarwal34550@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "Chinmoy Das",
      "email": "chinmoy159@users.noreply.github.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}
