{
  "slug": "stooge-sort",
  "name": "Stooge Sort",
  "categories": ["sorts"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts/stooge_sort.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts/stooge_sort.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">stooge_sort</span>(<span class=\"hljs-params\">arr</span>):\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Examples:\r\n    &gt;&gt;&gt; stooge_sort([18.1, 0, -7.1, -1, 2, 2])\r\n    [-7.1, -1, 0, 2, 2, 18.1]\r\n\r\n    &gt;&gt;&gt; stooge_sort([])\r\n    []\r\n    &quot;&quot;&quot;</span>\r\n    stooge(arr, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(arr) - <span class=\"hljs-number\">1</span>)\r\n    <span class=\"hljs-keyword\">return</span> arr\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">stooge</span>(<span class=\"hljs-params\">arr, i, h</span>):\r\n\r\n    <span class=\"hljs-keyword\">if</span> i &gt;= h:\r\n        <span class=\"hljs-keyword\">return</span>\r\n\r\n    <span class=\"hljs-comment\"># If first element is smaller than the last then swap them</span>\r\n    <span class=\"hljs-keyword\">if</span> arr[i] &gt; arr[h]:\r\n        arr[i], arr[h] = arr[h], arr[i]\r\n\r\n    <span class=\"hljs-comment\"># If there are more than 2 elements in the array</span>\r\n    <span class=\"hljs-keyword\">if</span> h - i + <span class=\"hljs-number\">1</span> &gt; <span class=\"hljs-number\">2</span>:\r\n        t = (<span class=\"hljs-built_in\">int</span>)((h - i + <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">3</span>)\r\n\r\n        <span class=\"hljs-comment\"># Recursively sort first 2/3 elements</span>\r\n        stooge(arr, i, (h - t))\r\n\r\n        <span class=\"hljs-comment\"># Recursively sort last 2/3 elements</span>\r\n        stooge(arr, i + t, (h))\r\n\r\n        <span class=\"hljs-comment\"># Recursively sort first 2/3 elements</span>\r\n        stooge(arr, i, (h - t))\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    user_input = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter numbers separated by a comma:\\n&quot;</span>).strip()\r\n    unsorted = [<span class=\"hljs-built_in\">int</span>(item) <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> user_input.split(<span class=\"hljs-string\">&quot;,&quot;</span>)]\r\n    <span class=\"hljs-built_in\">print</span>(stooge_sort(unsorted))\r\n"
    },
    "c": {
      "dir": "sorting/stooge_sort.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/sorting/stooge_sort.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">stoogesort</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[], <span class=\"hljs-type\">int</span>, <span class=\"hljs-type\">int</span>)</span>;\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-type\">int</span> arr[<span class=\"hljs-number\">100</span>], i, n;\n\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;How many elements do you want to sort: &quot;</span>);\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;n);\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot; %d&quot;</span>, &amp;arr[i]);\n    stoogesort(arr, <span class=\"hljs-number\">0</span>, n - <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Sorted array : \\n&quot;</span>);\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)\n    {\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d &quot;</span>, arr[i]);\n    }\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">stoogesort</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> arr[], <span class=\"hljs-type\">int</span> i, <span class=\"hljs-type\">int</span> j)</span>\n{\n    <span class=\"hljs-type\">int</span> temp, k;\n    <span class=\"hljs-keyword\">if</span> (arr[i] &gt; arr[j])\n    {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n    <span class=\"hljs-keyword\">if</span> ((i + <span class=\"hljs-number\">1</span>) &gt;= j)\n        <span class=\"hljs-keyword\">return</span>;\n    k = (<span class=\"hljs-type\">int</span>)((j - i + <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">3</span>);\n    stoogesort(arr, i, j - k);\n    stoogesort(arr, i + k, j);\n    stoogesort(arr, i, j - k);\n}\n"
    },
    "r": {
      "dir": "Sorting-Algorithms/stooge_sort.R",
      "url": "https://github.com/TheAlgorithms/r/tree/master/Sorting-Algorithms/stooge_sort.R",
      "code": "<span class=\"hljs-comment\"># Stooge sort in R:</span>\n\nstooge.sort <span class=\"hljs-operator\">&lt;-</span> <span class=\"hljs-keyword\">function</span><span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">)</span> <span class=\"hljs-punctuation\">{</span>\n\ti <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>\n\tj <span class=\"hljs-operator\">=</span> <span class=\"hljs-built_in\">length</span><span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">)</span>\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">[</span>j<span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">&lt;</span> elements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">)</span> elements.vec<span class=\"hljs-punctuation\">[</span><span class=\"hljs-built_in\">c</span><span class=\"hljs-punctuation\">(</span>j<span class=\"hljs-punctuation\">,</span> i<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">=</span> elements.vec<span class=\"hljs-punctuation\">[</span><span class=\"hljs-built_in\">c</span><span class=\"hljs-punctuation\">(</span>i<span class=\"hljs-punctuation\">,</span> j<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span>\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> i <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">)</span> <span class=\"hljs-punctuation\">{</span>\n\t\tt <span class=\"hljs-operator\">=</span> <span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> i <span class=\"hljs-operator\">+</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">)</span> <span class=\"hljs-operator\">%/%</span> <span class=\"hljs-number\">3</span>\n\t\telements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-operator\">:</span><span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">=</span> stooge.sort<span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-operator\">:</span><span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">)</span>\n\t\telements.vec<span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">(</span>i <span class=\"hljs-operator\">+</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-operator\">:</span>j<span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">=</span> stooge.sort<span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">(</span>i <span class=\"hljs-operator\">+</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-operator\">:</span>j<span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">)</span>\n\t\telements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-operator\">:</span><span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">=</span> stooge.sort<span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-operator\">:</span><span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">)</span>\n\t<span class=\"hljs-punctuation\">}</span>\n\telements.vec\n<span class=\"hljs-punctuation\">}</span>\n \n<span class=\"hljs-comment\"># Example:</span>\n<span class=\"hljs-comment\"># stooge.sort(sample(21, 20))</span>\n<span class=\"hljs-comment\"># [1] 1  2  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Aruj Sharma",
      "email": "aruj123sharma@gmail.com",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "krishna.vedala@ieee.org",
      "commits": 1
    },
    {
      "name": "Marcos Vinicius",
      "email": "mvhb@cin.ufpe.br",
      "commits": 1
    },
    {
      "name": "Phyllipe Bezerra",
      "email": "32442929+pmba@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Charitoc",
      "email": "37042130+Charitoc@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
