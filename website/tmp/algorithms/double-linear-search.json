{
  "slug": "double-linear-search",
  "name": "Double Linear Search",
  "categories": ["searches"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "searches/double_linear_search.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/searches/double_linear_search.py",
      "code": "<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">double_linear_search</span>(<span class=\"hljs-params\">array: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>], search_item: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Iterate through the array from both sides to find the index of search_item.\r\n\r\n    :param array: the array to be searched\r\n    :param search_item: the item to be searched\r\n    :return the index of search_item, if search_item is in array, else -1\r\n\r\n    Examples:\r\n    &gt;&gt;&gt; double_linear_search([1, 5, 5, 10], 1)\r\n    0\r\n    &gt;&gt;&gt; double_linear_search([1, 5, 5, 10], 5)\r\n    1\r\n    &gt;&gt;&gt; double_linear_search([1, 5, 5, 10], 100)\r\n    -1\r\n    &gt;&gt;&gt; double_linear_search([1, 5, 5, 10], 10)\r\n    3\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-comment\"># define the start and end index of the given array</span>\r\n    start_ind, end_ind = <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(array) - <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">while</span> start_ind &lt;= end_ind:\r\n        <span class=\"hljs-keyword\">if</span> array[start_ind] == search_item:\r\n            <span class=\"hljs-keyword\">return</span> start_ind\r\n        <span class=\"hljs-keyword\">elif</span> array[end_ind] == search_item:\r\n            <span class=\"hljs-keyword\">return</span> end_ind\r\n        <span class=\"hljs-keyword\">else</span>:\r\n            start_ind += <span class=\"hljs-number\">1</span>\r\n            end_ind -= <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-comment\"># returns -1 if search_item is not found in array</span>\r\n    <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-built_in\">print</span>(double_linear_search(<span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">100</span>)), <span class=\"hljs-number\">40</span>))\r\n"
    },
    "ruby": {
      "dir": "searches/double_linear_search.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/searches/double_linear_search.rb",
      "code": "<span class=\"hljs-comment\"># Iterate through the array from both sides to find the index of search_item.</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">double_linear_search</span><span class=\"hljs-params\">(array, search_item)</span></span>\n  start_ind = <span class=\"hljs-number\">0</span>\n  end_ind = array.length - <span class=\"hljs-number\">1</span>\n\n  <span class=\"hljs-keyword\">while</span> start_ind &lt;= end_ind\n    <span class=\"hljs-keyword\">return</span> start_ind <span class=\"hljs-keyword\">if</span> array[start_ind] == search_item\n    <span class=\"hljs-keyword\">return</span> end_ind <span class=\"hljs-keyword\">if</span> array[end_ind] == search_item\n\n    start_ind += <span class=\"hljs-number\">1</span>\n    end_ind -= <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">end</span>\n\n  <span class=\"hljs-comment\"># returns -1 if search_item is not found in array</span>\n  -<span class=\"hljs-number\">1</span>\n<span class=\"hljs-keyword\">end</span>\n\nputs(double_linear_search([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>], <span class=\"hljs-number\">1</span>))\n<span class=\"hljs-comment\"># =&gt; 0</span>\n\nputs(double_linear_search([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>], <span class=\"hljs-number\">5</span>))\n<span class=\"hljs-comment\"># =&gt; 1</span>\n\nputs(double_linear_search([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>], <span class=\"hljs-number\">100</span>))\n<span class=\"hljs-comment\"># =&gt; -1</span>\n\nputs(double_linear_search([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>], <span class=\"hljs-number\">10</span>))\n<span class=\"hljs-comment\"># =&gt; 3</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Reinhold",
      "email": "63191266+reinhold-b@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}
