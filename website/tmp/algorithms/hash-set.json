{
  "slug": "hash-set",
  "name": "Hash Set",
  "categories": ["datastructures", "hashset"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "data_structures/hash_set/hash_set.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/data_structures/hash_set/hash_set.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdlib.h&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;hash_set.h&quot;</span></span>\n\n<span class=\"hljs-keyword\">extern</span> <span class=\"hljs-type\">hash_set_t</span> *<span class=\"hljs-title function_\">init_hash_set</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-type\">hash_set_t</span> *<span class=\"hljs-built_in\">set</span> = (<span class=\"hljs-type\">hash_set_t</span> *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">hash_set_t</span>));\n    <span class=\"hljs-built_in\">set</span>-&gt;keys = <span class=\"hljs-built_in\">calloc</span>(DEFAULT_HASH_SET_CAPACITY, <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">void</span> **));\n    <span class=\"hljs-built_in\">set</span>-&gt;values = <span class=\"hljs-built_in\">calloc</span>(DEFAULT_HASH_SET_CAPACITY, <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">void</span> **));\n    <span class=\"hljs-built_in\">set</span>-&gt;length = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-built_in\">set</span>-&gt;capacity = DEFAULT_HASH_SET_CAPACITY;\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">set</span>;\n}\n\n<span class=\"hljs-type\">unsigned</span> <span class=\"hljs-title function_\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">hash_set_t</span> *<span class=\"hljs-built_in\">set</span>, <span class=\"hljs-type\">void</span> *value)</span>\n{\n    <span class=\"hljs-keyword\">return</span> put(<span class=\"hljs-built_in\">set</span>, hash(value), value);\n}\n\n<span class=\"hljs-type\">unsigned</span> <span class=\"hljs-title function_\">put</span><span class=\"hljs-params\">(<span class=\"hljs-type\">hash_set_t</span> *<span class=\"hljs-built_in\">set</span>, <span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> hash, <span class=\"hljs-type\">void</span> *value)</span>\n{\n    <span class=\"hljs-keyword\">if</span> (contains_hash(<span class=\"hljs-built_in\">set</span>, hash))\n    {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">set</span>-&gt;keys[retrieve_index_from_hash(hash, <span class=\"hljs-built_in\">set</span>-&gt;capacity)] == value)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n        }\n\n        <span class=\"hljs-comment\">// collision</span>\n        resize(<span class=\"hljs-built_in\">set</span>);\n\n        <span class=\"hljs-keyword\">return</span> put(<span class=\"hljs-built_in\">set</span>, hash, value);\n    }\n\n    <span class=\"hljs-built_in\">set</span>-&gt;keys[retrieve_index_from_hash(hash, <span class=\"hljs-built_in\">set</span>-&gt;capacity)] = value;\n    <span class=\"hljs-built_in\">set</span>-&gt;values[<span class=\"hljs-built_in\">set</span>-&gt;length++] = value;\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">contains</span><span class=\"hljs-params\">(<span class=\"hljs-type\">hash_set_t</span> *<span class=\"hljs-built_in\">set</span>, <span class=\"hljs-type\">void</span> *value)</span>\n{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">set</span>-&gt;keys[retrieve_index_from_hash(hash(value), <span class=\"hljs-built_in\">set</span>-&gt;capacity)] ==\n                   value\n               ? <span class=\"hljs-number\">1</span>\n               : <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">contains_hash</span><span class=\"hljs-params\">(<span class=\"hljs-type\">hash_set_t</span> *<span class=\"hljs-built_in\">set</span>, <span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> hash)</span>\n{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">set</span>-&gt;keys[retrieve_index_from_hash(hash, <span class=\"hljs-built_in\">set</span>-&gt;capacity)] ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">delete</span> <span class=\"hljs-params\">(<span class=\"hljs-type\">hash_set_t</span> *<span class=\"hljs-built_in\">set</span>, <span class=\"hljs-type\">void</span> *value)</span>\n{\n    <span class=\"hljs-built_in\">set</span>-&gt;keys[retrieve_index_from_hash(hash(value), <span class=\"hljs-built_in\">set</span>-&gt;capacity)] = <span class=\"hljs-literal\">NULL</span>;\n}\n\n<span class=\"hljs-comment\">// adler_32 hash</span>\n<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> <span class=\"hljs-title function_\">hash</span><span class=\"hljs-params\">(<span class=\"hljs-type\">void</span> *value)</span>\n{\n    <span class=\"hljs-type\">char</span> *str = value;\n\n    <span class=\"hljs-type\">int</span> a = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-type\">int</span> b = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-type\">int</span> MODADLER = <span class=\"hljs-number\">65521</span>;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; str[i] != <span class=\"hljs-string\">&#x27;\\0&#x27;</span>; i++)\n    {\n        a = (a + str[i]) % MODADLER;\n        b = (b + a) % MODADLER;\n    }\n\n    <span class=\"hljs-keyword\">return</span> (b &lt;&lt; <span class=\"hljs-number\">16</span>) | a;\n}\n\n<span class=\"hljs-type\">unsigned</span> <span class=\"hljs-title function_\">retrieve_index_from_hash</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> hash, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-type\">unsigned</span> capacity)</span>\n{\n    <span class=\"hljs-keyword\">return</span> (capacity - <span class=\"hljs-number\">1</span>) &amp; (hash ^ (hash &gt;&gt; <span class=\"hljs-number\">12</span>));\n}\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">resize</span><span class=\"hljs-params\">(<span class=\"hljs-type\">hash_set_t</span> *<span class=\"hljs-built_in\">set</span>)</span>\n{\n    <span class=\"hljs-type\">void</span> **keys_resized = <span class=\"hljs-built_in\">calloc</span>((<span class=\"hljs-built_in\">set</span>-&gt;capacity &lt;&lt;= <span class=\"hljs-number\">1</span>), <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">void</span> **));\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-built_in\">set</span>-&gt;length; i++)\n    {\n        keys_resized[retrieve_index_from_hash(hash(<span class=\"hljs-built_in\">set</span>-&gt;values[i]),\n                                              <span class=\"hljs-built_in\">set</span>-&gt;capacity)] = <span class=\"hljs-built_in\">set</span>-&gt;values[i];\n    }\n\n    <span class=\"hljs-built_in\">free</span>(<span class=\"hljs-built_in\">set</span>-&gt;keys);\n\n    <span class=\"hljs-built_in\">set</span>-&gt;keys = keys_resized;\n\n    <span class=\"hljs-type\">void</span> **new_values =\n        (<span class=\"hljs-type\">void</span> **)<span class=\"hljs-built_in\">realloc</span>(<span class=\"hljs-built_in\">set</span>-&gt;values, <span class=\"hljs-built_in\">set</span>-&gt;capacity * <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">void</span> **));\n    <span class=\"hljs-built_in\">set</span>-&gt;values = new_values;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Wesllhey Holanda",
      "email": "wesllhey.holanda@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
