{
  "slug": "pigeon-sort",
  "name": "Pigeon Sort",
  "categories": ["sorts"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts/pigeon_sort.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts/pigeon_sort.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\n    This is an implementation of Pigeon Hole Sort.\n    For doctests run following command:\n\n    python3 -m doctest -v pigeon_sort.py\n    or\n    python -m doctest -v pigeon_sort.py\n\n    For manual testing run:\n    python pigeon_sort.py\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">List</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">pigeon_sort</span>(<span class=\"hljs-params\">array: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Implementation of pigeon hole sort algorithm\n    :param array: Collection of comparable items\n    :return: Collection sorted in ascending order\n    &gt;&gt;&gt; pigeon_sort([0, 5, 3, 2, 2])\n    [0, 2, 2, 3, 5]\n    &gt;&gt;&gt; pigeon_sort([])\n    []\n    &gt;&gt;&gt; pigeon_sort([-2, -5, -45])\n    [-45, -5, -2]\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(array) == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> array\n\n    _<span class=\"hljs-built_in\">min</span>, _<span class=\"hljs-built_in\">max</span> = <span class=\"hljs-built_in\">min</span>(array), <span class=\"hljs-built_in\">max</span>(array)\n\n    <span class=\"hljs-comment\"># Compute the variables</span>\n    holes_range = _<span class=\"hljs-built_in\">max</span> - _<span class=\"hljs-built_in\">min</span> + <span class=\"hljs-number\">1</span>\n    holes, holes_repeat = [<span class=\"hljs-number\">0</span>] * holes_range, [<span class=\"hljs-number\">0</span>] * holes_range\n\n    <span class=\"hljs-comment\"># Make the sorting.</span>\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> array:\n        index = i - _<span class=\"hljs-built_in\">min</span>\n        holes[index] = i\n        holes_repeat[index] += <span class=\"hljs-number\">1</span>\n\n    <span class=\"hljs-comment\"># Makes the array back by replacing the numbers.</span>\n    index = <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(holes_range):\n        <span class=\"hljs-keyword\">while</span> holes_repeat[i] &gt; <span class=\"hljs-number\">0</span>:\n            array[index] = holes[i]\n            index += <span class=\"hljs-number\">1</span>\n            holes_repeat[i] -= <span class=\"hljs-number\">1</span>\n\n    <span class=\"hljs-comment\"># Returns the sorted array.</span>\n    <span class=\"hljs-keyword\">return</span> array\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n    user_input = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter numbers separated by comma:\\n&quot;</span>)\n    unsorted = [<span class=\"hljs-built_in\">int</span>(x) <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> user_input.split(<span class=\"hljs-string\">&quot;,&quot;</span>)]\n    <span class=\"hljs-built_in\">print</span>(pigeon_sort(unsorted))\n"
    }
  },
  "contributors": [
    {
      "name": "Hiyabye",
      "email": "jihoon7373@gmail.com",
      "commits": 1
    },
    {
      "name": "Dhruv Manilawala",
      "email": "dhruvmanila@gmail.com",
      "commits": 1
    },
    {
      "name": "wuyudi",
      "email": "wuyudi1109@gmail.com",
      "commits": 1
    },
    {
      "name": "Parth Paradkar",
      "email": "parthparadkar3@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Jos√© Henrique Ivanchechen",
      "email": "joseivanchechen@outlook.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
