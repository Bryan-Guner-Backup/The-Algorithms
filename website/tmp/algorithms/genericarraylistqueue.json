{
  "slug": "genericarraylistqueue",
  "name": "GenericArrayListQueue",
  "categories": ["datastructures", "queues"],
  "body": {},
  "implementations": {
    "java": {
      "dir": "DataStructures/Queues/GenericArrayListQueue.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/DataStructures/Queues/GenericArrayListQueue.java",
      "code": "<span class=\"hljs-keyword\">package</span> DataStructures.Queues;\n\n<span class=\"hljs-keyword\">import</span> java.util.ArrayList;\n\n<span class=\"hljs-comment\">/**\n * This class implements a GenericArrayListQueue.\n *\n * &lt;p&gt;A GenericArrayListQueue data structure functions the same as any specific-typed queue. The\n * GenericArrayListQueue holds elemets of types to-be-specified at runtime. The elements that are\n * added first are the first to be removed (FIFO) New elements are added to the back/rear of the\n * queue.\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">GenericArrayListQueue</span>&lt;T&gt; {\n  <span class=\"hljs-comment\">/** The generic ArrayList for the queue T is the generic element */</span>\n  ArrayList&lt;T&gt; _queue = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;T&gt;();\n\n  <span class=\"hljs-comment\">/**\n   * Checks if the queue has elements (not empty)\n   *\n   * <span class=\"hljs-doctag\">@return</span> True if the queue has elements. False otherwise.\n   */</span>\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">hasElements</span><span class=\"hljs-params\">()</span> {\n    <span class=\"hljs-keyword\">return</span> !_queue.isEmpty();\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Checks what&#x27;s at the front of the queue\n   *\n   * <span class=\"hljs-doctag\">@return</span> If queue is not empty, element at the front of the queue. Otherwise, null\n   */</span>\n  <span class=\"hljs-keyword\">public</span> T <span class=\"hljs-title function_\">peek</span><span class=\"hljs-params\">()</span> {\n    <span class=\"hljs-type\">T</span> <span class=\"hljs-variable\">result</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.hasElements()) {\n      result = _queue.get(<span class=\"hljs-number\">0</span>);\n    }\n    <span class=\"hljs-keyword\">return</span> result;\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Inserts an element of type T to the queue.\n   *\n   * <span class=\"hljs-doctag\">@param</span> element of type T to be added\n   * <span class=\"hljs-doctag\">@return</span> True if the element was added successfully\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">add</span><span class=\"hljs-params\">(T element)</span> {\n    <span class=\"hljs-keyword\">return</span> _queue.add(element);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Retrieve what&#x27;s at the front of the queue\n   *\n   * <span class=\"hljs-doctag\">@return</span> If queue is not empty, element retrieved. Otherwise, null\n   */</span>\n  <span class=\"hljs-keyword\">public</span> T <span class=\"hljs-title function_\">poll</span><span class=\"hljs-params\">()</span> {\n    <span class=\"hljs-type\">T</span> <span class=\"hljs-variable\">result</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.hasElements()) {\n      result = _queue.remove(<span class=\"hljs-number\">0</span>);\n    }\n    <span class=\"hljs-keyword\">return</span> result;\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Main method\n   *\n   * <span class=\"hljs-doctag\">@param</span> args Command line arguments\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n    GenericArrayListQueue&lt;Integer&gt; queue = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenericArrayListQueue</span>&lt;Integer&gt;();\n    System.out.println(<span class=\"hljs-string\">&quot;Running...&quot;</span>);\n    <span class=\"hljs-keyword\">assert</span> queue.peek() == <span class=\"hljs-literal\">null</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.poll() == <span class=\"hljs-literal\">null</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.add(<span class=\"hljs-number\">1</span>) == <span class=\"hljs-literal\">true</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.peek() == <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.add(<span class=\"hljs-number\">2</span>) == <span class=\"hljs-literal\">true</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.peek() == <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.poll() == <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.peek() == <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.poll() == <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.peek() == <span class=\"hljs-literal\">null</span>;\n    <span class=\"hljs-keyword\">assert</span> queue.poll() == <span class=\"hljs-literal\">null</span>;\n    System.out.println(<span class=\"hljs-string\">&quot;Finished.&quot;</span>);\n  }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Daher Daher",
      "email": "40135454+daher928@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "khalil2535",
      "email": "khalil2535@localhost",
      "commits": 1
    },
    {
      "name": "KyleScharnhorst",
      "email": "scharkr1@uw.edu",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
