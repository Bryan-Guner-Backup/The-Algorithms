{
  "slug": "kadanes",
  "name": "Kadanes",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/kadanes.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/kadanes.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nKadane&#x27;s algorithm to get maximum subarray sum\r\nhttps://medium.com/@rsinghal757/kadanes-algorithm-dynamic-programming-how-and-why-does-it-work-3fd8849ed73d\r\nhttps://en.wikipedia.org/wiki/Maximum_subarray_problem\r\n&quot;&quot;&quot;</span>\r\ntest_data: <span class=\"hljs-built_in\">tuple</span> = ([-<span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">8</span>, -<span class=\"hljs-number\">9</span>], [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>], [-<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>], [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>], [])\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">negative_exist</span>(<span class=\"hljs-params\">arr: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    &gt;&gt;&gt; negative_exist([-2,-8,-9])\r\n    -2\r\n    &gt;&gt;&gt; [negative_exist(arr) for arr in test_data]\r\n    [-2, 0, 0, 0, 0]\r\n    &quot;&quot;&quot;</span>\r\n    arr = arr <span class=\"hljs-keyword\">or</span> [<span class=\"hljs-number\">0</span>]\r\n    <span class=\"hljs-built_in\">max</span> = arr[<span class=\"hljs-number\">0</span>]\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> arr:\r\n        <span class=\"hljs-keyword\">if</span> i &gt;= <span class=\"hljs-number\">0</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\r\n        <span class=\"hljs-keyword\">elif</span> <span class=\"hljs-built_in\">max</span> &lt;= i:\r\n            <span class=\"hljs-built_in\">max</span> = i\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">max</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">kadanes</span>(<span class=\"hljs-params\">arr: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    If negative_exist() returns 0 than this function will execute\r\n    else it will return the value return by negative_exist function\r\n\r\n    For example: arr = [2, 3, -9, 8, -2]\r\n        Initially we set value of max_sum to 0 and max_till_element to 0 than when\r\n        max_sum is less than max_till particular element it will assign that value to\r\n        max_sum and when value of max_till_sum is less than 0 it will assign 0 to i\r\n        and after that whole process, return the max_sum\r\n    So the output for above arr is 8\r\n\r\n    &gt;&gt;&gt; kadanes([2, 3, -9, 8, -2])\r\n    8\r\n    &gt;&gt;&gt; [kadanes(arr) for arr in test_data]\r\n    [-2, 19, 1, 0, 0]\r\n    &quot;&quot;&quot;</span>\r\n    max_sum = negative_exist(arr)\r\n    <span class=\"hljs-keyword\">if</span> max_sum &lt; <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">return</span> max_sum\r\n\r\n    max_sum = <span class=\"hljs-number\">0</span>\r\n    max_till_element = <span class=\"hljs-number\">0</span>\r\n\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> arr:\r\n        max_till_element += i\r\n        <span class=\"hljs-keyword\">if</span> max_sum &lt;= max_till_element:\r\n            max_sum = max_till_element\r\n        <span class=\"hljs-keyword\">if</span> max_till_element &lt; <span class=\"hljs-number\">0</span>:\r\n            max_till_element = <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-keyword\">return</span> max_sum\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">try</span>:\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Enter integer values sepatated by spaces&quot;</span>)\r\n        arr = [<span class=\"hljs-built_in\">int</span>(x) <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">input</span>().split()]\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Maximum subarray sum of <span class=\"hljs-subst\">{arr}</span> is <span class=\"hljs-subst\">{kadanes(arr)}</span>&quot;</span>)\r\n    <span class=\"hljs-keyword\">except</span> ValueError:\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Please enter integer values.&quot;</span>)\r\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
