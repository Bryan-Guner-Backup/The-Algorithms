{
  "slug": "mirror",
  "name": "Mirror",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "misc/mirror.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/misc/mirror.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;string.h&gt;</span>  <span class=\"hljs-comment\">// we include the library string.h to the use of string</span></span>\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">saisie</span><span class=\"hljs-params\">(\n    <span class=\"hljs-type\">char</span> *cpointeur)</span>;  <span class=\"hljs-comment\">// Prototypes of the three functions used in the program</span>\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">compte</span><span class=\"hljs-params\">(<span class=\"hljs-type\">char</span> *s)</span>;\n<span class=\"hljs-type\">char</span> *<span class=\"hljs-title function_\">miroir</span><span class=\"hljs-params\">(<span class=\"hljs-type\">char</span> *s)</span>;\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> argc, <span class=\"hljs-type\">char</span> *argv[])</span>\n{\n    <span class=\"hljs-type\">char</span> chaine[<span class=\"hljs-number\">20</span>];\n    saisie(chaine);\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;miroir est %s&quot;</span>, miroir(chaine));\n}\n<span class=\"hljs-comment\">// this function is used to put a string</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">saisie</span><span class=\"hljs-params\">(<span class=\"hljs-type\">char</span> *cpointeur)</span>\n{\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;saisir une chaine\\n&quot;</span>);\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%s&quot;</span>, cpointeur);\n}\n<span class=\"hljs-comment\">/* the function miroir (in french ) it means &quot;mirror&quot; , the major idea is to\npermute the first caractere with the last using an auxilary variable (aux) the\nthe 2nd character with the penultimate one and so on . we made a call to the\nfunction (compte) which counts the length of the string . As you can see clearly\n, I substruct 1 from the equation k = compte(s)-1 ; to get rid of the EOF\ncaractere which is &#x27;\\0&#x27; because it is not a caractere from the string typed */</span>\n<span class=\"hljs-type\">char</span> *<span class=\"hljs-title function_\">miroir</span><span class=\"hljs-params\">(<span class=\"hljs-type\">char</span> *s)</span>\n{\n    <span class=\"hljs-type\">int</span> i;\n    <span class=\"hljs-type\">char</span> aux;\n    <span class=\"hljs-type\">int</span> k;\n    k = compte(s) - <span class=\"hljs-number\">1</span>;\n    i = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">while</span> (i &lt;= k)\n    {\n        aux = s[i];\n        s[i] = s[k];\n        s[k] = aux;\n        k--;\n        i++;\n    }\n\n    <span class=\"hljs-keyword\">return</span> s;\n}\n\n<span class=\"hljs-comment\">// compte plays the role of strlen so we can change it by an strlen function if</span>\n<span class=\"hljs-comment\">// you want that</span>\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">compte</span><span class=\"hljs-params\">(<span class=\"hljs-type\">char</span> *s)</span>\n{\n    <span class=\"hljs-type\">char</span> *p;\n    <span class=\"hljs-type\">int</span> k;\n    p = s;\n    k = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">while</span> (*p != <span class=\"hljs-string\">&#x27;\\0&#x27;</span>)\n    {\n        p++;\n        k++;\n    }\n    <span class=\"hljs-keyword\">return</span> k;\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
