{
  "slug": "weightedjobscheduling",
  "name": "WeightedJobScheduling",
  "categories": ["dynamicprogramming"],
  "body": {},
  "implementations": {
    "kotlin": {
      "dir": "src/main/kotlin/dynamicProgramming/WeightedJobScheduling.kt",
      "url": "https://github.com/TheAlgorithms/kotlin/tree/master/src/main/kotlin/dynamicProgramming/WeightedJobScheduling.kt",
      "code": "<span class=\"hljs-keyword\">package</span> dynamicProgramming\n\n<span class=\"hljs-keyword\">import</span> java.util.Comparator\n<span class=\"hljs-keyword\">import</span> java.util.Collections\n<span class=\"hljs-keyword\">import</span> kotlin.math.max\n\n<span class=\"hljs-comment\">/* This algorithm is Weighted Job Scheduling\n\n * @param jobs - list of jobs with start time, end time and profit\n * @return Maximum profit that can be obtained\n */</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Job</span></span>(<span class=\"hljs-keyword\">var</span> start: <span class=\"hljs-built_in\">Int</span>, <span class=\"hljs-keyword\">var</span> finish: <span class=\"hljs-built_in\">Int</span>, <span class=\"hljs-keyword\">var</span> profit: <span class=\"hljs-built_in\">Int</span>)\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">findLastNonConflictingJob</span><span class=\"hljs-params\">(jobs: <span class=\"hljs-type\">List</span>&lt;<span class=\"hljs-type\">Job</span>&gt;, n: <span class=\"hljs-type\">Int</span>)</span></span>: <span class=\"hljs-built_in\">Int</span> {\n    <span class=\"hljs-keyword\">for</span> (i <span class=\"hljs-keyword\">in</span> n - <span class=\"hljs-number\">1</span> downTo <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-keyword\">if</span> (jobs[i].finish &lt;= jobs[n].start) {\n            <span class=\"hljs-keyword\">return</span> i\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">findMaxProfit</span><span class=\"hljs-params\">(jobs: <span class=\"hljs-type\">List</span>&lt;<span class=\"hljs-type\">Job</span>&gt;)</span></span>: <span class=\"hljs-built_in\">Int</span> {\n    Collections.sort(jobs, Comparator.comparingInt { x: Job -&gt; x.finish })\n\n    <span class=\"hljs-keyword\">val</span> n = jobs.size\n\n    <span class=\"hljs-keyword\">val</span> maxProfit = IntArray(n)\n\n    maxProfit[<span class=\"hljs-number\">0</span>] = jobs[<span class=\"hljs-number\">0</span>].profit\n\n    <span class=\"hljs-keyword\">for</span> (i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">1</span> until n) {\n        <span class=\"hljs-keyword\">val</span> index = findLastNonConflictingJob(jobs, i)\n\n        <span class=\"hljs-keyword\">var</span> incl = jobs[i].profit\n        <span class=\"hljs-keyword\">if</span> (index != -<span class=\"hljs-number\">1</span>) {\n            incl += maxProfit[index]\n        }\n\n        maxProfit[i] = max(incl, maxProfit[i - <span class=\"hljs-number\">1</span>])\n    }\n    <span class=\"hljs-keyword\">return</span> maxProfit[n - <span class=\"hljs-number\">1</span>]\n}"
    }
  },
  "contributors": [
    {
      "name": "Akshay-H",
      "email": "akshayhari555@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
