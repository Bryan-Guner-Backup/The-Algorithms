{
  "slug": "colorcontrastratio",
  "name": "ColorContrastRatio",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "java": {
      "dir": "Misc/ColorContrastRatio.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/Misc/ColorContrastRatio.java",
      "code": "<span class=\"hljs-keyword\">package</span> Misc;\n\n<span class=\"hljs-keyword\">import</span> java.awt.Color;\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@brief</span> A Java implementation of the offcial W3 documented procedure to calculate contrast ratio\n *     between colors on the web. This is used to calculate the readability of a foreground color on\n *     top of a background color.\n * <span class=\"hljs-doctag\">@since</span> 2020-10-15\n * <span class=\"hljs-doctag\">@see</span> [Color Contrast Ratio](https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-procedure)\n * <span class=\"hljs-doctag\">@author</span> [Seth Falco](https://github.com/SethFalco)\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ColorContrastRatio</span> {\n\n  <span class=\"hljs-comment\">/**\n   * <span class=\"hljs-doctag\">@brief</span> Calculates the contrast ratio between two given colors.\n   * <span class=\"hljs-doctag\">@param</span> a Any color, used to get the red, green, and blue values.\n   * <span class=\"hljs-doctag\">@param</span> b Another color, which will be compared against the first color.\n   * <span class=\"hljs-doctag\">@return</span> The contrast ratio between the two colors.\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">getContrastRatio</span><span class=\"hljs-params\">(Color a, Color b)</span> {\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">aColorLuminance</span> <span class=\"hljs-operator\">=</span> getRelativeLuminance(a);\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">bColorLuminance</span> <span class=\"hljs-operator\">=</span> getRelativeLuminance(b);\n\n    <span class=\"hljs-keyword\">if</span> (aColorLuminance &gt; bColorLuminance)\n      <span class=\"hljs-keyword\">return</span> (aColorLuminance + <span class=\"hljs-number\">0.05</span>) / (bColorLuminance + <span class=\"hljs-number\">0.05</span>);\n\n    <span class=\"hljs-keyword\">return</span> (bColorLuminance + <span class=\"hljs-number\">0.05</span>) / (aColorLuminance + <span class=\"hljs-number\">0.05</span>);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * <span class=\"hljs-doctag\">@brief</span> Calculates the relative luminance of a given color.\n   * <span class=\"hljs-doctag\">@param</span> color Any color, used to get the red, green, and blue values.\n   * <span class=\"hljs-doctag\">@return</span> The relative luminance of the color.\n   * <span class=\"hljs-doctag\">@see</span> [More info on relative\n   *     luminance.](https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef)\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">getRelativeLuminance</span><span class=\"hljs-params\">(Color color)</span> {\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">red</span> <span class=\"hljs-operator\">=</span> getColor(color.getRed());\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">green</span> <span class=\"hljs-operator\">=</span> getColor(color.getGreen());\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">blue</span> <span class=\"hljs-operator\">=</span> getColor(color.getBlue());\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0.2126</span> * red + <span class=\"hljs-number\">0.7152</span> * green + <span class=\"hljs-number\">0.0722</span> * blue;\n  }\n\n  <span class=\"hljs-comment\">/**\n   * <span class=\"hljs-doctag\">@brief</span> Calculates the final value for a color to be used in the relative luminance formula as\n   *     described in step 1.\n   * <span class=\"hljs-doctag\">@param</span> color8Bit 8-bit representation of a color component value.\n   * <span class=\"hljs-doctag\">@return</span> Value for the provided color component to be used in the relative luminance formula.\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">getColor</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> color8Bit)</span> {\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">sRgb</span> <span class=\"hljs-operator\">=</span> getColorSRgb(color8Bit);\n    <span class=\"hljs-keyword\">return</span> (sRgb &lt;= <span class=\"hljs-number\">0.03928</span>) ? sRgb / <span class=\"hljs-number\">12.92</span> : Math.pow((sRgb + <span class=\"hljs-number\">0.055</span>) / <span class=\"hljs-number\">1.055</span>, <span class=\"hljs-number\">2.4</span>);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * <span class=\"hljs-doctag\">@brief</span> Calculates the Color sRGB value as denoted in step 1 of the procedure document.\n   * <span class=\"hljs-doctag\">@param</span> color8Bit 8-bit representation of a color component value.\n   * <span class=\"hljs-doctag\">@return</span> A percentile value of the color component.\n   */</span>\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">getColorSRgb</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span> color8Bit)</span> {\n    <span class=\"hljs-keyword\">return</span> color8Bit / <span class=\"hljs-number\">255.0</span>;\n  }\n\n  <span class=\"hljs-comment\">/**\n   * You can check this example against another open-source implementation available on GitHub.\n   *\n   * <span class=\"hljs-doctag\">@see</span> [Online Contrast\n   *     Ratio](https://contrast-ratio.com/#rgb%28226%2C%20229%2C%20248-on-rgb%2823%2C%20103%2C%20154%29)\n   * <span class=\"hljs-doctag\">@see</span> [GitHub Repository for Online Contrast Ratio](https://github.com/LeaVerou/contrast-ratio)\n   */</span>\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span> {\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">ColorContrastRatio</span> <span class=\"hljs-variable\">algImpl</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ColorContrastRatio</span>();\n\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Color</span> <span class=\"hljs-variable\">black</span> <span class=\"hljs-operator\">=</span> Color.BLACK;\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">blackLuminance</span> <span class=\"hljs-operator\">=</span> algImpl.getRelativeLuminance(black);\n    <span class=\"hljs-type\">assert</span> <span class=\"hljs-variable\">blackLuminance</span> <span class=\"hljs-operator\">=</span>= <span class=\"hljs-number\">0</span> : <span class=\"hljs-string\">&quot;Test 1 Failed - Incorrect relative luminance.&quot;</span>;\n\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Color</span> <span class=\"hljs-variable\">white</span> <span class=\"hljs-operator\">=</span> Color.WHITE;\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">whiteLuminance</span> <span class=\"hljs-operator\">=</span> algImpl.getRelativeLuminance(white);\n    <span class=\"hljs-type\">assert</span> <span class=\"hljs-variable\">whiteLuminance</span> <span class=\"hljs-operator\">=</span>= <span class=\"hljs-number\">1</span> : <span class=\"hljs-string\">&quot;Test 2 Failed - Incorrect relative luminance.&quot;</span>;\n\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">highestColorRatio</span> <span class=\"hljs-operator\">=</span> algImpl.getContrastRatio(black, white);\n    <span class=\"hljs-type\">assert</span> <span class=\"hljs-variable\">highestColorRatio</span> <span class=\"hljs-operator\">=</span>= <span class=\"hljs-number\">21</span> : <span class=\"hljs-string\">&quot;Test 3 Failed - Incorrect contrast ratio.&quot;</span>;\n\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Color</span> <span class=\"hljs-variable\">foreground</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Color</span>(<span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">103</span>, <span class=\"hljs-number\">154</span>);\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">foregroundLuminance</span> <span class=\"hljs-operator\">=</span> algImpl.getRelativeLuminance(foreground);\n    <span class=\"hljs-type\">assert</span> <span class=\"hljs-variable\">foregroundLuminance</span> <span class=\"hljs-operator\">=</span>= <span class=\"hljs-number\">0.12215748057375966</span>\n        : <span class=\"hljs-string\">&quot;Test 4 Failed - Incorrect relative luminance.&quot;</span>;\n\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Color</span> <span class=\"hljs-variable\">background</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Color</span>(<span class=\"hljs-number\">226</span>, <span class=\"hljs-number\">229</span>, <span class=\"hljs-number\">248</span>);\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">backgroundLuminance</span> <span class=\"hljs-operator\">=</span> algImpl.getRelativeLuminance(background);\n    <span class=\"hljs-type\">assert</span> <span class=\"hljs-variable\">backgroundLuminance</span> <span class=\"hljs-operator\">=</span>= <span class=\"hljs-number\">0.7898468477881603</span>\n        : <span class=\"hljs-string\">&quot;Test 5 Failed - Incorrect relative luminance.&quot;</span>;\n\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">contrastRatio</span> <span class=\"hljs-operator\">=</span> algImpl.getContrastRatio(foreground, background);\n    <span class=\"hljs-type\">assert</span> <span class=\"hljs-variable\">contrastRatio</span> <span class=\"hljs-operator\">=</span>= <span class=\"hljs-number\">4.878363954846178</span> : <span class=\"hljs-string\">&quot;Test 6 Failed - Incorrect contrast ratio.&quot;</span>;\n  }\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\n    test();\n  }\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
