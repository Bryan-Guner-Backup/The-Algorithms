{
  "slug": "euclediangcd",
  "name": "EucledianGCD",
  "categories": ["recursive"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Recursive/EucledianGCD.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Recursive/EucledianGCD.js",
      "code": "<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">euclideanGCDRecursive</span> (first, second) {\n  <span class=\"hljs-comment\">/*\n    Calculates GCD of two numbers using Euclidean Recursive Algorithm\n    :param first: First number\n    :param second: Second number\n    :return: GCD of the numbers\n    */</span>\n  <span class=\"hljs-keyword\">if</span> (second === <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">return</span> first\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">euclideanGCDRecursive</span>(second, (first % second))\n  }\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">euclideanGCDIterative</span> (first, second) {\n  <span class=\"hljs-comment\">/*\n    Calculates GCD of two numbers using Euclidean Iterative Algorithm\n    :param first: First number\n    :param second: Second number\n    :return: GCD of the numbers\n    */</span>\n  <span class=\"hljs-keyword\">while</span> (second !== <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">const</span> temp = second\n    second = first % second\n    first = temp\n  }\n  <span class=\"hljs-keyword\">return</span> first\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">main</span> () {\n  <span class=\"hljs-keyword\">const</span> first = <span class=\"hljs-number\">20</span>\n  <span class=\"hljs-keyword\">const</span> second = <span class=\"hljs-number\">30</span>\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Recursive GCD for %d and %d is %d&#x27;</span>, first, second, <span class=\"hljs-title function_\">euclideanGCDRecursive</span>(first, second))\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Iterative GCD for %d and %d is %d&#x27;</span>, first, second, <span class=\"hljs-title function_\">euclideanGCDIterative</span>(first, second))\n}\n\n<span class=\"hljs-title function_\">main</span>()\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 1
    },
    {
      "name": "PatOnTheBack",
      "email": "51241310+PatOnTheBack@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Mohit Sharma",
      "email": "mohit1532.cse16@chitkara.edu.in",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
