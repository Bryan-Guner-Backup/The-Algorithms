{
  "slug": "volume",
  "name": "Volume",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/volume.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/volume.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nFind Volumes of Various Shapes.\n\nWikipedia reference: https://en.wikipedia.org/wiki/Volume\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">from</span> math <span class=\"hljs-keyword\">import</span> pi, <span class=\"hljs-built_in\">pow</span>\n<span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">Union</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">vol_cube</span>(<span class=\"hljs-params\">side_length: <span class=\"hljs-type\">Union</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">float</span>]</span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Calculate the Volume of a Cube.\n\n    &gt;&gt;&gt; vol_cube(1)\n    1.0\n    &gt;&gt;&gt; vol_cube(3)\n    27.0\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">pow</span>(side_length, <span class=\"hljs-number\">3</span>)\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">vol_cuboid</span>(<span class=\"hljs-params\">width: <span class=\"hljs-built_in\">float</span>, height: <span class=\"hljs-built_in\">float</span>, length: <span class=\"hljs-built_in\">float</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Calculate the Volume of a Cuboid.\n    :return multiple of width, length and height\n\n    &gt;&gt;&gt; vol_cuboid(1, 1, 1)\n    1.0\n    &gt;&gt;&gt; vol_cuboid(1, 2, 3)\n    6.0\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">float</span>(width * height * length)\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">vol_cone</span>(<span class=\"hljs-params\">area_of_base: <span class=\"hljs-built_in\">float</span>, height: <span class=\"hljs-built_in\">float</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Calculate the Volume of a Cone.\n\n    Wikipedia reference: https://en.wikipedia.org/wiki/Cone\n    :return (1/3) * area_of_base * height\n\n    &gt;&gt;&gt; vol_cone(10, 3)\n    10.0\n    &gt;&gt;&gt; vol_cone(1, 1)\n    0.3333333333333333\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">return</span> area_of_base * height / <span class=\"hljs-number\">3.0</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">vol_right_circ_cone</span>(<span class=\"hljs-params\">radius: <span class=\"hljs-built_in\">float</span>, height: <span class=\"hljs-built_in\">float</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Calculate the Volume of a Right Circular Cone.\n\n    Wikipedia reference: https://en.wikipedia.org/wiki/Cone\n    :return (1/3) * pi * radius^2 * height\n\n    &gt;&gt;&gt; vol_right_circ_cone(2, 3)\n    12.566370614359172\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">return</span> pi * <span class=\"hljs-built_in\">pow</span>(radius, <span class=\"hljs-number\">2</span>) * height / <span class=\"hljs-number\">3.0</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">vol_prism</span>(<span class=\"hljs-params\">area_of_base: <span class=\"hljs-built_in\">float</span>, height: <span class=\"hljs-built_in\">float</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Calculate the Volume of a Prism.\n    Wikipedia reference: https://en.wikipedia.org/wiki/Prism_(geometry)\n    :return V = Bh\n\n    &gt;&gt;&gt; vol_prism(10, 2)\n    20.0\n    &gt;&gt;&gt; vol_prism(11, 1)\n    11.0\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">float</span>(area_of_base * height)\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">vol_pyramid</span>(<span class=\"hljs-params\">area_of_base: <span class=\"hljs-built_in\">float</span>, height: <span class=\"hljs-built_in\">float</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Calculate the Volume of a Pyramid.\n    Wikipedia reference: https://en.wikipedia.org/wiki/Pyramid_(geometry)\n    :return  (1/3) * Bh\n\n    &gt;&gt;&gt; vol_pyramid(10, 3)\n    10.0\n    &gt;&gt;&gt; vol_pyramid(1.5, 3)\n    1.5\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">return</span> area_of_base * height / <span class=\"hljs-number\">3.0</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">vol_sphere</span>(<span class=\"hljs-params\">radius: <span class=\"hljs-built_in\">float</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Calculate the Volume of a Sphere.\n    Wikipedia reference: https://en.wikipedia.org/wiki/Sphere\n    :return (4/3) * pi * r^3\n\n    &gt;&gt;&gt; vol_sphere(5)\n    523.5987755982989\n    &gt;&gt;&gt; vol_sphere(1)\n    4.1887902047863905\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">4</span> / <span class=\"hljs-number\">3</span> * pi * <span class=\"hljs-built_in\">pow</span>(radius, <span class=\"hljs-number\">3</span>)\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">vol_circular_cylinder</span>(<span class=\"hljs-params\">radius: <span class=\"hljs-built_in\">float</span>, height: <span class=\"hljs-built_in\">float</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;Calculate the Volume of a Circular Cylinder.\n    Wikipedia reference: https://en.wikipedia.org/wiki/Cylinder\n    :return pi * radius^2 * height\n\n    &gt;&gt;&gt; vol_circular_cylinder(1, 1)\n    3.141592653589793\n    &gt;&gt;&gt; vol_circular_cylinder(4, 3)\n    150.79644737231007\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">return</span> pi * <span class=\"hljs-built_in\">pow</span>(radius, <span class=\"hljs-number\">2</span>) * height\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    <span class=\"hljs-string\">&quot;&quot;&quot;Print the Results of Various Volume Calculations.&quot;&quot;&quot;</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Volumes:&quot;</span>)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Cube: &quot;</span> + <span class=\"hljs-built_in\">str</span>(vol_cube(<span class=\"hljs-number\">2</span>)))  <span class=\"hljs-comment\"># = 8</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Cuboid: &quot;</span> + <span class=\"hljs-built_in\">str</span>(vol_cuboid(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)))  <span class=\"hljs-comment\"># = 8</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Cone: &quot;</span> + <span class=\"hljs-built_in\">str</span>(vol_cone(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)))  <span class=\"hljs-comment\"># ~= 1.33</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Right Circular Cone: &quot;</span> + <span class=\"hljs-built_in\">str</span>(vol_right_circ_cone(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)))  <span class=\"hljs-comment\"># ~= 8.38</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Prism: &quot;</span> + <span class=\"hljs-built_in\">str</span>(vol_prism(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)))  <span class=\"hljs-comment\"># = 4</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Pyramid: &quot;</span> + <span class=\"hljs-built_in\">str</span>(vol_pyramid(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)))  <span class=\"hljs-comment\"># ~= 1.33</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Sphere: &quot;</span> + <span class=\"hljs-built_in\">str</span>(vol_sphere(<span class=\"hljs-number\">2</span>)))  <span class=\"hljs-comment\"># ~= 33.5</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Circular Cylinder: &quot;</span> + <span class=\"hljs-built_in\">str</span>(vol_circular_cylinder(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)))  <span class=\"hljs-comment\"># ~= 25.1</span>\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    main()\n"
    },
    "javascript": {
      "dir": "Maths/Volume.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/Volume.js",
      "code": "<span class=\"hljs-comment\">/*\nCalculate the volume of the shapes\n\nVolume for Cuboid\nVolume for Cube\nVolume for Cone\nVolume for Pyramid\nVolume for Cylinder\nVolume for Triangular Prism\nVolume for Pentagonal Prism\nVolume for Sphere\nVolume for Hemisphere\n*/</span>\n\n<span class=\"hljs-comment\">/*\n  Calculate the volume for a Cuboid\n  Reference: https://www.cuemath.com/measurement/volume-of-cuboid/\n  return width * length * height\n*/</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">volCuboid</span> = (<span class=\"hljs-params\">width, length, height</span>) =&gt; {\n  <span class=\"hljs-title function_\">isNumber</span>(width, <span class=\"hljs-string\">&#x27;Width&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(length, <span class=\"hljs-string\">&#x27;Length&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(height, <span class=\"hljs-string\">&#x27;Height&#x27;</span>)\n  <span class=\"hljs-keyword\">return</span> (width * length * height)\n}\n\n<span class=\"hljs-comment\">/*\n  Calculate the volume for a Cube\n  Reference: https://www.cuemath.com/measurement/volume-of-cube/\n  return length * length * length\n*/</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">volCube</span> = (<span class=\"hljs-params\">length</span>) =&gt; {\n  <span class=\"hljs-title function_\">isNumber</span>(length, <span class=\"hljs-string\">&#x27;Length&#x27;</span>)\n  <span class=\"hljs-keyword\">return</span> (length ** <span class=\"hljs-number\">3</span>)\n}\n\n<span class=\"hljs-comment\">/*\n  Calculate the volume for a Cone\n  Reference: https://www.cuemath.com/measurement/volume-of-cone/\n  return PI * radius^2 * height/3\n*/</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">volCone</span> = (<span class=\"hljs-params\">radius, height</span>) =&gt; {\n  <span class=\"hljs-title function_\">isNumber</span>(radius, <span class=\"hljs-string\">&#x27;Radius&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(height, <span class=\"hljs-string\">&#x27;Height&#x27;</span>)\n  <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-property\">PI</span> * radius ** <span class=\"hljs-number\">2</span> * height / <span class=\"hljs-number\">3.0</span>)\n}\n\n<span class=\"hljs-comment\">/*\n  Calculate the volume for a Pyramid\n  Reference: https://www.cuemath.com/measurement/volume-of-pyramid/\n  return (baseLength * baseWidth * height) / 3\n*/</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">volPyramid</span> = (<span class=\"hljs-params\">baseLength, baseWidth, height</span>) =&gt; {\n  <span class=\"hljs-title function_\">isNumber</span>(baseLength, <span class=\"hljs-string\">&#x27;BaseLength&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(baseWidth, <span class=\"hljs-string\">&#x27;BaseWidth&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(height, <span class=\"hljs-string\">&#x27;Height&#x27;</span>)\n  <span class=\"hljs-keyword\">return</span> (baseLength * baseWidth * height) / <span class=\"hljs-number\">3.0</span>\n}\n\n<span class=\"hljs-comment\">/*\n  Calculate the volume for a Cylinder\n  Reference: https://www.cuemath.com/measurement/volume-of-cylinder/\n  return PI * radius^2 * height\n*/</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">volCylinder</span> = (<span class=\"hljs-params\">radius, height</span>) =&gt; {\n  <span class=\"hljs-title function_\">isNumber</span>(radius, <span class=\"hljs-string\">&#x27;Radius&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(height, <span class=\"hljs-string\">&#x27;Height&#x27;</span>)\n  <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-property\">PI</span> * radius ** <span class=\"hljs-number\">2</span> * height)\n}\n\n<span class=\"hljs-comment\">/*\n  Calculate the volume for a Triangular Prism\n  Reference: http://lrd.kangan.edu.au/numbers/content/03_volume/04_page.htm\n  return 1 / 2 * baseLengthTriangle * heightTriangle * height\n*/</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">volTriangularPrism</span> = (<span class=\"hljs-params\">baseLengthTriangle, heightTriangle, height</span>) =&gt; {\n  <span class=\"hljs-title function_\">isNumber</span>(baseLengthTriangle, <span class=\"hljs-string\">&#x27;BaseLengthTriangle&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(heightTriangle, <span class=\"hljs-string\">&#x27;HeightTriangle&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(height, <span class=\"hljs-string\">&#x27;Height&#x27;</span>)\n  <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">2</span> * baseLengthTriangle * heightTriangle * height)\n}\n\n<span class=\"hljs-comment\">/*\n  Calculate the volume for a Pentagonal Prism\n  Reference: https://www.cuemath.com/measurement/volume-of-pentagonal-prism/\n  return 5/2 * pentagonalLength * pentagonalBaseLength * height\n*/</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">volPentagonalPrism</span> = (<span class=\"hljs-params\">pentagonalLength, pentagonalBaseLength, height</span>) =&gt; {\n  <span class=\"hljs-title function_\">isNumber</span>(pentagonalLength, <span class=\"hljs-string\">&#x27;PentagonalLength&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(pentagonalBaseLength, <span class=\"hljs-string\">&#x27;PentagonalBaseLength&#x27;</span>)\n  <span class=\"hljs-title function_\">isNumber</span>(height, <span class=\"hljs-string\">&#x27;Height&#x27;</span>)\n  <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-number\">5</span> / <span class=\"hljs-number\">2</span> * pentagonalLength * pentagonalBaseLength * height)\n}\n\n<span class=\"hljs-comment\">/*\n  Calculate the volume for a Sphere\n  Reference: https://www.cuemath.com/measurement/volume-of-sphere/\n  return 4/3 * PI * radius^3\n*/</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">volSphere</span> = (<span class=\"hljs-params\">radius</span>) =&gt; {\n  <span class=\"hljs-title function_\">isNumber</span>(radius, <span class=\"hljs-string\">&#x27;Radius&#x27;</span>)\n  <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-number\">4</span> / <span class=\"hljs-number\">3</span> * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-property\">PI</span> * radius ** <span class=\"hljs-number\">3</span>)\n}\n\n<span class=\"hljs-comment\">/*\n  Calculate the volume for a Hemisphere\n  Reference: https://www.cuemath.com/measurement/volume-of-hemisphere/\n  return (2 * PI * radius^3)/3\n*/</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">volHemisphere</span> = (<span class=\"hljs-params\">radius</span>) =&gt; {\n  <span class=\"hljs-title function_\">isNumber</span>(radius, <span class=\"hljs-string\">&#x27;Radius&#x27;</span>)\n  <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-number\">2.0</span> * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-property\">PI</span> * radius ** <span class=\"hljs-number\">3</span>) / <span class=\"hljs-number\">3.0</span>\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">isNumber</span> = (<span class=\"hljs-params\">number, noName = <span class=\"hljs-string\">&#x27;number&#x27;</span></span>) =&gt; {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> number !== <span class=\"hljs-string\">&#x27;number&#x27;</span>) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeError</span>(<span class=\"hljs-string\">&#x27;The &#x27;</span> + noName + <span class=\"hljs-string\">&#x27; should be Number type&#x27;</span>)\n  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (number &lt; <span class=\"hljs-number\">0</span> || (!<span class=\"hljs-title class_\">Number</span>.<span class=\"hljs-built_in\">isFinite</span>(number))) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;The &#x27;</span> + noName + <span class=\"hljs-string\">&#x27; only accepts positive values&#x27;</span>)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> { volCuboid, volCube, volCone, volPyramid, volCylinder, volTriangularPrism, volPentagonalPrism, volSphere, volHemisphere }\n"
    },
    "julia": {
      "dir": "src/math/volume.jl",
      "url": "https://github.com/TheAlgorithms/julia/tree/master/src/math/volume.jl",
      "code": "<span class=\"hljs-comment\">#Find Volumes of Various Shapes.</span>\n<span class=\"hljs-comment\">#Wikipedia reference: https://en.wikipedia.org/wiki/Volume</span>\n<span class=\"hljs-comment\"># contributed By:- [Qingyu Qu](https://github.com/ErikQQY)</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\n    vol_cube()\n\nCompute the volume of a cube.\n\n# Examples\n\n```julia-repl\njulia&gt; vol_cube(1)\n1\njulia&gt; vol_cube(3)\n27\njulia&gt; vol_cube(-1)\nDomainError\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> vol_cube(side)\n    <span class=\"hljs-keyword\">if</span> side&lt;<span class=\"hljs-number\">0</span>\n        throw(<span class=\"hljs-built_in\">DomainError</span>(<span class=\"hljs-string\">&quot;vol_cube() only works for non negative values.&quot;</span>))\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">return</span> side^<span class=\"hljs-number\">3</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\n    vol_cuboid(width, height, length)\n\nCompute the volume of a vol_cuboid\n\n# Examples\n\n```julia-repl\njulia&gt; vol_cuboid(1, 1, 1)\n1\njulia&gt; vol_cuboid(1, 2, 3)\n6\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> vol_cuboid(width, height, length)\n    <span class=\"hljs-keyword\">if</span> width &lt; <span class=\"hljs-number\">0</span> || height &lt;<span class=\"hljs-number\">0</span> || length &lt; <span class=\"hljs-number\">0</span>\n        throw(<span class=\"hljs-built_in\">DomainError</span>(<span class=\"hljs-string\">&quot;vol_cuboid() only works for non negative values.&quot;</span>))\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">return</span> width*height*length\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\n    vol_cone(area_of_base, height)\n\nCompute the Volume of a Cone\n\n\n# Examples\n\n```julia-repl\njulia&gt; vol_cone(10, 3)\n10.0\njulia&gt; vol_cone(1, 1)\n0.3333333333333333\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> vol_cone(area_of_base, height)\n    <span class=\"hljs-keyword\">if</span> area_of_base &lt; <span class=\"hljs-number\">0</span> || height &lt;<span class=\"hljs-number\">0</span>\n        throw(<span class=\"hljs-built_in\">DomainError</span>(<span class=\"hljs-string\">&quot;vol_cone() only works for non negative values.&quot;</span>))\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">return</span> area_of_base*height/<span class=\"hljs-number\">3.0</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\n    vol_right_circ_cone(radius, height)\n\nCompute the Volume of a Right Circular Cone.\n\n# Examples\n\n```julia-repl\njulia&gt; vol_right_circ_cone(2, 3)\n12.566370614359172\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> vol_right_circ_cone(radius, height)\n    <span class=\"hljs-keyword\">if</span> radius &lt; <span class=\"hljs-number\">0</span> || height &lt; <span class=\"hljs-number\">0</span>\n        throw(<span class=\"hljs-built_in\">DomainError</span>(<span class=\"hljs-string\">&quot;vol_right_circ_cone() only works for non negative values.&quot;</span>))\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">π</span>*radius^<span class=\"hljs-number\">2</span>*height/<span class=\"hljs-number\">3.0</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\n    vol_prism(area_of_base, height)\n\nCompute the Volume of a Prism.\n\n# Examples\n\n```julia-repl\njulia&gt; vol_prism(10, 2)\n20.0\njulia&gt; vol_prism(11, 1)\n11.0\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> vol_prism(area_of_base, height)\n    <span class=\"hljs-keyword\">if</span> area_of_base &lt; <span class=\"hljs-number\">0</span> || height &lt; <span class=\"hljs-number\">0</span>\n        throw(<span class=\"hljs-built_in\">DomainError</span>(<span class=\"hljs-string\">&quot;vol_prism() only works for non negative values.&quot;</span>))\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">return</span> area_of_base*height\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\n    vol_pyramid(area_of_base, height)\n\nCompute the volume of a Pyramid.\n\n# Examples\n\n```julia-repl\njulia&gt; vol_pyramid(10, 3)\n10.0\njulia&gt; vol_pyramid(1.5, 3)\n1.5\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> vol_pyramid(area_of_base, height)\n    <span class=\"hljs-keyword\">if</span> area_of_base &lt; <span class=\"hljs-number\">0</span> || height &lt; <span class=\"hljs-number\">0</span>\n        throw(<span class=\"hljs-built_in\">DomainError</span>(<span class=\"hljs-string\">&quot;vol_pyramid() only works for non negative values.&quot;</span>))\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">return</span> area_of_base*height/<span class=\"hljs-number\">3.0</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\n    vol_sphere(radius)\n\nCompute the volume of a sphere.\n\n# Examples\n\n```julia\nvol_sphere(5)  # returns 523.5987755982989\nvol_sphere(1)  # returns 4.1887902047863905\nvol_sphere(-1) # returns DomainError\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> vol_sphere(radius)\n    <span class=\"hljs-keyword\">if</span> radius &lt; <span class=\"hljs-number\">0</span>\n        throw(<span class=\"hljs-built_in\">DomainError</span>(<span class=\"hljs-string\">&quot;vol_sphere() only works for non negative values.&quot;</span>))\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">4</span>/<span class=\"hljs-number\">3</span>*<span class=\"hljs-literal\">pi</span>*(radius)^<span class=\"hljs-number\">3</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\n    vol_circular_cylinder(area_of_, height)\n\nCompute the Volume of a Circular Cylinder.\n\n# Examples\n\n```julia-repl\njulia&gt; vol_circular_cylinder(1, 1)\n3.141592653589793\njulia&gt; vol_circular_cylinder(4, 3)\n150.79644737231007\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> vol_circular_cylinder(radius, height)\n    <span class=\"hljs-keyword\">if</span> radius &lt; <span class=\"hljs-number\">0</span> || height &lt; <span class=\"hljs-number\">0</span>\n        throw(<span class=\"hljs-built_in\">DomainError</span>(<span class=\"hljs-string\">&quot;vol_circular_cylinder() only works for non negative values.&quot;</span>))\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">pi</span>*radius^<span class=\"hljs-number\">2</span>*height\n<span class=\"hljs-keyword\">end</span>"
    }
  },
  "contributors": [
    {
      "name": "PatOnTheBack",
      "email": "51241310+PatOnTheBack@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Yurii",
      "email": "33547678+yuriimchg@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    },
    {
      "name": "ErikQQY",
      "email": "2283984853@qq.com",
      "commits": 7
    },
    {
      "name": "leeyan44",
      "email": "86589062+leeyan44@users.noreply.github.com",
      "commits": 11
    }
  ],
  "explanationUrl": {}
}
