{
  "slug": "fibonacci-dynamic-programming",
  "name": "Fibonacci Dynamic Programming",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "dart": {
      "dir": "maths/fibonacci_dynamic_programming.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/maths/fibonacci_dynamic_programming.dart",
      "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:test/test.dart&#x27;</span>;\n\n<span class=\"hljs-comment\">//Title:  Nth Fibonacci Number using Dynamic Programming</span>\n<span class=\"hljs-comment\">//Author: Richik Chanda</span>\n<span class=\"hljs-comment\">//Email:  richikchanda1999@gmail.com</span>\n<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; dp;\n<span class=\"hljs-built_in\">int</span> mod = (<span class=\"hljs-number\">1e9</span> + <span class=\"hljs-number\">7</span>).toInt();\n\n<span class=\"hljs-comment\">//Get the nth Fibonacci number modulo 10^9 + 7 since it can be a very large number</span>\n<span class=\"hljs-built_in\">int</span> getFib(<span class=\"hljs-built_in\">int</span> n) {\n  <span class=\"hljs-keyword\">if</span> (dp[n] == <span class=\"hljs-number\">-1</span>) dp[n] = (getFib(n - <span class=\"hljs-number\">1</span>) % mod) + (getFib(n - <span class=\"hljs-number\">2</span>) % mod);\n  <span class=\"hljs-keyword\">return</span> dp[n] % mod;\n}\n\n<span class=\"hljs-comment\">//Driver</span>\n<span class=\"hljs-keyword\">void</span> main() {\n  dp = <span class=\"hljs-built_in\">List</span>.generate((<span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">1</span>).toInt(), (e) =&gt; <span class=\"hljs-number\">-1</span>);\n  dp[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">0</span>;\n  dp[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">1</span>;\n\n  test(<span class=\"hljs-string\">&quot;getFib 0 equals 0&quot;</span>, () {\n    expect(getFib(<span class=\"hljs-number\">0</span>), equals(<span class=\"hljs-number\">0</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;getFib 1 equals 1&quot;</span>, () {\n    expect(getFib(<span class=\"hljs-number\">1</span>), equals(<span class=\"hljs-number\">1</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;getFib 5 equals 5&quot;</span>, () {\n    expect(getFib(<span class=\"hljs-number\">5</span>), equals(<span class=\"hljs-number\">5</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;getFib(n) equals getFib(n - 1) + getFib(n - 2)&quot;</span>, () {\n    expect(getFib(<span class=\"hljs-number\">7</span>), equals(getFib(<span class=\"hljs-number\">6</span>) + getFib(<span class=\"hljs-number\">5</span>)));\n    expect(getFib(<span class=\"hljs-number\">14</span>), equals(getFib(<span class=\"hljs-number\">13</span>) + getFib(<span class=\"hljs-number\">12</span>)));\n  });\n}\n"
    }
  },
  "contributors": [
    {
      "name": "richikchanda1999",
      "email": "richikchanda1999@gmail.com",
      "commits": 1
    },
    {
      "name": "Parowicz",
      "email": "arturparowicz@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
