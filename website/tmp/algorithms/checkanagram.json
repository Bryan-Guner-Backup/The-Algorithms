{
  "slug": "checkanagram",
  "name": "CheckAnagram",
  "categories": ["strings"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "String/CheckAnagram.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/String/CheckAnagram.js",
      "code": "<span class=\"hljs-comment\">// Anagram check is case sensitive; i.e. Aba and aba is not a anagram.</span>\n<span class=\"hljs-comment\">// inputs are strings i.e. str1 and str2</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">checkAnagram</span> = (<span class=\"hljs-params\">str1, str2</span>) =&gt; {\n  <span class=\"hljs-comment\">// check that inputs are strings.</span>\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> str1 !== <span class=\"hljs-string\">&#x27;string&#x27;</span> || <span class=\"hljs-keyword\">typeof</span> str2 !== <span class=\"hljs-string\">&#x27;string&#x27;</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Not string(s)&#x27;</span>\n  }\n\n  <span class=\"hljs-comment\">// If both strings have not same lengths then they can not be anagram.</span>\n  <span class=\"hljs-keyword\">if</span> (str1.<span class=\"hljs-property\">length</span> !== str2.<span class=\"hljs-property\">length</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Not anagrams&#x27;</span>\n  }\n\n  <span class=\"hljs-comment\">// Use hashmap to keep count of characters in str1</span>\n\n  <span class=\"hljs-keyword\">const</span> str1CharCount = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Map</span>()\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; str1.<span class=\"hljs-property\">length</span>; i++) {\n    <span class=\"hljs-keyword\">let</span> previousCount = <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">if</span> (str1CharCount.<span class=\"hljs-title function_\">has</span>(str1[i])) {\n      previousCount = str1CharCount.<span class=\"hljs-title function_\">get</span>(str1[i])\n    }\n    str1CharCount.<span class=\"hljs-title function_\">set</span>(str1[i], previousCount + <span class=\"hljs-number\">1</span>)\n  }\n\n  <span class=\"hljs-comment\">// Now check if second string has same characters?</span>\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; str2.<span class=\"hljs-property\">length</span>; i++) {\n    <span class=\"hljs-keyword\">let</span> previousCount = <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-comment\">// if str1CharCount has no key for str2[i] then not anagram.</span>\n    <span class=\"hljs-keyword\">if</span> (!str1CharCount.<span class=\"hljs-title function_\">has</span>(str2[i])) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Not anagrams&#x27;</span>\n    }\n    previousCount = str1CharCount.<span class=\"hljs-title function_\">get</span>(str2[i])\n    str1CharCount.<span class=\"hljs-title function_\">set</span>(str2[i], previousCount - <span class=\"hljs-number\">1</span>)\n  }\n\n  <span class=\"hljs-comment\">// Now check if all entries in hashmap has zeros.</span>\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> key <span class=\"hljs-keyword\">in</span> str1CharCount) {\n    <span class=\"hljs-keyword\">if</span> (str1CharCount[key] !== <span class=\"hljs-number\">0</span>) { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Not anagrams&#x27;</span> }\n  }\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Anagrams&#x27;</span>\n}\n\n<span class=\"hljs-keyword\">export</span> { checkAnagram }\n"
    },
    "php": {
      "dir": "String/CheckAnagram.php",
      "url": "https://github.com/TheAlgorithms/php/tree/master/String/CheckAnagram.php",
      "code": "<span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isAnagram</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">string</span> <span class=\"hljs-variable\">$originalString</span>, <span class=\"hljs-keyword\">string</span> <span class=\"hljs-variable\">$testString</span>, <span class=\"hljs-keyword\">bool</span> <span class=\"hljs-variable\">$caseInsensitive</span> = <span class=\"hljs-literal\">true</span></span>)\n</span>{\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$caseInsensitive</span>) \n    {\n        <span class=\"hljs-variable\">$originalString</span> = strtolower(<span class=\"hljs-variable\">$originalString</span>); <span class=\"hljs-comment\">// Converting string to lowercase for case-insensitive check</span>\n        <span class=\"hljs-variable\">$testString</span> = strtolower(<span class=\"hljs-variable\">$testString</span>);\n    }\n\n    <span class=\"hljs-comment\">//count_chars(string, mode = 1) returns key-value pairs with character as key, frequency as value</span>\n    <span class=\"hljs-comment\">//We can directly compare the arrays in this case</span>\n    <span class=\"hljs-keyword\">if</span> (count_chars(<span class=\"hljs-variable\">$originalString</span>, <span class=\"hljs-number\">1</span>) == count_chars(<span class=\"hljs-variable\">$testString</span>, <span class=\"hljs-number\">1</span>))\n    {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n    }\n    <span class=\"hljs-keyword\">else</span>\n    {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n    }\n}"
    }
  },
  "contributors": [
    {
      "name": "PalAditya",
      "email": "adityapal.nghss@gmail.com",
      "commits": 1
    },
    {
      "name": "balbaal",
      "email": "iqbal.mi20@gmail.com",
      "commits": 1
    },
    {
      "name": "techie_parth",
      "email": "parthdesai997@gmail.com",
      "commits": 1
    },
    {
      "name": "Alexandre Xavier",
      "email": "ale.bxsantos@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
