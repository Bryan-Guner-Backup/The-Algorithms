{
  "slug": "polynomial",
  "name": "Polynomial",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths/Polynomial.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/Polynomial.js",
      "code": "<span class=\"hljs-comment\">/**\n * Polynomials are algebraic expressions consisting of two or more algebraic terms.\n * Terms of a polynomial are:\n * 1. Coefficients e.g. 5, 4 in 5x^0, 4x^3 respectively\n * 2. Variables e.g. y in 3y^2\n * 3. Exponents e.g. 5 in y^5\n *\n * Class Polynomial constructs the polynomial using Array as an argument.\n * The members of array are coefficients and their indexes as exponents.\n */</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Polynomial</span> {\n  <span class=\"hljs-title function_\">constructor</span> (array) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">coefficientArray</span> = array <span class=\"hljs-comment\">// array of coefficients</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">polynomial</span> = <span class=\"hljs-string\">&#x27;&#x27;</span> <span class=\"hljs-comment\">// in terms of x e.g. (2x) + (1)</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">construct</span>()\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Function to construct the polynomial in terms of x using the coefficientArray\n   */</span>\n  construct () {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">polynomial</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">coefficientArray</span>\n      .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">coefficient, exponent</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (coefficient === <span class=\"hljs-number\">0</span>) {\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;0&#x27;</span>\n        }\n        <span class=\"hljs-keyword\">if</span> (exponent === <span class=\"hljs-number\">0</span>) {\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`(<span class=\"hljs-subst\">${coefficient}</span>)`</span>\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (exponent === <span class=\"hljs-number\">1</span>) {\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`(<span class=\"hljs-subst\">${coefficient}</span>x)`</span>\n        } <span class=\"hljs-keyword\">else</span> {\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`(<span class=\"hljs-subst\">${coefficient}</span>x^<span class=\"hljs-subst\">${exponent}</span>)`</span>\n        }\n      })\n      .<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">x</span>) =&gt;</span>\n        x !== <span class=\"hljs-string\">&#x27;0&#x27;</span>\n      )\n      .<span class=\"hljs-title function_\">reverse</span>()\n      .<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27; + &#x27;</span>)\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Function to display polynomial in terms of x\n   * <span class=\"hljs-doctag\">@returns</span> {<span class=\"hljs-type\">String</span>} of polynomial representation in terms of x\n   */</span>\n  display () {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">polynomial</span>\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Function to calculate the value of the polynomial by substituting variable x\n   * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">Number</span>} <span class=\"hljs-variable\">value</span>\n   */</span>\n  evaluate (value) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">coefficientArray</span>.<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result, coefficient, exponent</span>) =&gt;</span> {\n      <span class=\"hljs-keyword\">return</span> result + coefficient * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">pow</span>(value, exponent)\n    }, <span class=\"hljs-number\">0</span>)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> { <span class=\"hljs-title class_\">Polynomial</span> }\n"
    }
  },
  "contributors": [
    {
      "name": "Rak Laptudirm",
      "email": "68542775+raklaptudirm@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Divyajyoti Ukirde",
      "email": "30872426+divyajyotiuk@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ephraim Atta-Duncan",
      "email": "55143799+dephraiim@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
