{
  "slug": "diffie",
  "name": "Diffie",
  "categories": ["ciphers"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "ciphers/diffie.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/ciphers/diffie.py",
      "code": "<span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">Optional</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">find_primitive</span>(<span class=\"hljs-params\">n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">int</span>]:\r\n    <span class=\"hljs-keyword\">for</span> r <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, n):\r\n        li = []\r\n        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n - <span class=\"hljs-number\">1</span>):\r\n            val = <span class=\"hljs-built_in\">pow</span>(r, x, n)\r\n            <span class=\"hljs-keyword\">if</span> val <span class=\"hljs-keyword\">in</span> li:\r\n                <span class=\"hljs-keyword\">break</span>\r\n            li.append(val)\r\n        <span class=\"hljs-keyword\">else</span>:\r\n            <span class=\"hljs-keyword\">return</span> r\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">None</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    q = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter a prime number q: &quot;</span>))\r\n    a = find_primitive(q)\r\n    <span class=\"hljs-keyword\">if</span> a <span class=\"hljs-keyword\">is</span> <span class=\"hljs-literal\">None</span>:\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Cannot find the primitive for the value: <span class=\"hljs-subst\">{a!r}</span>&quot;</span>)\r\n    <span class=\"hljs-keyword\">else</span>:\r\n        a_private = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter private key of A: &quot;</span>))\r\n        a_public = <span class=\"hljs-built_in\">pow</span>(a, a_private, q)\r\n        b_private = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter private key of B: &quot;</span>))\r\n        b_public = <span class=\"hljs-built_in\">pow</span>(a, b_private, q)\r\n\r\n        a_secret = <span class=\"hljs-built_in\">pow</span>(b_public, a_private, q)\r\n        b_secret = <span class=\"hljs-built_in\">pow</span>(a_public, b_private, q)\r\n\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;The key value generated by A is: &quot;</span>, a_secret)\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;The key value generated by B is: &quot;</span>, b_secret)\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Dhruv Manilawala",
      "email": "dhruvmanila@gmail.com",
      "commits": 1
    },
    {
      "name": "Jenia Dysin",
      "email": "jenia90@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Sri Suma",
      "email": "41474384+srisumapasumarthi@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
