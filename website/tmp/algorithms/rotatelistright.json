{
  "slug": "rotatelistright",
  "name": "RotateListRight",
  "categories": ["datastructures", "linkedlist"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Data-Structures/Linked-List/RotateListRight.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Data-Structures/Linked-List/RotateListRight.js",
      "code": "<span class=\"hljs-comment\">/**\n * A LinkedList based solution for Rotating a List to the right by k places\n */</span>\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">main</span> () {\n  <span class=\"hljs-comment\">/*\n  Problem Statement:\n  Given a linked list, rotate the list to the right by k places, where k is non-negative.\n\n  Note:\n  * While Solving the problem in given link below, don&#x27;t use main() function.\n  * Just use only the code inside main() function.\n  * The purpose of using main() function here is to aviod global variables.\n\n  Link for the Problem: https://leetcode.com/problems/rotate-list/\n  */</span>\n  <span class=\"hljs-comment\">// Reference to both head and k is given in the problem. So please ignore below two lines</span>\n  <span class=\"hljs-keyword\">let</span> head = <span class=\"hljs-string\">&#x27;&#x27;</span>\n  <span class=\"hljs-keyword\">let</span> k = <span class=\"hljs-string\">&#x27;&#x27;</span>\n  <span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> current = head\n  <span class=\"hljs-keyword\">while</span> (current) {\n    i++\n    current = current.<span class=\"hljs-property\">next</span>\n  }\n  k %= i\n  current = head\n  <span class=\"hljs-keyword\">let</span> prev = <span class=\"hljs-literal\">null</span>\n  <span class=\"hljs-keyword\">while</span> (k--) {\n    <span class=\"hljs-keyword\">if</span> (!current || !current.<span class=\"hljs-property\">next</span>) {\n      <span class=\"hljs-keyword\">return</span> current\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">while</span> (current.<span class=\"hljs-property\">next</span>) {\n        prev = current\n        current = current.<span class=\"hljs-property\">next</span>\n      }\n      prev.<span class=\"hljs-property\">next</span> = current.<span class=\"hljs-property\">next</span>\n      current.<span class=\"hljs-property\">next</span> = head\n      head = current\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> head\n}\n\n<span class=\"hljs-title function_\">main</span>()\n"
    }
  },
  "contributors": [
    {
      "name": "Omkarnath Parida",
      "email": "pomkarnath98@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
