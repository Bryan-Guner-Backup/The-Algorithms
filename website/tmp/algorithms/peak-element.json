{
  "slug": "peak-element",
  "name": "Peak Element",
  "categories": ["searches"],
  "body": {},
  "implementations": {
    "dart": {
      "dir": "search/peak_element.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/search/peak_element.dart",
      "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:test/test.dart&#x27;</span>;\n\n<span class=\"hljs-built_in\">int</span> findPeakUtil(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; arr, <span class=\"hljs-built_in\">int</span> low, <span class=\"hljs-built_in\">int</span> high, <span class=\"hljs-built_in\">int</span> n) {\n  <span class=\"hljs-keyword\">var</span> x = (low + high) / <span class=\"hljs-number\">2</span>;\n  <span class=\"hljs-built_in\">int</span> mid = x.toInt();\n  <span class=\"hljs-keyword\">if</span> ((mid == <span class=\"hljs-number\">0</span> || arr[mid - <span class=\"hljs-number\">1</span>] &lt;= arr[mid]) &amp;&amp;\n      (mid == n - <span class=\"hljs-number\">1</span> || arr[mid + <span class=\"hljs-number\">1</span>] &lt;= arr[mid]))\n    <span class=\"hljs-keyword\">return</span> mid;\n  <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (mid &gt; <span class=\"hljs-number\">0</span> &amp;&amp; arr[mid - <span class=\"hljs-number\">1</span>] &gt; arr[mid])\n    <span class=\"hljs-keyword\">return</span> findPeakUtil(arr, low, (mid - <span class=\"hljs-number\">1</span>), n);\n  <span class=\"hljs-keyword\">else</span>\n    <span class=\"hljs-keyword\">return</span> findPeakUtil(arr, (mid + <span class=\"hljs-number\">1</span>), high, n);\n}\n\n<span class=\"hljs-built_in\">int</span> findPeak(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; arr, <span class=\"hljs-built_in\">int</span> n) {\n  <span class=\"hljs-keyword\">return</span> findPeakUtil(arr, <span class=\"hljs-number\">0</span>, n - <span class=\"hljs-number\">1</span>, n);\n}\n\n<span class=\"hljs-keyword\">void</span> main() {\n  test(<span class=\"hljs-string\">&quot;findPeak returns 2 for [1, 3, 20, 6, 1, 2]&quot;</span>, () {\n    <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; lst = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>];\n    expect(findPeak(lst, lst.length), equals(<span class=\"hljs-number\">2</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;findPeak returns 3 for [1, 3, 20, 32, 1, 2]&quot;</span>, () {\n    <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; lst = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">32</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>];\n    expect(findPeak(lst, lst.length), equals(<span class=\"hljs-number\">3</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;findPeak returns 2 for [321, 4353, 22320, 232, 23, 223]&quot;</span>, () {\n    <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; lst = [<span class=\"hljs-number\">321</span>, <span class=\"hljs-number\">4353</span>, <span class=\"hljs-number\">22320</span>, <span class=\"hljs-number\">232</span>, <span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">223</span>];\n    expect(findPeak(lst, lst.length), equals(<span class=\"hljs-number\">2</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;findPeak returns 2 for [121, 54, 2100, 36, 155, 90]&quot;</span>, () {\n    <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; lst = [<span class=\"hljs-number\">121</span>, <span class=\"hljs-number\">54</span>, <span class=\"hljs-number\">2100</span>, <span class=\"hljs-number\">36</span>, <span class=\"hljs-number\">155</span>, <span class=\"hljs-number\">90</span>];\n    expect(findPeak(lst, lst.length), equals(<span class=\"hljs-number\">2</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;findPeak returns 2 for [5, 10, 20, 15]&quot;</span>, () {\n    <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; lst = [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">15</span>];\n    expect(findPeak(lst, lst.length), equals(<span class=\"hljs-number\">2</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;findPeak returns 1 for [10, 20, 15, 2, 23, 90, 67]&quot;</span>, () {\n    <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; lst = [<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">67</span>];\n    expect(findPeak(lst, lst.length), equals(<span class=\"hljs-number\">1</span>));\n  });\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Parowicz",
      "email": "arturparowicz@gmail.com",
      "commits": 1
    },
    {
      "name": "Neha Hasija",
      "email": "nehahasija9@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
