{
  "slug": "permutation-sort",
  "name": "Permutation Sort",
  "categories": ["sorts"],
  "body": {},
  "implementations": {
    "aarch64_assembly": {
      "dir": "sorters/permutation_sort.s",
      "url": "https://github.com/TheAlgorithms/aarch64_assembly/tree/master/sorters/permutation_sort.s",
      "code": "<span class=\"hljs-comment\">/* ARM assembly AARCH64 Raspberry PI 3B */</span>\n<span class=\"hljs-comment\">/*  program permutationSort64.s  */</span>\n \n<span class=\"hljs-comment\">/*******************************************/</span>\n<span class=\"hljs-comment\">/* Constantes file                         */</span>\n<span class=\"hljs-comment\">/*******************************************/</span>\n<span class=\"hljs-comment\">/* for this file see task include a file in language AArch64 assembly */</span>\n<span class=\"hljs-symbol\">.include</span> <span class=\"hljs-string\">&quot;../includeConstantesARM64.inc&quot;</span>\n \n<span class=\"hljs-comment\">/*******************************************/</span>\n<span class=\"hljs-comment\">/* Structures                               */</span>\n<span class=\"hljs-comment\">/********************************************/</span>\n<span class=\"hljs-comment\">/* structure permutations  */</span>\n    .struct  <span class=\"hljs-number\">0</span>\n<span class=\"hljs-symbol\">perm_adrtable:</span>                    <span class=\"hljs-comment\">// table value address</span>\n    .struct  perm_adrtable + <span class=\"hljs-number\">8</span>\n<span class=\"hljs-symbol\">perm_size:</span>                        <span class=\"hljs-comment\">// elements number</span>\n    .struct  perm_size + <span class=\"hljs-number\">8</span>\n<span class=\"hljs-symbol\">perm_adrheap:</span>                     <span class=\"hljs-comment\">// Init to zéro at the first call</span>\n    .struct  perm_adrheap + <span class=\"hljs-number\">8</span>\n<span class=\"hljs-symbol\">perm_end:</span>\n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-comment\">/* Initialized data              */</span>\n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-symbol\">.data</span>\n<span class=\"hljs-symbol\">szMessSortOk:</span>       <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Table sorted.\\n&quot;</span>\n<span class=\"hljs-symbol\">szMessSortNok:</span>      <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Table not sorted !!!!!.\\n&quot;</span>\n<span class=\"hljs-symbol\">sMessCounter:</span>       <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;sorted in  @ permutations \\n&quot;</span>\n<span class=\"hljs-symbol\">sMessResult:</span>        <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Value  : @ \\n&quot;</span>\n \n<span class=\"hljs-symbol\">szCarriageReturn:</span>   <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;\\n&quot;</span>\n \n<span class=\"hljs-symbol\">.align</span> <span class=\"hljs-number\">4</span>\n<span class=\"hljs-comment\">#TableNumber:      .quad   1,3,6,2,5,9,10,8,4,7,11</span>\n<span class=\"hljs-symbol\">TableNumber:</span>     .quad   <span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">6</span>,-<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>\n                 <span class=\"hljs-meta\">.equ</span> NBELEMENTS, (. - TableNumber) / <span class=\"hljs-number\">8</span> \n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-comment\">/* UnInitialized data            */</span>\n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-symbol\">.bss</span>\n<span class=\"hljs-symbol\">sZoneConv:</span>       <span class=\"hljs-meta\">.skip</span> <span class=\"hljs-number\">24</span>\n<span class=\"hljs-symbol\">stPermutation:</span>   <span class=\"hljs-meta\">.skip</span> perm_end\n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-comment\">/*  code section                 */</span>\n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-symbol\">.text</span>\n<span class=\"hljs-symbol\">.global</span> main \n<span class=\"hljs-symbol\">main:</span>                                              <span class=\"hljs-comment\">// entry of program </span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrstPermutation                       <span class=\"hljs-comment\">// address structure permutation</span>\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrTableNumber                         <span class=\"hljs-comment\">// address number table</span>\n    <span class=\"hljs-keyword\">str</span> x1,[x0,perm_adrtable]\n    <span class=\"hljs-keyword\">mov</span> x1,NBELEMENTS                              <span class=\"hljs-comment\">// elements number</span>\n    <span class=\"hljs-keyword\">str</span> x1,[x0,perm_size]\n    <span class=\"hljs-keyword\">mov</span> x1,<span class=\"hljs-number\">0</span>                                       <span class=\"hljs-comment\">// first call</span>\n    <span class=\"hljs-keyword\">str</span> x1,[x0,perm_adrheap]\n    <span class=\"hljs-keyword\">mov</span> x20,<span class=\"hljs-number\">0</span>                                      <span class=\"hljs-comment\">// counter</span>\n<span class=\"hljs-number\">1</span>:\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrstPermutation                       <span class=\"hljs-comment\">// address structure permutation</span>\n    <span class=\"hljs-keyword\">bl</span> newPermutation                              <span class=\"hljs-comment\">// call for each permutation</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,<span class=\"hljs-number\">0</span>                                       <span class=\"hljs-comment\">// end ?</span>\n    <span class=\"hljs-keyword\">blt</span> <span class=\"hljs-number\">99</span>f                                        <span class=\"hljs-comment\">// yes -&gt; error</span>\n    <span class=\"hljs-comment\">//bl displayTable                              // for display after each permutation</span>\n    <span class=\"hljs-keyword\">add</span> x20,x20,<span class=\"hljs-number\">1</span>                                  <span class=\"hljs-comment\">// increment counter</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrTableNumber                         <span class=\"hljs-comment\">// address number table</span>\n    <span class=\"hljs-keyword\">mov</span> x1,NBELEMENTS                              <span class=\"hljs-comment\">// number of élements </span>\n    <span class=\"hljs-keyword\">bl</span> isSorted                                    <span class=\"hljs-comment\">// control sort</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,<span class=\"hljs-number\">1</span>                                       <span class=\"hljs-comment\">// sorted ?</span>\n    <span class=\"hljs-keyword\">bne</span> <span class=\"hljs-number\">1</span>b                                         <span class=\"hljs-comment\">// no -&gt; loop</span>\n \n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrTableNumber                         <span class=\"hljs-comment\">// address number table</span>\n    <span class=\"hljs-keyword\">bl</span> displayTable\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszMessSortOk                        <span class=\"hljs-comment\">// address OK message</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n    <span class=\"hljs-keyword\">mov</span> x0,x20                                     <span class=\"hljs-comment\">// display counter</span>\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv \n    <span class=\"hljs-keyword\">bl</span> conversion10S                               <span class=\"hljs-comment\">// décimal conversion </span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrsMessCounter\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv                           <span class=\"hljs-comment\">// insert conversion</span>\n    <span class=\"hljs-keyword\">bl</span> strInsertAtCharInc\n    <span class=\"hljs-keyword\">bl</span> affichageMess                               <span class=\"hljs-comment\">// display message</span>\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n<span class=\"hljs-number\">99</span>:\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrTableNumber                         <span class=\"hljs-comment\">// address number table</span>\n    <span class=\"hljs-keyword\">bl</span> displayTable\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszMessSortNok                       <span class=\"hljs-comment\">// address not OK message</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n<span class=\"hljs-number\">100</span>:                                               <span class=\"hljs-comment\">// standard end of the program </span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">0</span>                                       <span class=\"hljs-comment\">// return code</span>\n    <span class=\"hljs-keyword\">mov</span> x8,EXIT                                    <span class=\"hljs-comment\">// request to exit program</span>\n    <span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">0</span>                                          <span class=\"hljs-comment\">// perform the system call</span>\n \n<span class=\"hljs-symbol\">qAdrsZoneConv:</span>            .quad sZoneConv\n<span class=\"hljs-symbol\">qAdrszCarriageReturn:</span>     .quad szCarriageReturn\n<span class=\"hljs-symbol\">qAdrsMessResult:</span>          .quad sMessResult\n<span class=\"hljs-symbol\">qAdrTableNumber:</span>          .quad TableNumber\n<span class=\"hljs-symbol\">qAdrstPermutation:</span>        .quad stPermutation\n<span class=\"hljs-symbol\">qAdrszMessSortOk:</span>         .quad szMessSortOk\n<span class=\"hljs-symbol\">qAdrszMessSortNok:</span>        .quad szMessSortNok\n<span class=\"hljs-symbol\">qAdrsMessCounter:</span>         .quad sMessCounter\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     control sorted table                                   */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of table */</span>\n<span class=\"hljs-comment\">/* x1 contains the number of elements  &gt; 0  */</span>\n<span class=\"hljs-comment\">/* x0 return 0  if not sorted   1  if sorted */</span>\n<span class=\"hljs-symbol\">isSorted:</span>\n    stp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!             <span class=\"hljs-comment\">// save  registers</span>\n    stp x3,x4,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!             <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x2,<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">ldr</span> x4,[x0,x2,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]\n<span class=\"hljs-number\">1</span>:\n    <span class=\"hljs-keyword\">add</span> x2,x2,<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">cmp</span> x2,x1\n    <span class=\"hljs-keyword\">bge</span> <span class=\"hljs-number\">99</span>f\n    <span class=\"hljs-keyword\">ldr</span> x3,[x0,x2, <span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]\n    <span class=\"hljs-keyword\">cmp</span> x3,x4\n    <span class=\"hljs-keyword\">blt</span> <span class=\"hljs-number\">98</span>f\n    <span class=\"hljs-keyword\">mov</span> x4,x3\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">1</span>b\n<span class=\"hljs-number\">98</span>:\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">0</span>                       <span class=\"hljs-comment\">// not sorted</span>\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n<span class=\"hljs-number\">99</span>:\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">1</span>                       <span class=\"hljs-comment\">// sorted</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x3,x4,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                            <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/***************************************************/</span>\n<span class=\"hljs-comment\">/*   return permutation one by one                 */</span>\n<span class=\"hljs-comment\">/* sur une idée de vincent Moresmau                */</span>\n<span class=\"hljs-comment\">/* use algorytm heap iteratif see wikipedia        */</span>\n<span class=\"hljs-comment\">/***************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of structure permutations */</span>\n<span class=\"hljs-comment\">/* x0 return address  of value table or zéro if end */</span>\n<span class=\"hljs-symbol\">newPermutation:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!             <span class=\"hljs-comment\">// save  registers</span>\n    stp x2,x3,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!             <span class=\"hljs-comment\">// save  registers</span>\n    stp x4,x5,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!             <span class=\"hljs-comment\">// save  registers</span>\n    stp x6,x7,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!             <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">ldr</span> x2,[x0,perm_adrheap]\n    <span class=\"hljs-keyword\">cmp</span> x2,<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">bne</span> <span class=\"hljs-number\">2</span>f\n                                    <span class=\"hljs-comment\">// first call -&gt; init area on heap</span>\n    <span class=\"hljs-keyword\">mov</span> x7,x0\n    <span class=\"hljs-keyword\">ldr</span> x1,[x7,perm_size]\n    <span class=\"hljs-keyword\">lsl</span> x3,x1,<span class=\"hljs-number\">3</span>                     <span class=\"hljs-comment\">// 8 bytes by count table</span>\n    <span class=\"hljs-keyword\">add</span> x3,x3,<span class=\"hljs-number\">8</span>                     <span class=\"hljs-comment\">// 8 bytes for current index </span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">0</span>                        <span class=\"hljs-comment\">// allocation place heap</span>\n    <span class=\"hljs-keyword\">mov</span> x8,BRK                      <span class=\"hljs-comment\">// call system &#x27;brk&#x27;</span>\n    <span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">mov</span> x2,x0                       <span class=\"hljs-comment\">// save address heap</span>\n    <span class=\"hljs-keyword\">add</span> x0,x0,x3                    <span class=\"hljs-comment\">// reservation place</span>\n    <span class=\"hljs-keyword\">mov</span> x8,BRK                      <span class=\"hljs-comment\">// call system &#x27;brk&#x27;</span>\n    <span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">#0</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,-<span class=\"hljs-number\">1</span>                       <span class=\"hljs-comment\">// allocation error</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">100</span>f\n    <span class=\"hljs-keyword\">add</span> x8,x2,<span class=\"hljs-number\">8</span>                     <span class=\"hljs-comment\">// address begin area counters</span>\n    <span class=\"hljs-keyword\">mov</span> x3,<span class=\"hljs-number\">0</span>\n<span class=\"hljs-number\">1</span>:                                  <span class=\"hljs-comment\">// loop init</span>\n    <span class=\"hljs-keyword\">str</span> xzr,[x8,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]           <span class=\"hljs-comment\">// init to zéro area heap</span>\n    <span class=\"hljs-keyword\">add</span> x3,x3,<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">cmp</span> x3,x1\n    <span class=\"hljs-keyword\">blt</span> <span class=\"hljs-number\">1</span>b\n    <span class=\"hljs-keyword\">str</span> xzr,[x2]                    <span class=\"hljs-comment\">// store zero to index </span>\n    <span class=\"hljs-keyword\">str</span> x2,[x7,perm_adrheap]        <span class=\"hljs-comment\">// store heap address on structure permutation</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x7,perm_adrtable]       <span class=\"hljs-comment\">// return first permutation</span>\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n \n<span class=\"hljs-number\">2</span>:                                  <span class=\"hljs-comment\">// other calls x2 contains heap address</span>\n    <span class=\"hljs-keyword\">mov</span> x7,x0                       <span class=\"hljs-comment\">// structure address </span>\n    <span class=\"hljs-keyword\">ldr</span> x1,[x7,perm_size]           <span class=\"hljs-comment\">// elements number</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x7,perm_adrtable]  \n    <span class=\"hljs-keyword\">add</span> x8,x2,<span class=\"hljs-number\">8</span>                     <span class=\"hljs-comment\">// begin address area count</span>\n    <span class=\"hljs-keyword\">ldr</span> x3,[x2]                     <span class=\"hljs-comment\">// load current index</span>\n<span class=\"hljs-number\">3</span>:\n    <span class=\"hljs-keyword\">ldr</span> x4,[x8,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]            <span class=\"hljs-comment\">// load count [i]</span>\n    <span class=\"hljs-keyword\">cmp</span> x4,x3                       <span class=\"hljs-comment\">// compare with i</span>\n    <span class=\"hljs-keyword\">bge</span> <span class=\"hljs-number\">6</span>f\n    <span class=\"hljs-keyword\">tst</span> x3,<span class=\"hljs-number\">#1</span>                       <span class=\"hljs-comment\">// even ?</span>\n    <span class=\"hljs-keyword\">bne</span> <span class=\"hljs-number\">4</span>f\n    <span class=\"hljs-keyword\">ldr</span> x5,[x0]                     <span class=\"hljs-comment\">// yes load value A[0]</span>\n    <span class=\"hljs-keyword\">ldr</span> x6,[x0,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]            <span class=\"hljs-comment\">// and swap with value A[i]</span>\n    <span class=\"hljs-keyword\">str</span> x6,[x0]\n    <span class=\"hljs-keyword\">str</span> x5,[x0,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">5</span>f\n<span class=\"hljs-number\">4</span>:\n    <span class=\"hljs-keyword\">ldr</span> x5,[x0,x4,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]            <span class=\"hljs-comment\">// no load value A[count[i]]</span>\n    <span class=\"hljs-keyword\">ldr</span> x6,[x0,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]            <span class=\"hljs-comment\">// and swap with value A[i]</span>\n    <span class=\"hljs-keyword\">str</span> x6,[x0,x4,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]\n    <span class=\"hljs-keyword\">str</span> x5,[x0,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]\n<span class=\"hljs-number\">5</span>:\n    <span class=\"hljs-keyword\">add</span> x4,x4,<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">str</span> x4,[x8,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]            <span class=\"hljs-comment\">// store new count [i]</span>\n    <span class=\"hljs-keyword\">str</span> xzr,[x2]                    <span class=\"hljs-comment\">// store new index</span>\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f                          <span class=\"hljs-comment\">// and return new permutation in x0</span>\n<span class=\"hljs-number\">6</span>:\n    <span class=\"hljs-keyword\">str</span> xzr,[x8,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]           <span class=\"hljs-comment\">// store zero in count [i]</span>\n    <span class=\"hljs-keyword\">add</span> x3,x3,<span class=\"hljs-number\">1</span>                     <span class=\"hljs-comment\">// increment index</span>\n    <span class=\"hljs-keyword\">cmp</span> x3,x1                       <span class=\"hljs-comment\">// end </span>\n    <span class=\"hljs-keyword\">blt</span> <span class=\"hljs-number\">3</span>b                          <span class=\"hljs-comment\">// loop </span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">0</span>                        <span class=\"hljs-comment\">// if end -&gt; return zero</span>\n \n <span class=\"hljs-number\">100</span>:                               <span class=\"hljs-comment\">// end function</span>\n    ldp x6,x7,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  1 register</span>\n    ldp x4,x5,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  1 register</span>\n    ldp x2,x3,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                             <span class=\"hljs-comment\">// return to address lr x30</span>\n \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*      Display table elements                                */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of table */</span>\n<span class=\"hljs-symbol\">displayTable:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!              <span class=\"hljs-comment\">// save  registers</span>\n    stp x2,x3,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!              <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x2,x0                        <span class=\"hljs-comment\">// table address</span>\n    <span class=\"hljs-keyword\">mov</span> x3,<span class=\"hljs-number\">0</span>\n<span class=\"hljs-number\">1</span>:                                   <span class=\"hljs-comment\">// loop display table</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x2,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv\n    <span class=\"hljs-keyword\">bl</span> conversion10S                  <span class=\"hljs-comment\">// décimal conversion</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrsMessResult\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv\n    <span class=\"hljs-keyword\">bl</span> strInsertAtCharInc            <span class=\"hljs-comment\">// insert result at // character</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess                 <span class=\"hljs-comment\">// display message</span>\n    <span class=\"hljs-keyword\">add</span> x3,x3,<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">cmp</span> x3,NBELEMENTS - <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">ble</span> <span class=\"hljs-number\">1</span>b\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszCarriageReturn\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n    <span class=\"hljs-keyword\">mov</span> x0,x2\n<span class=\"hljs-number\">100</span>:\n    ldp x2,x3,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                             <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/********************************************************/</span>\n<span class=\"hljs-comment\">/*        File Include fonctions                        */</span>\n<span class=\"hljs-comment\">/********************************************************/</span>\n<span class=\"hljs-comment\">/* for this file see task include a file in language AArch64 assembly */</span>\n<span class=\"hljs-symbol\">.include</span> <span class=\"hljs-string\">&quot;../includeARM64.inc&quot;</span>\n"
    },
    "matlab-octave": {
      "dir": "algorithms/sorting/permutationSort.m",
      "url": "https://github.com/TheAlgorithms/matlab-octave/tree/master/algorithms/sorting/permutationSort.m",
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">list</span> = <span class=\"hljs-title\">permutationSort</span><span class=\"hljs-params\">(list)</span></span>\n \n    permutations = <span class=\"hljs-built_in\">perms</span>(<span class=\"hljs-number\">1</span>:<span class=\"hljs-built_in\">numel</span>(list)); <span class=\"hljs-comment\">%Generate all permutations of the item indicies </span>\n \n    <span class=\"hljs-comment\">%Test every permutation of the indicies of the original list</span>\n    <span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">i</span> = (<span class=\"hljs-number\">1</span>:<span class=\"hljs-built_in\">size</span>(permutations,<span class=\"hljs-number\">1</span>))\n        <span class=\"hljs-keyword\">if</span> issorted( list(permutations(<span class=\"hljs-built_in\">i</span>,:)) )\n            list = list(permutations(<span class=\"hljs-built_in\">i</span>,:));\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-comment\">%Once the correct permutation of the original list is found break out of the program</span>\n        <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">end</span>\n \n<span class=\"hljs-keyword\">end</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Mertcan Davulcu",
      "email": "54983926+mertcandav@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "puneet-pr-arya",
      "email": "71585635+puneet-pr-arya@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
