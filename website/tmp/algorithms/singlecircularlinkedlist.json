{
  "slug": "singlecircularlinkedlist",
  "name": "SingleCircularLinkedList",
  "categories": ["datastructures", "linkedlist"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Data-Structures/Linked-List/SingleCircularLinkedList.js.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Data-Structures/Linked-List/SingleCircularLinkedList.js.js",
      "code": "<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Node</span> {\n  <span class=\"hljs-title function_\">constructor</span> (data, next = <span class=\"hljs-literal\">null</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">data</span> = data\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">next</span> = next\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SinglyCircularLinkedList</span> {\n  <span class=\"hljs-title function_\">constructor</span> () {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span> = <span class=\"hljs-literal\">null</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span> = <span class=\"hljs-number\">0</span>\n  }\n\n  insert (data) {\n    <span class=\"hljs-keyword\">const</span> node = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Node</span>(data)\n\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>) {\n      node.<span class=\"hljs-property\">next</span> = node\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span> = node\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>++\n    } <span class=\"hljs-keyword\">else</span> {\n      node.<span class=\"hljs-property\">next</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>\n\n      <span class=\"hljs-keyword\">let</span> current = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>\n\n      <span class=\"hljs-keyword\">while</span> (current.<span class=\"hljs-property\">next</span>.<span class=\"hljs-property\">data</span> !== <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>.<span class=\"hljs-property\">data</span>) {\n        current = current.<span class=\"hljs-property\">next</span>\n      }\n\n      current.<span class=\"hljs-property\">next</span> = node\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>++\n    }\n  }\n\n  insertAt (index, data) {\n    <span class=\"hljs-keyword\">const</span> node = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Node</span>(data)\n\n    <span class=\"hljs-keyword\">if</span> (index &lt; <span class=\"hljs-number\">0</span> || index &gt; <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>) <span class=\"hljs-keyword\">return</span>\n\n    <span class=\"hljs-keyword\">if</span> (index === <span class=\"hljs-number\">0</span>) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span> = node\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span> = <span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">return</span>\n    }\n\n    <span class=\"hljs-keyword\">let</span> previous\n    <span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">let</span> current = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>\n\n    <span class=\"hljs-keyword\">while</span> (count &lt; index) {\n      previous = current\n      current = current.<span class=\"hljs-property\">next</span>\n      count++\n    }\n\n    node.<span class=\"hljs-property\">next</span> = current\n    previous.<span class=\"hljs-property\">next</span> = node\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>++\n  }\n\n  remove () {\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>) <span class=\"hljs-keyword\">return</span>\n\n    <span class=\"hljs-keyword\">let</span> prev\n    <span class=\"hljs-keyword\">let</span> current = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>\n\n    <span class=\"hljs-keyword\">while</span> (current.<span class=\"hljs-property\">next</span> !== <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>) {\n      prev = current\n      current = current.<span class=\"hljs-property\">next</span>\n    }\n\n    prev.<span class=\"hljs-property\">next</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>--\n  }\n\n  printData () {\n    <span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">let</span> current = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">head</span>\n\n    <span class=\"hljs-keyword\">while</span> (current !== <span class=\"hljs-literal\">null</span> &amp;&amp; count !== <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>) {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(current.<span class=\"hljs-property\">data</span> + <span class=\"hljs-string\">&#x27;\\n&#x27;</span>)\n      current = current.<span class=\"hljs-property\">next</span>\n      count++\n    }\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> ll = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SinglyCircularLinkedList</span>()\n\nll.<span class=\"hljs-title function_\">insert</span>(<span class=\"hljs-number\">10</span>)\nll.<span class=\"hljs-title function_\">insert</span>(<span class=\"hljs-number\">20</span>)\nll.<span class=\"hljs-title function_\">insert</span>(<span class=\"hljs-number\">30</span>)\nll.<span class=\"hljs-title function_\">insert</span>(<span class=\"hljs-number\">40</span>)\nll.<span class=\"hljs-title function_\">insert</span>(<span class=\"hljs-number\">50</span>)\nll.<span class=\"hljs-title function_\">insertAt</span>(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">60</span>)\nll.<span class=\"hljs-title function_\">remove</span>(<span class=\"hljs-number\">5</span>)\nll.<span class=\"hljs-title function_\">printData</span>()\n"
    }
  },
  "contributors": [
    {
      "name": "parhan",
      "email": "57286339+apriliandi246@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
