{
  "slug": "graph2",
  "name": "Graph2",
  "categories": ["datastructures", "graphs"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Data-Structures/Graph/Graph2.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Data-Structures/Graph/Graph2.js",
      "code": "<span class=\"hljs-comment\">// create a graph class</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Graph</span> {\n  <span class=\"hljs-comment\">// defining vertex array and</span>\n  <span class=\"hljs-comment\">// adjacent list</span>\n  <span class=\"hljs-title function_\">constructor</span> (noOfVertices) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noOfVertices</span> = noOfVertices\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">AdjList</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Map</span>()\n  }\n\n  <span class=\"hljs-comment\">// functions to be implemented</span>\n\n  <span class=\"hljs-comment\">// addVertex(v)</span>\n  <span class=\"hljs-comment\">// addEdge(v, w)</span>\n  <span class=\"hljs-comment\">// printGraph()</span>\n\n  <span class=\"hljs-comment\">// bfs(v)</span>\n  <span class=\"hljs-comment\">// dfs(v)</span>\n\n  <span class=\"hljs-comment\">// add vertex to the graph</span>\n  addVertex (v) {\n    <span class=\"hljs-comment\">// initialize the adjacent list with a</span>\n    <span class=\"hljs-comment\">// null array</span>\n\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">AdjList</span>.<span class=\"hljs-title function_\">set</span>(v, [])\n  }\n\n  <span class=\"hljs-comment\">// add edge to the graph</span>\n  addEdge (v, w) {\n    <span class=\"hljs-comment\">// get the list for vertex v and put the</span>\n    <span class=\"hljs-comment\">// vertex w denoting edge between v and w</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">AdjList</span>.<span class=\"hljs-title function_\">get</span>(v).<span class=\"hljs-title function_\">push</span>(w)\n\n    <span class=\"hljs-comment\">// Since graph is undirected,</span>\n    <span class=\"hljs-comment\">// add an edge from w to v also</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">AdjList</span>.<span class=\"hljs-title function_\">get</span>(w).<span class=\"hljs-title function_\">push</span>(v)\n  }\n\n  <span class=\"hljs-comment\">// Prints the vertex and adjacency list</span>\n  printGraph () {\n    <span class=\"hljs-comment\">// get all the vertices</span>\n    <span class=\"hljs-keyword\">const</span> getKeys = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">AdjList</span>.<span class=\"hljs-title function_\">keys</span>()\n\n    <span class=\"hljs-comment\">// iterate over the vertices</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> i <span class=\"hljs-keyword\">of</span> getKeys) {\n      <span class=\"hljs-comment\">// great the corresponding adjacency list</span>\n      <span class=\"hljs-comment\">// for the vertex</span>\n      <span class=\"hljs-keyword\">const</span> getValues = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">AdjList</span>.<span class=\"hljs-title function_\">get</span>(i)\n      <span class=\"hljs-keyword\">let</span> conc = <span class=\"hljs-string\">&#x27;&#x27;</span>\n\n      <span class=\"hljs-comment\">// iterate over the adjacency list</span>\n      <span class=\"hljs-comment\">// concatenate the values into a string</span>\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> j <span class=\"hljs-keyword\">of</span> getValues) {\n        conc += j + <span class=\"hljs-string\">&#x27; &#x27;</span>\n      }\n\n      <span class=\"hljs-comment\">// print the vertex and its adjacency list</span>\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(i + <span class=\"hljs-string\">&#x27; -&gt; &#x27;</span> + conc)\n    }\n  }\n}\n<span class=\"hljs-comment\">// Example</span>\n<span class=\"hljs-keyword\">const</span> graph = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Graph</span>(<span class=\"hljs-number\">6</span>)\n<span class=\"hljs-keyword\">const</span> vertices = [<span class=\"hljs-string\">&#x27;A&#x27;</span>, <span class=\"hljs-string\">&#x27;B&#x27;</span>, <span class=\"hljs-string\">&#x27;C&#x27;</span>, <span class=\"hljs-string\">&#x27;D&#x27;</span>, <span class=\"hljs-string\">&#x27;E&#x27;</span>, <span class=\"hljs-string\">&#x27;F&#x27;</span>]\n\n<span class=\"hljs-comment\">// adding vertices</span>\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; vertices.<span class=\"hljs-property\">length</span>; i++) {\n  graph.<span class=\"hljs-title function_\">addVertex</span>(vertices[i])\n}\n\n<span class=\"hljs-comment\">// adding edges</span>\ngraph.<span class=\"hljs-title function_\">addEdge</span>(<span class=\"hljs-string\">&#x27;A&#x27;</span>, <span class=\"hljs-string\">&#x27;B&#x27;</span>)\ngraph.<span class=\"hljs-title function_\">addEdge</span>(<span class=\"hljs-string\">&#x27;A&#x27;</span>, <span class=\"hljs-string\">&#x27;D&#x27;</span>)\ngraph.<span class=\"hljs-title function_\">addEdge</span>(<span class=\"hljs-string\">&#x27;A&#x27;</span>, <span class=\"hljs-string\">&#x27;E&#x27;</span>)\ngraph.<span class=\"hljs-title function_\">addEdge</span>(<span class=\"hljs-string\">&#x27;B&#x27;</span>, <span class=\"hljs-string\">&#x27;C&#x27;</span>)\ngraph.<span class=\"hljs-title function_\">addEdge</span>(<span class=\"hljs-string\">&#x27;D&#x27;</span>, <span class=\"hljs-string\">&#x27;E&#x27;</span>)\ngraph.<span class=\"hljs-title function_\">addEdge</span>(<span class=\"hljs-string\">&#x27;E&#x27;</span>, <span class=\"hljs-string\">&#x27;F&#x27;</span>)\ngraph.<span class=\"hljs-title function_\">addEdge</span>(<span class=\"hljs-string\">&#x27;E&#x27;</span>, <span class=\"hljs-string\">&#x27;C&#x27;</span>)\ngraph.<span class=\"hljs-title function_\">addEdge</span>(<span class=\"hljs-string\">&#x27;C&#x27;</span>, <span class=\"hljs-string\">&#x27;F&#x27;</span>)\n\n<span class=\"hljs-comment\">// prints all vertex and</span>\n<span class=\"hljs-comment\">// its adjacency list</span>\n<span class=\"hljs-comment\">// A -&gt; B D E</span>\n<span class=\"hljs-comment\">// B -&gt; A C</span>\n<span class=\"hljs-comment\">// C -&gt; B E F</span>\n<span class=\"hljs-comment\">// D -&gt; A E</span>\n<span class=\"hljs-comment\">// E -&gt; A D F C</span>\n<span class=\"hljs-comment\">// F -&gt; E C</span>\ngraph.<span class=\"hljs-title function_\">printGraph</span>()\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
