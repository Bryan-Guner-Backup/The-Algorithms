{
  "slug": "tic-tac-toe",
  "name": "Tic Tac Toe",
  "categories": ["games"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "games/tic_tac_toe.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/games/tic_tac_toe.c",
      "code": "<span class=\"hljs-comment\">/**\n * @file tic-tac-toe.c\n * @author [vivekboss99](github.com/vivekboss99)\n * @author [Krishna Vedala](https://github.com/kvedala)\n * @brief [Tic-Tac-Toe game](https://en.wikipedia.org/wiki/Tic-tac-toe)\n * implementation in C\n * @details  Tic-Tac-Toe Game,where the user can decide to play with the\n * computer(single player mode) or with other user(double player mode) , the\n * code as an array named &#x27;game_table&#x27; which is the table and user needs to enter the\n * position inside the array(from 1-9) where he/she wants to place &#x27;X&#x27; or &#x27;O&#x27; on the\n * table.\n */</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdlib.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;time.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;string.h&gt;</span></span>\n\n<span class=\"hljs-comment\">// Functions Declarations</span>\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">singlemode</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">doublemode</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">placex</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>)</span>;  <span class=\"hljs-comment\">// used for placing position of X by the 1st player</span>\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">place</span><span class=\"hljs-params\">()</span>;      <span class=\"hljs-comment\">// used by the computer to place O</span>\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">placey</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>)</span>;  <span class=\"hljs-comment\">// used in Double Player mode by the 2nd player to</span>\n                          <span class=\"hljs-comment\">// place the position of O</span>\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">checkwin</span><span class=\"hljs-params\">()</span>;  <span class=\"hljs-comment\">// checks everytime when a player or computer places &#x27;X&#x27; or &#x27;O&#x27;</span>\n\n<span class=\"hljs-comment\">/** Tic-Tac-Toe table, so basically we are using variable &#x27;game_table&#x27; as the table(size:3X3) and\n * updating it regularly\n */</span>\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">char</span> game_table[<span class=\"hljs-number\">9</span>];\n\n<span class=\"hljs-comment\">/**\n * Main program function.\n * @returns 0 on clean exit. \n * @note No checks are included for program execution failures!\n */</span>\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\n{   \n    srand( (<span class=\"hljs-type\">unsigned</span> <span class=\"hljs-type\">int</span>)time(<span class=\"hljs-literal\">NULL</span>));\n    <span class=\"hljs-type\">int</span> l = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">do</span>\n    {\n        <span class=\"hljs-type\">int</span> n = <span class=\"hljs-number\">0</span>;\n\n        <span class=\"hljs-comment\">// filling the table with multiple asterisks</span>\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">9</span>; i++) game_table[i] = <span class=\"hljs-string\">&#x27;*&#x27;</span>;\n\n        <span class=\"hljs-comment\">// displaying the main menu</span>\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;***************************************\\n&quot;</span>);\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;*************TIC TAC TOE***************\\n&quot;</span>);\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;***************************************\\n&quot;</span>);\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;***********1. YOU vs COMPUTER ***********\\n&quot;</span>);\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;***********2. YOU vs PLAYER ***********\\n&quot;</span>);\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;***********3.EXIT *********************\\n&quot;</span>);\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Enter your choice : &quot;</span>);\n        <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;n);\n\n        <span class=\"hljs-keyword\">switch</span> (n)  <span class=\"hljs-comment\">// switch case to select between single player mode or</span>\n                    <span class=\"hljs-comment\">// double player mode</span>\n        {\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">1</span>:\n            singlemode();\n            <span class=\"hljs-keyword\">break</span>;\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:\n            doublemode();\n            <span class=\"hljs-keyword\">break</span>;\n        <span class=\"hljs-keyword\">default</span>:\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;THANK YOU and EXIT!&quot;</span>);\n        }\n\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Next game ? : &quot;</span>);\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Enter 1 â€“ YES and 0 - NO &quot;</span>);\n        <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;l);\n\n    } <span class=\"hljs-keyword\">while</span> (l == <span class=\"hljs-number\">1</span>);\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-comment\">/**\n * @brief Implementation of game vs computer\n *\n * @returns None\n */</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">singlemode</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-type\">int</span> m;\n    <span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-type\">int</span> table_fill_count=<span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">3</span>; i++)\n    {\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-number\">3</span>; j++)\n        {\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%c &quot;</span>, game_table[k]);\n            k++;\n        }\n\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> x = <span class=\"hljs-number\">1</span>; x &lt; <span class=\"hljs-number\">10</span>; x++)\n    {\n        k = <span class=\"hljs-number\">0</span>;\n\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Where would you like to place &#x27;x&#x27; &quot;</span>);\n        <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;m);\n\n        placex(m);\n        <span class=\"hljs-keyword\">if</span>(table_fill_count&lt;<span class=\"hljs-number\">4</span>)\n        {\n          place();\n        }\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">3</span>; i++)\n        {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-number\">3</span>; j++)\n            {\n                <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%c &quot;</span>, game_table[k]);\n                k++;\n\n            }\n\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n        }\n        table_fill_count++;\n        <span class=\"hljs-type\">int</span> o = checkwin();\n\n        <span class=\"hljs-keyword\">if</span> (o == <span class=\"hljs-number\">-1</span> || o == <span class=\"hljs-number\">-2</span>)\n        {\n            <span class=\"hljs-keyword\">if</span> (o == <span class=\"hljs-number\">-1</span>)\n            {\n                <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;YOU WIN\\n&quot;</span>);\n            }\n            <span class=\"hljs-keyword\">if</span> (o == <span class=\"hljs-number\">-2</span>)\n            {\n                <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;YOU LOSE\\n&quot;</span>);\n            }\n\n            <span class=\"hljs-keyword\">break</span>;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (table_fill_count==<span class=\"hljs-number\">4</span>)\n        {\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\nDRAW &quot;</span>);\n            <span class=\"hljs-keyword\">break</span>;\n        }\n    }\n}\n\n<span class=\"hljs-comment\">/**\n * @brief Implementation of game vs another player.\n *\n * @returns None\n */</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">doublemode</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-type\">int</span> m;\n    <span class=\"hljs-type\">int</span> e1;\n    <span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-type\">int</span> doublemode_table_count=<span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">3</span>; i++)\n    {\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-number\">3</span>; j++)\n        {\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%c &quot;</span>, game_table[k]);\n            k++;\n        }\n\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n    }\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> x = <span class=\"hljs-number\">1</span>; x &lt; <span class=\"hljs-number\">10</span>; x++)\n    {\n        k = <span class=\"hljs-number\">0</span>;\n\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;PLAYER1 - where would you like to place &#x27;x&#x27; : &quot;</span>);\n        <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;m);\n\n        placex(m);\n        <span class=\"hljs-keyword\">if</span>(doublemode_table_count&lt;<span class=\"hljs-number\">4</span>)\n        {\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;PLAYER2 - where would you like to place &#x27;o&#x27; : &quot;</span>);\n        <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;e1);\n\n        placey(e1);\n        }\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">3</span>; i++)\n        {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-number\">3</span>; j++)\n            {\n                <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%c &quot;</span>, game_table[k]);\n                k++;\n            }\n\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n        }\n        doublemode_table_count++;\n        <span class=\"hljs-type\">int</span> o = checkwin();\n\n        <span class=\"hljs-keyword\">if</span> (o == <span class=\"hljs-number\">-1</span> || o == <span class=\"hljs-number\">-2</span>)\n        {\n            <span class=\"hljs-keyword\">if</span> (o == <span class=\"hljs-number\">-1</span>)\n            {\n                <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Player 1 WIN\\n&quot;</span>);\n            }\n            <span class=\"hljs-keyword\">if</span> (o == <span class=\"hljs-number\">-2</span>)\n            {\n                <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Player 2 WIN\\n&quot;</span>);\n            }\n\n            <span class=\"hljs-keyword\">break</span>;\n        }\n        <span class=\"hljs-keyword\">if</span> (doublemode_table_count==<span class=\"hljs-number\">4</span>)\n        {\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\nDRAW &quot;</span>);\n            <span class=\"hljs-keyword\">break</span>;\n        }\n    }\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">check_placex</span><span class=\"hljs-params\">()</span>{\n\t<span class=\"hljs-type\">char</span> input[<span class=\"hljs-number\">50</span>];\n\t<span class=\"hljs-type\">int</span> n1;\n\t<span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>){\n\t\tfgets(input,<span class=\"hljs-number\">49</span>,<span class=\"hljs-built_in\">stdin</span>);\n\t\t<span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-built_in\">strlen</span>(input) &gt; <span class=\"hljs-number\">2</span> || <span class=\"hljs-built_in\">strlen</span>(input)  == <span class=\"hljs-number\">0</span>){\n\t\t\t<span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>,<span class=\"hljs-string\">&quot;Invalid move, Enter number 1 - 9: &quot;</span>);\n\t\t\t<span class=\"hljs-keyword\">continue</span>;\n\t\t}\n\t\t<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">sscanf</span>(input,<span class=\"hljs-string\">&quot;%d&quot;</span>,&amp;n1) != <span class=\"hljs-number\">1</span>){\n\t\t\t<span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>,<span class=\"hljs-string\">&quot;Invalid move, Enter number 1 - 9: &quot;</span>);\n\t\t\t<span class=\"hljs-keyword\">continue</span>;\n\t\t} \n\t\t<span class=\"hljs-keyword\">if</span> ((game_table[n1<span class=\"hljs-number\">-1</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span>) || (game_table[n1<span class=\"hljs-number\">-1</span>]) == <span class=\"hljs-string\">&#x27;o&#x27;</span> || (n1== <span class=\"hljs-number\">0</span>)){\n\t\t\t<span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>,<span class=\"hljs-string\">&quot;Already allocated, Enter number: &quot;</span>);\n\t\t\t<span class=\"hljs-keyword\">continue</span>;\n\t\t}\n\t\t<span class=\"hljs-keyword\">return</span> n1;\n\t}\n}\t\n\n\n\n\n\n<span class=\"hljs-comment\">/**\n * @brief Update table by placing an `X`\n *\n * @param m location to place `X`\n *\n * @returns None\n */</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">placex</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> m)</span>\n{\n    <span class=\"hljs-type\">int</span> n1 = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span> (m &gt;= <span class=\"hljs-number\">1</span> &amp;&amp; m &lt;= <span class=\"hljs-number\">9</span>)\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[m - <span class=\"hljs-number\">1</span>] != <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[m - <span class=\"hljs-number\">1</span>] != <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            game_table[m - <span class=\"hljs-number\">1</span>] = <span class=\"hljs-string\">&#x27;x&#x27;</span>;\n        }\n        <span class=\"hljs-keyword\">else</span>\n        {\n\t\t\t<span class=\"hljs-type\">int</span> n = check_placex();\n\t\t\tplacex(n);\n        }\n    }\n    <span class=\"hljs-keyword\">else</span>\n    {\n\t\t<span class=\"hljs-type\">int</span> n = check_placex();\n\t\tplacex(n);\n    }\n}\n<span class=\"hljs-comment\">/**\n * @brief Update table by placing an `O`\n *\n * @returns None\n */</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">place</span><span class=\"hljs-params\">()</span>\n{\n\n    <span class=\"hljs-type\">int</span> e = rand() % <span class=\"hljs-number\">9</span>;\n\n    <span class=\"hljs-keyword\">if</span> (e &gt;= <span class=\"hljs-number\">0</span> &amp;&amp; e &lt;= <span class=\"hljs-number\">8</span>)\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[e] != <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[e] != <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            game_table[e] = <span class=\"hljs-string\">&#x27;o&#x27;</span>;\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n Computer placed at %d position\\n&quot;</span>, e + <span class=\"hljs-number\">1</span>);\n        }\n        <span class=\"hljs-keyword\">else</span>\n        {\n            place();\n        }\n    }\n}\n<span class=\"hljs-comment\">/**\n * @brief Update table by placing an `O`\n *\n * @param e1 location to place `O`\n *\n * @returns None\n */</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">placey</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> e1)</span>\n{\n    <span class=\"hljs-type\">int</span> n1 = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span> (e1 &gt;= <span class=\"hljs-number\">1</span> &amp;&amp; e1 &lt;= <span class=\"hljs-number\">9</span>)\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[e1 - <span class=\"hljs-number\">1</span>] != <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[e1 - <span class=\"hljs-number\">1</span>] != <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            game_table[e1 - <span class=\"hljs-number\">1</span>] = <span class=\"hljs-string\">&#x27;o&#x27;</span>;\n        }\n        <span class=\"hljs-keyword\">else</span>\n        {\n\t\t\t<span class=\"hljs-type\">int</span> n = check_placex();\n\t\t\tplacex(n);\n        }\n    }\n    <span class=\"hljs-keyword\">else</span>\n    {\n\t\t<span class=\"hljs-type\">int</span> n = check_placex();\n\t\tplacex(n);\n    }\n}\n<span class=\"hljs-comment\">/**\n * @brief Implementation of win conditon checker for &#x27;X&#x27; or &#x27;O&#x27; whenever the table is updated\n *\n * @returns -1: if &#x27;X&#x27; won \n * @returns -2: if &#x27;O&#x27; won\n * @returns 0: if there is no win condition for &#x27;X&#x27; or &#x27;O&#x27; \n */</span>\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">checkwin</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">0</span>] == game_table[<span class=\"hljs-number\">1</span>] &amp;&amp; game_table[<span class=\"hljs-number\">1</span>] == game_table[<span class=\"hljs-number\">2</span>])\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">1</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">2</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">1</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">2</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-2</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">0</span>] == game_table[<span class=\"hljs-number\">4</span>] &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == game_table[<span class=\"hljs-number\">8</span>])\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">8</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">8</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-2</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">0</span>] == game_table[<span class=\"hljs-number\">3</span>] &amp;&amp; game_table[<span class=\"hljs-number\">3</span>] == game_table[<span class=\"hljs-number\">6</span>])\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">3</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">6</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">3</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">6</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-2</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">3</span>] == game_table[<span class=\"hljs-number\">4</span>] &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == game_table[<span class=\"hljs-number\">5</span>])\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">3</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">5</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">3</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">5</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-2</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">6</span>] == game_table[<span class=\"hljs-number\">7</span>] &amp;&amp; game_table[<span class=\"hljs-number\">7</span>] == game_table[<span class=\"hljs-number\">8</span>])\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">6</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">7</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">8</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">6</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">7</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">8</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-2</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">1</span>] == game_table[<span class=\"hljs-number\">4</span>] &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == game_table[<span class=\"hljs-number\">7</span>])\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">1</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">7</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">1</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">7</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-2</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">2</span>] == game_table[<span class=\"hljs-number\">5</span>] &amp;&amp; game_table[<span class=\"hljs-number\">5</span>] == game_table[<span class=\"hljs-number\">8</span>])\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">2</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">5</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">8</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">2</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">5</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">8</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-2</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">2</span>] == game_table[<span class=\"hljs-number\">4</span>] &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == game_table[<span class=\"hljs-number\">6</span>])\n    {\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">2</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">6</span>] == <span class=\"hljs-string\">&#x27;x&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (game_table[<span class=\"hljs-number\">2</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp; game_table[<span class=\"hljs-number\">4</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span> &amp;&amp;\n            game_table[<span class=\"hljs-number\">6</span>] == <span class=\"hljs-string\">&#x27;o&#x27;</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-2</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    },
    "matlab-octave": {
      "dir": "algorithms/other/tic_tac_toe.m",
      "url": "https://github.com/TheAlgorithms/matlab-octave/tree/master/algorithms/other/tic_tac_toe.m",
      "code": "<span class=\"hljs-comment\">% Author: Syed Haseeb Shah (QuantumNovice)</span>\n<span class=\"hljs-comment\">%Simple Tic Tac Toe</span>\n\n<span class=\"hljs-comment\">% Creates a row vector</span>\nspace = <span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">9</span>;\n\n<span class=\"hljs-comment\">% Converts it into matrix</span>\nspace = <span class=\"hljs-built_in\">reshape</span>(space,[<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>]);\nspace = string(space);\n\nmarker = <span class=\"hljs-string\">&#x27;O&#x27;</span>;\nreset = <span class=\"hljs-number\">0</span>;\nchanges = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-keyword\">for</span> r = <span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">3</span>\n    <span class=\"hljs-built_in\">disp</span>( space(r,<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;   |   &quot;</span> + space(r,<span class=\"hljs-number\">2</span>) + <span class=\"hljs-string\">&quot;   |   &quot;</span> +space(r,<span class=\"hljs-number\">3</span>) )\n    <span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&#x27;    |       |&#x27;</span>)\n    <span class=\"hljs-built_in\">disp</span>( <span class=\"hljs-string\">&#x27;___________________&#x27;</span>)\n<span class=\"hljs-keyword\">end</span>\n    \n<span class=\"hljs-keyword\">while</span> reset ~= <span class=\"hljs-number\">1</span>\n\n    pos = input( char(<span class=\"hljs-string\">&quot;Player (&quot;</span>+marker+<span class=\"hljs-string\">&quot;)&lt;&lt; &quot;</span>));\n    \n    <span class=\"hljs-keyword\">if</span> and(space(pos) ~= <span class=\"hljs-string\">&#x27;O&#x27;</span>, space(pos) ~= <span class=\"hljs-string\">&#x27;X&#x27;</span>)\n        space(pos) = marker;\n        changes = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">end</span>\n    clc\n    <span class=\"hljs-comment\">% Win Check</span>\n    <span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">i</span> = <span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">3</span>\n        <span class=\"hljs-comment\">% If rows are similaroz</span>\n        <span class=\"hljs-keyword\">if</span> or(sum(space(<span class=\"hljs-built_in\">i</span>, :) == [<span class=\"hljs-string\">&quot;X&quot;</span>,<span class=\"hljs-string\">&quot;X&quot;</span>,<span class=\"hljs-string\">&quot;X&quot;</span>]) == <span class=\"hljs-number\">3</span>, sum(space(<span class=\"hljs-built_in\">i</span>, :) == [<span class=\"hljs-string\">&quot;O&quot;</span>,<span class=\"hljs-string\">&quot;O&quot;</span>,<span class=\"hljs-string\">&quot;O&quot;</span>]) == <span class=\"hljs-number\">3</span>)\n            <span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&quot;Player &quot;</span>+marker+<span class=\"hljs-string\">&quot; Wins&quot;</span>)\n            reset = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">break</span>\n        <span class=\"hljs-keyword\">end</span>\n        <span class=\"hljs-comment\">% If cols are similar</span>\n        <span class=\"hljs-keyword\">if</span> or(sum(space(:, <span class=\"hljs-built_in\">i</span>) == [<span class=\"hljs-string\">&quot;X&quot;</span>;<span class=\"hljs-string\">&quot;X&quot;</span>;<span class=\"hljs-string\">&quot;X&quot;</span>]) == <span class=\"hljs-number\">3</span>, sum(space(:, <span class=\"hljs-built_in\">i</span>) == [<span class=\"hljs-string\">&quot;O&quot;</span>;<span class=\"hljs-string\">&quot;O&quot;</span>;<span class=\"hljs-string\">&quot;O&quot;</span>]) == <span class=\"hljs-number\">3</span>)\n            <span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&quot;Player &quot;</span>+marker+<span class=\"hljs-string\">&quot; Wins&quot;</span>)\n            reset = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">break</span>\n        <span class=\"hljs-keyword\">end</span>\n        <span class=\"hljs-comment\">% main diagonal</span>\n        <span class=\"hljs-keyword\">if</span> and(space(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>) == space(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>), space(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>) == space(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))\n            <span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&quot;Player &quot;</span>+marker+<span class=\"hljs-string\">&quot; Wins&quot;</span>)\n            reset = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">break</span>\n        <span class=\"hljs-keyword\">end</span>\n        \n        <span class=\"hljs-comment\">% cross diagonal</span>\n        <span class=\"hljs-keyword\">if</span> and(space(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>) == space(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>), space(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>) == space(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">1</span>))\n            <span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&quot;Player &quot;</span>+marker+<span class=\"hljs-string\">&quot; Wins&quot;</span>)\n            reset = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">break</span>\n        <span class=\"hljs-keyword\">end</span>\n        \n    <span class=\"hljs-keyword\">end</span> \n    \n    <span class=\"hljs-comment\">% Game  Draw</span>\n\n    count = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">for</span> elm = <span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">9</span>\n        <span class=\"hljs-keyword\">if</span> or(space(elm) == <span class=\"hljs-string\">&quot;X&quot;</span>, space(elm) == <span class=\"hljs-string\">&quot;O&quot;</span>)\n            count = count + <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">end</span>\n        <span class=\"hljs-keyword\">if</span> count == <span class=\"hljs-number\">9</span>\n            <span class=\"hljs-built_in\">disp</span> (<span class=\"hljs-string\">&quot;Game Draw&quot;</span>)\n            reset = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">break</span>\n        <span class=\"hljs-keyword\">end</span>\n        \n    <span class=\"hljs-keyword\">end</span>\n    \n    <span class=\"hljs-keyword\">for</span> r = <span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">3</span>\n        <span class=\"hljs-built_in\">disp</span>( space(r,<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;   |   &quot;</span> + space(r,<span class=\"hljs-number\">2</span>) + <span class=\"hljs-string\">&quot;   |   &quot;</span> +space(r,<span class=\"hljs-number\">3</span>) )\n        <span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&#x27;    |       |&#x27;</span>)\n        <span class=\"hljs-built_in\">disp</span>( <span class=\"hljs-string\">&#x27;___________________&#x27;</span>)\n    <span class=\"hljs-keyword\">end</span>\n        \n    <span class=\"hljs-comment\">% Make sure  previous positions are loocked</span>\n    <span class=\"hljs-keyword\">if</span> changes == <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">switch</span> marker\n            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;X&quot;</span>\n                marker = <span class=\"hljs-string\">&quot;O&quot;</span>;\n            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;O&quot;</span>\n                marker = <span class=\"hljs-string\">&quot;X&quot;</span>;\n        changes = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n"
    }
  },
  "contributors": [
    {
      "name": "QuantumNovice",
      "email": "43876848+QuantumNovice@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Chathura Nimesh",
      "email": "fdsjkomsal@gmail.com",
      "commits": 1
    },
    {
      "name": "Sai Vivek Amirishetty",
      "email": "31738228+vivekboss99@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
