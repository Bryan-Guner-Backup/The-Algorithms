{
  "slug": "double-factorial-recursive",
  "name": "Double Factorial Recursive",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/double_factorial_recursive.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/double_factorial_recursive.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">double_factorial</span>(<span class=\"hljs-params\">n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Compute double factorial using recursive method.\n    Recursion can be costly for large numbers.\n\n    To learn about the theory behind this algorithm:\n    https://en.wikipedia.org/wiki/Double_factorial\n\n    &gt;&gt;&gt; import math\n    &gt;&gt;&gt; all(double_factorial(i) == math.prod(range(i, 0, -2)) for i in range(20))\n    True\n    &gt;&gt;&gt; double_factorial(0.1)\n    Traceback (most recent call last):\n        ...\n    ValueError: double_factorial() only accepts integral values\n    &gt;&gt;&gt; double_factorial(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: double_factorial() not defined for negative values\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(n, <span class=\"hljs-built_in\">int</span>):\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;double_factorial() only accepts integral values&quot;</span>)\n    <span class=\"hljs-keyword\">if</span> n &lt; <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;double_factorial() not defined for negative values&quot;</span>)\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">if</span> n &lt;= <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">else</span> n * double_factorial(n - <span class=\"hljs-number\">2</span>)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    }
  },
  "contributors": [
    {
      "name": "jonabtc",
      "email": "39396756+jonabtc@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
