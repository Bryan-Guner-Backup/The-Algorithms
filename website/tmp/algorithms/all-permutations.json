{
  "slug": "all-permutations",
  "name": "All Permutations",
  "categories": ["backtracking"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "backtracking/all_permutations.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/backtracking/all_permutations.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\n        In this problem, we want to determine all possible permutations\n        of the given sequence. We use backtracking to solve this problem.\n\n        Time complexity: O(n! * n),\n        where n denotes the length of the given sequence.\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">List</span>, <span class=\"hljs-type\">Union</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">generate_all_permutations</span>(<span class=\"hljs-params\">sequence: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Union</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">str</span>]]</span>) -&gt; <span class=\"hljs-literal\">None</span>:\n    create_state_space_tree(sequence, [], <span class=\"hljs-number\">0</span>, [<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(sequence))])\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">create_state_space_tree</span>(<span class=\"hljs-params\">\n    sequence: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Union</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">str</span>]],\n    current_sequence: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Union</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">str</span>]],\n    index: <span class=\"hljs-built_in\">int</span>,\n    index_used: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>],\n</span>) -&gt; <span class=\"hljs-literal\">None</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly len(sequence) - index children.\n    It terminates when it reaches the end of the given sequence.\n    &quot;&quot;&quot;</span>\n\n    <span class=\"hljs-keyword\">if</span> index == <span class=\"hljs-built_in\">len</span>(sequence):\n        <span class=\"hljs-built_in\">print</span>(current_sequence)\n        <span class=\"hljs-keyword\">return</span>\n\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(sequence)):\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> index_used[i]:\n            current_sequence.append(sequence[i])\n            index_used[i] = <span class=\"hljs-literal\">True</span>\n            create_state_space_tree(sequence, current_sequence, index + <span class=\"hljs-number\">1</span>, index_used)\n            current_sequence.pop()\n            index_used[i] = <span class=\"hljs-literal\">False</span>\n\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\nremove the comment to take an input from the user\n\nprint(&quot;Enter the elements&quot;)\nsequence = list(map(int, input().split()))\n&quot;&quot;&quot;</span>\n\nsequence: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Union</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">str</span>]] = [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>]\ngenerate_all_permutations(sequence)\n\nsequence_2: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Union</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">str</span>]] = [<span class=\"hljs-string\">&quot;A&quot;</span>, <span class=\"hljs-string\">&quot;B&quot;</span>, <span class=\"hljs-string\">&quot;C&quot;</span>]\ngenerate_all_permutations(sequence_2)\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "John Law",
      "email": "johnlaw.po@gmail.com",
      "commits": 1
    },
    {
      "name": "Jenia Dysin",
      "email": "jenia90@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Erfan Alimohammadi",
      "email": "erfan.aa@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
