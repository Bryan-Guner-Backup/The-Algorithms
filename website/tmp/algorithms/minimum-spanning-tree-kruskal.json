{
  "slug": "minimum-spanning-tree-kruskal",
  "name": "Minimum Spanning Tree Kruskal",
  "categories": ["graphs"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "graphs/minimum_spanning_tree_kruskal.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/graphs/minimum_spanning_tree_kruskal.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">kruskal</span>(<span class=\"hljs-params\">\n    num_nodes: <span class=\"hljs-built_in\">int</span>, edges: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">tuple</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">int</span>]]\n</span>) -&gt; <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">tuple</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">int</span>]]:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; kruskal(4, [(0, 1, 3), (1, 2, 5), (2, 3, 1)])\n    [(2, 3, 1), (0, 1, 3), (1, 2, 5)]\n\n    &gt;&gt;&gt; kruskal(4, [(0, 1, 3), (1, 2, 5), (2, 3, 1), (0, 2, 1), (0, 3, 2)])\n    [(2, 3, 1), (0, 2, 1), (0, 1, 3)]\n\n    &gt;&gt;&gt; kruskal(4, [(0, 1, 3), (1, 2, 5), (2, 3, 1), (0, 2, 1), (0, 3, 2),\n    ... (2, 1, 1)])\n    [(2, 3, 1), (0, 2, 1), (2, 1, 1)]\n    &quot;&quot;&quot;</span>\n    edges = <span class=\"hljs-built_in\">sorted</span>(edges, key=<span class=\"hljs-keyword\">lambda</span> edge: edge[<span class=\"hljs-number\">2</span>])\n\n    parent = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">range</span>(num_nodes))\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">find_parent</span>(<span class=\"hljs-params\">i</span>):\n        <span class=\"hljs-keyword\">if</span> i != parent[i]:\n            parent[i] = find_parent(parent[i])\n        <span class=\"hljs-keyword\">return</span> parent[i]\n\n    minimum_spanning_tree_cost = <span class=\"hljs-number\">0</span>\n    minimum_spanning_tree = []\n\n    <span class=\"hljs-keyword\">for</span> edge <span class=\"hljs-keyword\">in</span> edges:\n        parent_a = find_parent(edge[<span class=\"hljs-number\">0</span>])\n        parent_b = find_parent(edge[<span class=\"hljs-number\">1</span>])\n        <span class=\"hljs-keyword\">if</span> parent_a != parent_b:\n            minimum_spanning_tree_cost += edge[<span class=\"hljs-number\">2</span>]\n            minimum_spanning_tree.append(edge)\n            parent[parent_a] = parent_b\n\n    <span class=\"hljs-keyword\">return</span> minimum_spanning_tree\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:  <span class=\"hljs-comment\"># pragma: no cover</span>\n    num_nodes, num_edges = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">input</span>().strip().split()))\n    edges = []\n\n    <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(num_edges):\n        node1, node2, cost = [<span class=\"hljs-built_in\">int</span>(x) <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">input</span>().strip().split()]\n        edges.append((node1, node2, cost))\n\n    kruskal(num_nodes, edges)\n"
    }
  },
  "contributors": [
    {
      "name": "hasan",
      "email": "hasanuli10@gmail.com",
      "commits": 1
    },
    {
      "name": "ParthS007",
      "email": "parth1989shandilya@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "cclauss",
      "email": "cclauss@bluewin.ch",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    },
    {
      "name": "AlexDvorak",
      "email": "opti.jawsome@gmail.com",
      "commits": 2
    },
    {
      "name": "Meysam",
      "email": "MeysamAzad81@yahoo.com",
      "commits": 2
    },
    {
      "name": "Thanapat Katapornsiri",
      "email": "first-4196@hotmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
