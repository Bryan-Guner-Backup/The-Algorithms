{
  "slug": "flashsort",
  "name": "FlashSort",
  "categories": ["sorts"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Sorts/FlashSort.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Sorts/FlashSort.js",
      "code": "<span class=\"hljs-comment\">/**\n * Flashsort is a distribution sorting algorithm showing linear\n * computational complexity O(n) for uniformly distributed\n * data sets and relatively little additional memory requirement.\n *\n * Wikipedia: https://en.wikipedia.org/wiki/Flashsort\n */</span>\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">flashSort</span> (arr) {\n  <span class=\"hljs-keyword\">let</span> max = <span class=\"hljs-number\">0</span>; <span class=\"hljs-keyword\">let</span> min = arr[<span class=\"hljs-number\">0</span>]\n  <span class=\"hljs-keyword\">const</span> n = arr.<span class=\"hljs-property\">length</span>\n  <span class=\"hljs-keyword\">const</span> m = ~~(<span class=\"hljs-number\">0.45</span> * n)\n  <span class=\"hljs-keyword\">const</span> l = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span>(m)\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; n; ++i) {\n    <span class=\"hljs-keyword\">if</span> (arr[i] &lt; min) {\n      min = arr[i]\n    }\n    <span class=\"hljs-keyword\">if</span> (arr[i] &gt; arr[max]) {\n      max = i\n    }\n  }\n\n  <span class=\"hljs-keyword\">if</span> (min === arr[max]) {\n    <span class=\"hljs-keyword\">return</span> arr\n  }\n\n  <span class=\"hljs-keyword\">const</span> c1 = (m - <span class=\"hljs-number\">1</span>) / (arr[max] - min)\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> k = <span class=\"hljs-number\">0</span>; k &lt; m; k++) {\n    l[k] = <span class=\"hljs-number\">0</span>\n  }\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; ++j) {\n    <span class=\"hljs-keyword\">const</span> k = ~~(c1 * (arr[j] - min))\n    ++l[k]\n  }\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> p = <span class=\"hljs-number\">1</span>; p &lt; m; ++p) {\n    l[p] = l[p] + l[p - <span class=\"hljs-number\">1</span>]\n  }\n\n  <span class=\"hljs-keyword\">let</span> hold = arr[max]\n  arr[max] = arr[<span class=\"hljs-number\">0</span>]\n  arr[<span class=\"hljs-number\">0</span>] = hold\n\n  <span class=\"hljs-comment\">// permutation</span>\n  <span class=\"hljs-keyword\">let</span> move = <span class=\"hljs-number\">0</span>; <span class=\"hljs-keyword\">let</span> t; <span class=\"hljs-keyword\">let</span> flash\n  <span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> k = m - <span class=\"hljs-number\">1</span>\n\n  <span class=\"hljs-keyword\">while</span> (move &lt; (n - <span class=\"hljs-number\">1</span>)) {\n    <span class=\"hljs-keyword\">while</span> (j &gt; (l[k] - <span class=\"hljs-number\">1</span>)) {\n      ++j\n      k = ~~(c1 * (arr[j] - min))\n    }\n    <span class=\"hljs-keyword\">if</span> (k &lt; <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">break</span>\n    flash = arr[j]\n    <span class=\"hljs-keyword\">while</span> (j !== l[k]) {\n      k = ~~(c1 * (flash - min))\n      hold = arr[t = --l[k]]\n      arr[t] = flash\n      flash = hold\n      ++move\n    }\n  }\n\n  <span class=\"hljs-comment\">// insertion</span>\n  <span class=\"hljs-keyword\">for</span> (j = <span class=\"hljs-number\">1</span>; j &lt; n; j++) {\n    hold = arr[j]\n    <span class=\"hljs-keyword\">let</span> i = j - <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">while</span> (i &gt;= <span class=\"hljs-number\">0</span> &amp;&amp; arr[i] &gt; hold) {\n      arr[i + <span class=\"hljs-number\">1</span>] = arr[i--]\n    }\n    arr[i + <span class=\"hljs-number\">1</span>] = hold\n  }\n  <span class=\"hljs-keyword\">return</span> arr\n}\n\n<span class=\"hljs-comment\">/**\n* Implementation of Flash Sort\n*/</span>\n<span class=\"hljs-keyword\">const</span> array = [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">5</span>, -<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">2</span>]\n<span class=\"hljs-comment\">// Before Sort</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;\\n- Before Sort | Implementation of Flash Sort -&#x27;</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(array)\n<span class=\"hljs-comment\">// After Sort</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;- After Sort | Implementation of Flash Sort -&#x27;</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">flashSort</span>(array))\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "olshansky",
      "email": "olshansky0@gmail.com",
      "commits": 1
    },
    {
      "name": "ParthS007",
      "email": "parth1989shandilya@gmail.com",
      "commits": 2
    },
    {
      "name": "marsonya",
      "email": "akhil.marsonya27@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}
