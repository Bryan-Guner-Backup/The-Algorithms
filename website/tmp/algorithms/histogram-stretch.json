{
  "slug": "histogram-stretch",
  "name": "Histogram Stretch",
  "categories": ["digitalimageprocessing", "histogramequalization"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "digital_image_processing/histogram_equalization/histogram_stretch.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/digital_image_processing/histogram_equalization/histogram_stretch.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nCreated on Fri Sep 28 15:22:29 2018\n\n@author: Binish125\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">import</span> copy\n<span class=\"hljs-keyword\">import</span> os\n\n<span class=\"hljs-keyword\">import</span> cv2\n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n<span class=\"hljs-keyword\">from</span> matplotlib <span class=\"hljs-keyword\">import</span> pyplot <span class=\"hljs-keyword\">as</span> plt\n\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">contrastStretch</span>:\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self</span>):\n        self.img = <span class=\"hljs-string\">&quot;&quot;</span>\n        self.original_image = <span class=\"hljs-string\">&quot;&quot;</span>\n        self.last_list = []\n        self.rem = <span class=\"hljs-number\">0</span>\n        self.L = <span class=\"hljs-number\">256</span>\n        self.sk = <span class=\"hljs-number\">0</span>\n        self.k = <span class=\"hljs-number\">0</span>\n        self.number_of_rows = <span class=\"hljs-number\">0</span>\n        self.number_of_cols = <span class=\"hljs-number\">0</span>\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">stretch</span>(<span class=\"hljs-params\">self, input_image</span>):\n        self.img = cv2.imread(input_image, <span class=\"hljs-number\">0</span>)\n        self.original_image = copy.deepcopy(self.img)\n        x, _, _ = plt.hist(self.img.ravel(), <span class=\"hljs-number\">256</span>, [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">256</span>], label=<span class=\"hljs-string\">&quot;x&quot;</span>)\n        self.k = np.<span class=\"hljs-built_in\">sum</span>(x)\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(x)):\n            prk = x[i] / self.k\n            self.sk += prk\n            last = (self.L - <span class=\"hljs-number\">1</span>) * self.sk\n            <span class=\"hljs-keyword\">if</span> self.rem != <span class=\"hljs-number\">0</span>:\n                self.rem = <span class=\"hljs-built_in\">int</span>(last % last)\n            last = <span class=\"hljs-built_in\">int</span>(last + <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">if</span> self.rem &gt;= <span class=\"hljs-number\">0.5</span> <span class=\"hljs-keyword\">else</span> last)\n            self.last_list.append(last)\n            self.number_of_rows = <span class=\"hljs-built_in\">int</span>(np.ma.count(self.img) / self.img[<span class=\"hljs-number\">1</span>].size)\n            self.number_of_cols = self.img[<span class=\"hljs-number\">1</span>].size\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(self.number_of_cols):\n            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(self.number_of_rows):\n                num = self.img[j][i]\n                <span class=\"hljs-keyword\">if</span> num != self.last_list[num]:\n                    self.img[j][i] = self.last_list[num]\n        cv2.imwrite(<span class=\"hljs-string\">&quot;output_data/output.jpg&quot;</span>, self.img)\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">plotHistogram</span>(<span class=\"hljs-params\">self</span>):\n        plt.hist(self.img.ravel(), <span class=\"hljs-number\">256</span>, [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">256</span>])\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">showImage</span>(<span class=\"hljs-params\">self</span>):\n        cv2.imshow(<span class=\"hljs-string\">&quot;Output-Image&quot;</span>, self.img)\n        cv2.imshow(<span class=\"hljs-string\">&quot;Input-Image&quot;</span>, self.original_image)\n        cv2.waitKey(<span class=\"hljs-number\">5000</span>)\n        cv2.destroyAllWindows()\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    file_path = os.path.join(os.path.basename(__file__), <span class=\"hljs-string\">&quot;image_data/input.jpg&quot;</span>)\n    stretcher = contrastStretch()\n    stretcher.stretch(file_path)\n    stretcher.plotHistogram()\n    stretcher.showImage()\n"
    }
  },
  "contributors": [
    {
      "name": "Binish Manandhar",
      "email": "37204996+binish784@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
