{
  "slug": "single-bit-binary-operations",
  "name": "Single Bit Binary Operations",
  "categories": ["bitmanipulation"],
  "body": {},
  "implementations": {
    "ruby": {
      "dir": "bit_manipulation/single_bit_binary_operations.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/bit_manipulation/single_bit_binary_operations.rb",
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">set_bit</span><span class=\"hljs-params\">(x, position)</span></span>\n  raise <span class=\"hljs-string\">&quot;position must be &gt;= 0&quot;</span> <span class=\"hljs-keyword\">if</span> position &lt; <span class=\"hljs-number\">0</span>\n\n  x <span class=\"hljs-params\">| (1 &lt;&lt; position)\n<span class=\"hljs-keyword\">end</span>\n\nputs set_bit(0, 0)\n# 1\n\nputs set_bit(0, 4)\n# 16\n\nputs set_bit(8, 3)\n# 8\n\nputs set_bit(8, 4)\n# 24\n\n<span class=\"hljs-keyword\">begin</span>\n  puts set_bit(8, -4)\n<span class=\"hljs-keyword\">rescue</span> =&gt; e\n  puts e.message\n<span class=\"hljs-keyword\">end</span>\n# position must be &gt;= 0\n\n\ndef clear_bit(x, position)\n  raise &quot;position must be &gt; 0&quot; <span class=\"hljs-keyword\">if</span> position &lt; 0\n\n  x &amp; ~(1 &lt;&lt; position)\n<span class=\"hljs-keyword\">end</span>\n\nputs clear_bit(0, 0)\n# 0\n\nputs clear_bit(0, 4)\n# 0\n\nputs clear_bit(8, 3)\n# 0\n\nputs clear_bit(24, 4)\n# 8\n\n<span class=\"hljs-keyword\">begin</span>\n  puts clear_bit(0, -4)\n<span class=\"hljs-keyword\">rescue</span> =&gt; e\n  puts e.message\n<span class=\"hljs-keyword\">end</span>\n# position must be &gt; 0\n\ndef flip_bit(x, position)\n  raise &quot;position must be &gt; 0&quot; <span class=\"hljs-keyword\">if</span> position &lt; 0\n\n  x ^ (1 &lt;&lt; position)\n<span class=\"hljs-keyword\">end</span>\n\nputs flip_bit(0, 0)\n# 1\n\nputs flip_bit(0, 4)\n# 16\n\nputs flip_bit(8, 3)\n# 0\n\nputs flip_bit(24, 4)\n# 8\n\n<span class=\"hljs-keyword\">begin</span>\n  puts flip_bit(0, -4)\n<span class=\"hljs-keyword\">rescue</span> =&gt; e\n  puts e.message\n<span class=\"hljs-keyword\">end</span>\n# position must be &gt; 0\n\ndef is_bit_set(x, position)\n  raise &quot;position must be &gt; 0&quot; <span class=\"hljs-keyword\">if</span> position &lt; 0\n\n  ((x &gt;&gt; position) &amp; 1) == 1\n<span class=\"hljs-keyword\">end</span>\n\nputs is_bit_set(0, 0)\n# <span class=\"hljs-literal\">false</span>\n\nputs is_bit_set(1, 0)\n# <span class=\"hljs-literal\">true</span>\n\nputs is_bit_set(8, 3)\n# <span class=\"hljs-literal\">true</span>\n\nputs is_bit_set(24, 4)\n# <span class=\"hljs-literal\">true</span>\n\n<span class=\"hljs-keyword\">begin</span>\n  puts is_bit_set(0, -4)\n<span class=\"hljs-keyword\">rescue</span> =&gt; e\n  puts e.message\n<span class=\"hljs-keyword\">end</span>\n# position must be &gt; 0\n</span>"
    }
  },
  "contributors": [
    {
      "name": "Vijay Siva",
      "email": "vijay.sivasubramaniam@instacart.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
