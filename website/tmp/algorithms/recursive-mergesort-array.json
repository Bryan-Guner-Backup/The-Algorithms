{
  "slug": "recursive-mergesort-array",
  "name": "Recursive Mergesort Array",
  "categories": ["sorts"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts/recursive_mergesort_array.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts/recursive_mergesort_array.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;A merge sort which accepts an array as input and recursively\nsplits an array in half and sorts and combines them.\n&quot;&quot;&quot;</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;https://en.wikipedia.org/wiki/Merge_sort &quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">merge</span>(<span class=\"hljs-params\">arr: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]:\n    <span class=\"hljs-string\">&quot;&quot;&quot;Return a sorted array.\n    &gt;&gt;&gt; merge([10,9,8,7,6,5,4,3,2,1])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    &gt;&gt;&gt; merge([1,2,3,4,5,6,7,8,9,10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    &gt;&gt;&gt; merge([10,22,1,2,3,9,15,23])\n    [1, 2, 3, 9, 10, 15, 22, 23]\n    &gt;&gt;&gt; merge([100])\n    [100]\n    &gt;&gt;&gt; merge([])\n    []\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(arr) &gt; <span class=\"hljs-number\">1</span>:\n        middle_length = <span class=\"hljs-built_in\">len</span>(arr) // <span class=\"hljs-number\">2</span>  <span class=\"hljs-comment\"># Finds the middle of the array</span>\n        left_array = arr[\n            :middle_length\n        ]  <span class=\"hljs-comment\"># Creates an array of the elements in the first half.</span>\n        right_array = arr[\n            middle_length:\n        ]  <span class=\"hljs-comment\"># Creates an array of the elements in the second half.</span>\n        left_size = <span class=\"hljs-built_in\">len</span>(left_array)\n        right_size = <span class=\"hljs-built_in\">len</span>(right_array)\n        merge(left_array)  <span class=\"hljs-comment\"># Starts sorting the left.</span>\n        merge(right_array)  <span class=\"hljs-comment\"># Starts sorting the right</span>\n        left_index = <span class=\"hljs-number\">0</span>  <span class=\"hljs-comment\"># Left Counter</span>\n        right_index = <span class=\"hljs-number\">0</span>  <span class=\"hljs-comment\"># Right Counter</span>\n        index = <span class=\"hljs-number\">0</span>  <span class=\"hljs-comment\"># Position Counter</span>\n        <span class=\"hljs-keyword\">while</span> (\n            left_index &lt; left_size <span class=\"hljs-keyword\">and</span> right_index &lt; right_size\n        ):  <span class=\"hljs-comment\"># Runs until the lowers size of the left and right are sorted.</span>\n            <span class=\"hljs-keyword\">if</span> left_array[left_index] &lt; right_array[right_index]:\n                arr[index] = left_array[left_index]\n                left_index = left_index + <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">else</span>:\n                arr[index] = right_array[right_index]\n                right_index = right_index + <span class=\"hljs-number\">1</span>\n            index = index + <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">while</span> (\n            left_index &lt; left_size\n        ):  <span class=\"hljs-comment\"># Adds the left over elements in the left half of the array</span>\n            arr[index] = left_array[left_index]\n            left_index = left_index + <span class=\"hljs-number\">1</span>\n            index = index + <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">while</span> (\n            right_index &lt; right_size\n        ):  <span class=\"hljs-comment\"># Adds the left over elements in the right half of the array</span>\n            arr[index] = right_array[right_index]\n            right_index = right_index + <span class=\"hljs-number\">1</span>\n            index = index + <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">return</span> arr\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    }
  },
  "contributors": [
    {
      "name": "Benjamin Fein",
      "email": "benaaronfein@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
