{
  "slug": "binary-tree-mirror",
  "name": "Binary Tree Mirror",
  "categories": ["datastructures", "binarytree"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "data_structures/binary_tree/binary_tree_mirror.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/data_structures/binary_tree/binary_tree_mirror.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nProblem Description:\nGiven a binary tree, return it&#x27;s mirror.\n&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">binary_tree_mirror_dict</span>(<span class=\"hljs-params\">binary_tree_mirror_dictionary: <span class=\"hljs-built_in\">dict</span>, root: <span class=\"hljs-built_in\">int</span></span>):\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> root <span class=\"hljs-keyword\">or</span> root <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> binary_tree_mirror_dictionary:\n        <span class=\"hljs-keyword\">return</span>\n    left_child, right_child = binary_tree_mirror_dictionary[root][:<span class=\"hljs-number\">2</span>]\n    binary_tree_mirror_dictionary[root] = [right_child, left_child]\n    binary_tree_mirror_dict(binary_tree_mirror_dictionary, left_child)\n    binary_tree_mirror_dict(binary_tree_mirror_dictionary, right_child)\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">binary_tree_mirror</span>(<span class=\"hljs-params\">binary_tree: <span class=\"hljs-built_in\">dict</span>, root: <span class=\"hljs-built_in\">int</span> = <span class=\"hljs-number\">1</span></span>) -&gt; <span class=\"hljs-built_in\">dict</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; binary_tree_mirror({ 1: [2,3], 2: [4,5], 3: [6,7], 7: [8,9]}, 1)\n    {1: [3, 2], 2: [5, 4], 3: [7, 6], 7: [9, 8]}\n    &gt;&gt;&gt; binary_tree_mirror({ 1: [2,3], 2: [4,5], 3: [6,7], 4: [10,11]}, 1)\n    {1: [3, 2], 2: [5, 4], 3: [7, 6], 4: [11, 10]}\n    &gt;&gt;&gt; binary_tree_mirror({ 1: [2,3], 2: [4,5], 3: [6,7], 4: [10,11]}, 5)\n    Traceback (most recent call last):\n    ...\n    ValueError: root 5 is not present in the binary_tree\n    &gt;&gt;&gt; binary_tree_mirror({}, 5)\n    Traceback (most recent call last):\n    ...\n    ValueError: binary tree cannot be empty\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> binary_tree:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;binary tree cannot be empty&quot;</span>)\n    <span class=\"hljs-keyword\">if</span> root <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> binary_tree:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">f&quot;root <span class=\"hljs-subst\">{root}</span> is not present in the binary_tree&quot;</span>)\n    binary_tree_mirror_dictionary = <span class=\"hljs-built_in\">dict</span>(binary_tree)\n    binary_tree_mirror_dict(binary_tree_mirror_dictionary, root)\n    <span class=\"hljs-keyword\">return</span> binary_tree_mirror_dictionary\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    binary_tree = {<span class=\"hljs-number\">1</span>: [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>], <span class=\"hljs-number\">2</span>: [<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>], <span class=\"hljs-number\">3</span>: [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>], <span class=\"hljs-number\">7</span>: [<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>]}\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Binary tree: <span class=\"hljs-subst\">{binary_tree}</span>&quot;</span>)\n    binary_tree_mirror_dictionary = binary_tree_mirror(binary_tree, <span class=\"hljs-number\">5</span>)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Binary tree mirror: <span class=\"hljs-subst\">{binary_tree_mirror_dictionary}</span>&quot;</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "Susmith98",
      "email": "33018940+susmith98@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
