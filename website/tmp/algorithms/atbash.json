{
  "slug": "atbash",
  "name": "Atbash",
  "categories": ["ciphers"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "ciphers/atbash.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/ciphers/atbash.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot; https://en.wikipedia.org/wiki/Atbash &quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">import</span> string\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">atbash_slow</span>(<span class=\"hljs-params\">sequence: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; atbash_slow(&quot;ABCDEFG&quot;)\n    &#x27;ZYXWVUT&#x27;\n\n    &gt;&gt;&gt; atbash_slow(&quot;aW;;123BX&quot;)\n    &#x27;zD;;123YC&#x27;\n    &quot;&quot;&quot;</span>\n    output = <span class=\"hljs-string\">&quot;&quot;</span>\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> sequence:\n        extract = <span class=\"hljs-built_in\">ord</span>(i)\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-number\">65</span> &lt;= extract &lt;= <span class=\"hljs-number\">90</span>:\n            output += <span class=\"hljs-built_in\">chr</span>(<span class=\"hljs-number\">155</span> - extract)\n        <span class=\"hljs-keyword\">elif</span> <span class=\"hljs-number\">97</span> &lt;= extract &lt;= <span class=\"hljs-number\">122</span>:\n            output += <span class=\"hljs-built_in\">chr</span>(<span class=\"hljs-number\">219</span> - extract)\n        <span class=\"hljs-keyword\">else</span>:\n            output += i\n    <span class=\"hljs-keyword\">return</span> output\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">atbash</span>(<span class=\"hljs-params\">sequence: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; atbash(&quot;ABCDEFG&quot;)\n    &#x27;ZYXWVUT&#x27;\n\n    &gt;&gt;&gt; atbash(&quot;aW;;123BX&quot;)\n    &#x27;zD;;123YC&#x27;\n    &quot;&quot;&quot;</span>\n    letters = string.ascii_letters\n    letters_reversed = string.ascii_lowercase[::-<span class=\"hljs-number\">1</span>] + string.ascii_uppercase[::-<span class=\"hljs-number\">1</span>]\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>.join(\n        letters_reversed[letters.index(c)] <span class=\"hljs-keyword\">if</span> c <span class=\"hljs-keyword\">in</span> letters <span class=\"hljs-keyword\">else</span> c <span class=\"hljs-keyword\">for</span> c <span class=\"hljs-keyword\">in</span> sequence\n    )\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">benchmark</span>() -&gt; <span class=\"hljs-literal\">None</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;Let&#x27;s benchmark them side-by-side...&quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">from</span> timeit <span class=\"hljs-keyword\">import</span> timeit\n\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Running performance benchmarks...&quot;</span>)\n    <span class=\"hljs-built_in\">print</span>(\n        <span class=\"hljs-string\">&quot;&gt; atbash_slow()&quot;</span>,\n        timeit(\n            <span class=\"hljs-string\">&quot;atbash_slow(printable)&quot;</span>,\n            setup=<span class=\"hljs-string\">&quot;from string import printable ; from __main__ import atbash_slow&quot;</span>,\n        ),\n        <span class=\"hljs-string\">&quot;seconds&quot;</span>,\n    )\n    <span class=\"hljs-built_in\">print</span>(\n        <span class=\"hljs-string\">&quot;&gt;      atbash()&quot;</span>,\n        timeit(\n            <span class=\"hljs-string\">&quot;atbash(printable)&quot;</span>,\n            setup=<span class=\"hljs-string\">&quot;from string import printable ; from __main__ import atbash&quot;</span>,\n        ),\n        <span class=\"hljs-string\">&quot;seconds&quot;</span>,\n    )\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">for</span> example <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-string\">&quot;ABCDEFGH&quot;</span>, <span class=\"hljs-string\">&quot;123GGjj&quot;</span>, <span class=\"hljs-string\">&quot;testStringtest&quot;</span>, <span class=\"hljs-string\">&quot;with space&quot;</span>):\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{example}</span> encrypted in atbash: <span class=\"hljs-subst\">{atbash(example)}</span>&quot;</span>)\n    benchmark()\n"
    },
    "javascript": {
      "dir": "Ciphers/Atbash.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Ciphers/Atbash.js",
      "code": "<span class=\"hljs-comment\">/*\nThe Atbash cipher is a particular type of monoalphabetic cipher\nformed by taking the alphabet and mapping it to its reverse,\nso that the first letter becomes the last letter,\nthe second letter becomes the second to last letter, and so on.\n*/</span>\n\n<span class=\"hljs-comment\">/**\n * Decrypt a Atbash cipher\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">String</span>} <span class=\"hljs-variable\">str</span> - string to be decrypted/encrypt\n * <span class=\"hljs-doctag\">@return</span> {<span class=\"hljs-type\">String</span>} decrypted/encrypted string\n */</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Atbash</span> (message) {\n  <span class=\"hljs-keyword\">let</span> decodedString = <span class=\"hljs-string\">&#x27;&#x27;</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; message.<span class=\"hljs-property\">length</span>; i++) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-regexp\">/[^a-zA-Z]/</span>.<span class=\"hljs-title function_\">test</span>(message[i])) {\n      decodedString += message[i]\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (message[i] === message[i].<span class=\"hljs-title function_\">toUpperCase</span>()) {\n      decodedString += <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">fromCharCode</span>(<span class=\"hljs-number\">90</span> + <span class=\"hljs-number\">65</span> - message.<span class=\"hljs-title function_\">charCodeAt</span>(i))\n    } <span class=\"hljs-keyword\">else</span> {\n      decodedString += <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">fromCharCode</span>(<span class=\"hljs-number\">122</span> + <span class=\"hljs-number\">97</span> - message.<span class=\"hljs-title function_\">charCodeAt</span>(i))\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> decodedString\n}\n<span class=\"hljs-comment\">// Atbash Example</span>\n<span class=\"hljs-keyword\">const</span> encryptedString = <span class=\"hljs-string\">&#x27;HELLO WORLD&#x27;</span>\n<span class=\"hljs-keyword\">const</span> decryptedString = <span class=\"hljs-title class_\">Atbash</span>(encryptedString)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(decryptedString) <span class=\"hljs-comment\">// SVOOL DLIOW</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Anup Kumar Panwar",
      "email": "1anuppanwar@gmail.com",
      "commits": 1
    },
    {
      "name": "vinayak",
      "email": "itssvinayak@gmail.com",
      "commits": 1
    },
    {
      "name": "Dhruv Manilawala",
      "email": "dhruvmanila@gmail.com",
      "commits": 1
    },
    {
      "name": "mateuszz0000",
      "email": "mtszzwdzk@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Shubhayu Das",
      "email": "43082352+sateslayer@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 3
    },
    {
      "name": "Bharat Arya",
      "email": "aryabharat33@gmail.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}
