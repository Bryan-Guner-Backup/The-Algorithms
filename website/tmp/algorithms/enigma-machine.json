{
  "slug": "enigma-machine",
  "name": "Enigma Machine",
  "categories": ["hashing"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "hashes/enigma_machine.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/hashes/enigma_machine.py",
      "code": "alphabets = [<span class=\"hljs-built_in\">chr</span>(i) <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">32</span>, <span class=\"hljs-number\">126</span>)]\ngear_one = [i <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(alphabets))]\ngear_two = [i <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(alphabets))]\ngear_three = [i <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(alphabets))]\nreflector = [i <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">reversed</span>(<span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(alphabets)))]\ncode = []\ngear_one_pos = gear_two_pos = gear_three_pos = <span class=\"hljs-number\">0</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">rotator</span>():\n    <span class=\"hljs-keyword\">global</span> gear_one_pos\n    <span class=\"hljs-keyword\">global</span> gear_two_pos\n    <span class=\"hljs-keyword\">global</span> gear_three_pos\n    i = gear_one[<span class=\"hljs-number\">0</span>]\n    gear_one.append(i)\n    <span class=\"hljs-keyword\">del</span> gear_one[<span class=\"hljs-number\">0</span>]\n    gear_one_pos += <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">if</span> gear_one_pos % <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">len</span>(alphabets)) == <span class=\"hljs-number\">0</span>:\n        i = gear_two[<span class=\"hljs-number\">0</span>]\n        gear_two.append(i)\n        <span class=\"hljs-keyword\">del</span> gear_two[<span class=\"hljs-number\">0</span>]\n        gear_two_pos += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">if</span> gear_two_pos % <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">len</span>(alphabets)) == <span class=\"hljs-number\">0</span>:\n            i = gear_three[<span class=\"hljs-number\">0</span>]\n            gear_three.append(i)\n            <span class=\"hljs-keyword\">del</span> gear_three[<span class=\"hljs-number\">0</span>]\n            gear_three_pos += <span class=\"hljs-number\">1</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">engine</span>(<span class=\"hljs-params\">input_character</span>):\n    target = alphabets.index(input_character)\n    target = gear_one[target]\n    target = gear_two[target]\n    target = gear_three[target]\n    target = reflector[target]\n    target = gear_three.index(target)\n    target = gear_two.index(target)\n    target = gear_one.index(target)\n    code.append(alphabets[target])\n    rotator()\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    decode = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Type your message:\\n&quot;</span>))\n    <span class=\"hljs-keyword\">while</span> <span class=\"hljs-literal\">True</span>:\n        <span class=\"hljs-keyword\">try</span>:\n            token = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Please set token:(must be only digits)\\n&quot;</span>))\n            <span class=\"hljs-keyword\">break</span>\n        <span class=\"hljs-keyword\">except</span> Exception <span class=\"hljs-keyword\">as</span> error:\n            <span class=\"hljs-built_in\">print</span>(error)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(token):\n        rotator()\n    <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> decode:\n        engine(j)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span> + <span class=\"hljs-string\">&quot;&quot;</span>.join(code))\n    <span class=\"hljs-built_in\">print</span>(\n        <span class=\"hljs-string\">f&quot;\\nYour Token is <span class=\"hljs-subst\">{token}</span> please write it down.\\nIf you want to decode &quot;</span>\n        <span class=\"hljs-string\">f&quot;this message again you should input same digits as token!&quot;</span>\n    )\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "algobytewise",
      "email": "algobytewise@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Shahabaldin Mohammadi",
      "email": "45038855+stevelex-elex@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
