{
  "slug": "trappingrainwater",
  "name": "TrappingRainWater",
  "categories": ["dynamicprogramming"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Dynamic-Programming/TrappingRainWater.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Dynamic-Programming/TrappingRainWater.js",
      "code": "<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number[]</span>} <span class=\"hljs-variable\">height</span>\n * <span class=\"hljs-doctag\">@return</span> {<span class=\"hljs-type\">number</span>}\n */</span>\n\n<span class=\"hljs-comment\">/* 42. Trapping Rain Water\nhttps://leetcode.com/problems/trapping-rain-water/\n\nHelpful animation of this prompt: https://youtu.be/HmBbcDiJapY?t=51\n\nGiven n non-negative integers representing an elevation map where\nthe width of each bar is 1, compute how much water it is able to trap\nafter raining.\n\nVIEW ELEVATION MAP ON LEETCODE\n\nExample:\n\nInput:            [0,1,0,2,1,0,1,3,2,1,2,1]\nOutput: 6\n\nPlan:\niterate through and find left maxes\niterate through and find right maxes\ncreate minheight and assign it to the min(leftmax, rightmax)\nif current height(element) &lt; minheight\n  push minheight - height into water array\nelse\n  push 0 onto water array\n\nsum up water array and return\n\nleft maxes =      [0,0,1,1,2,2,2,2,3,3,3,3]\nright maxes =     [3,3,3,3,3,3,3,2,2,2,1,0]\nwater contained = [0,0,1,0,1,2,1,0,0,1,0,0] -&gt; sum = 6\n*/</span>\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">trap</span> (heights) {\n  <span class=\"hljs-keyword\">const</span> maxes = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span>(heights.<span class=\"hljs-property\">length</span>).<span class=\"hljs-title function_\">fill</span>(<span class=\"hljs-number\">0</span>)\n\n  <span class=\"hljs-keyword\">let</span> leftMax = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; heights.<span class=\"hljs-property\">length</span>; i++) {\n    <span class=\"hljs-keyword\">const</span> height = heights[i]\n    maxes[i] = leftMax\n    leftMax = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">max</span>(leftMax, height)\n  }\n\n  <span class=\"hljs-keyword\">let</span> rightMax = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = heights.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>; i &gt;= <span class=\"hljs-number\">0</span>; i -= <span class=\"hljs-number\">1</span>) {\n    <span class=\"hljs-keyword\">const</span> height = heights[i]\n    <span class=\"hljs-keyword\">const</span> minHeight = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">min</span>(rightMax, maxes[i])\n\n    <span class=\"hljs-keyword\">if</span> (height &lt; minHeight) {\n      maxes[i] = minHeight - height\n    } <span class=\"hljs-keyword\">else</span> {\n      maxes[i] = <span class=\"hljs-number\">0</span>\n    }\n    rightMax = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">max</span>(rightMax, height)\n  }\n  <span class=\"hljs-keyword\">return</span> maxes.<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a + b, <span class=\"hljs-number\">0</span>)\n}\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">trap</span>([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>])) <span class=\"hljs-comment\">// -&gt; 6</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Kayla",
      "email": "golderkayla@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
