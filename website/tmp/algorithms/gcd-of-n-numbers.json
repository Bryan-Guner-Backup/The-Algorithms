{
  "slug": "gcd-of-n-numbers",
  "name": "Gcd of N Numbers",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "math/gcd_of_n_numbers.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/math/gcd_of_n_numbers.cpp",
      "code": "<span class=\"hljs-comment\">/**\n * @file\n * @brief This program aims at calculating the GCD of n numbers by division\n * method\n *\n * @see gcd_iterative_euclidean.cpp, gcd_recursive_euclidean.cpp\n */</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-comment\">/** Compute GCD using division algorithm\n *\n * @param[in] a array of integers to compute GCD for\n * @param[in] n number of integers in array `a`\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">gcd</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> *a, <span class=\"hljs-type\">int</span> n)</span> </span>{\n    <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>;  <span class=\"hljs-comment\">// to access all elements of the array starting from 1</span>\n    <span class=\"hljs-type\">int</span> gcd = a[<span class=\"hljs-number\">0</span>];\n    <span class=\"hljs-keyword\">while</span> (j &lt; n) {\n        <span class=\"hljs-keyword\">if</span> (a[j] % gcd == <span class=\"hljs-number\">0</span>)  <span class=\"hljs-comment\">// value of gcd is as needed so far</span>\n            j++;              <span class=\"hljs-comment\">// so we check for next element</span>\n        <span class=\"hljs-keyword\">else</span>\n            gcd = a[j] % gcd;  <span class=\"hljs-comment\">// calculating GCD by division method</span>\n    }\n    <span class=\"hljs-keyword\">return</span> gcd;\n}\n\n<span class=\"hljs-comment\">/** Main function */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-type\">int</span> n;\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter value of n:&quot;</span> &lt;&lt; std::endl;\n    std::cin &gt;&gt; n;\n    <span class=\"hljs-type\">int</span> *a = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">int</span>[n];\n    <span class=\"hljs-type\">int</span> i;\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter the n numbers:&quot;</span> &lt;&lt; std::endl;\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) std::cin &gt;&gt; a[i];\n\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;GCD of entered n numbers:&quot;</span> &lt;&lt; <span class=\"hljs-built_in\">gcd</span>(a, n) &lt;&lt; std::endl;\n\n    <span class=\"hljs-keyword\">delete</span>[] a;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
