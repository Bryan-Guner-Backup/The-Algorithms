{
  "slug": "odd-even-sort",
  "name": "Odd Even Sort",
  "categories": ["sorts"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts/odd_even_sort.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts/odd_even_sort.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;For reference\nhttps://en.wikipedia.org/wiki/Odd%E2%80%93even_sort\n&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">odd_even_sort</span>(<span class=\"hljs-params\">input_list: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">list</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;this algorithm uses the same idea of bubblesort,\n    but by first dividing in two phase (odd and even).\n    Originally developed for use on parallel processors\n    with local interconnections.\n    :param collection: mutable ordered sequence of elements\n    :return: same collection in ascending order\n    Examples:\n    &gt;&gt;&gt; odd_even_sort([5 , 4 ,3 ,2 ,1])\n    [1, 2, 3, 4, 5]\n    &gt;&gt;&gt; odd_even_sort([])\n    []\n    &gt;&gt;&gt; odd_even_sort([-10 ,-1 ,10 ,2])\n    [-10, -1, 2, 10]\n    &gt;&gt;&gt; odd_even_sort([1 ,2 ,3 ,4])\n    [1, 2, 3, 4]\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-built_in\">sorted</span> = <span class=\"hljs-literal\">False</span>\n    <span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">sorted</span> <span class=\"hljs-keyword\">is</span> <span class=\"hljs-literal\">False</span>:  <span class=\"hljs-comment\"># Until all the indices are traversed keep looping</span>\n        <span class=\"hljs-built_in\">sorted</span> = <span class=\"hljs-literal\">True</span>\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(input_list) - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>):  <span class=\"hljs-comment\"># iterating over all even indices</span>\n            <span class=\"hljs-keyword\">if</span> input_list[i] &gt; input_list[i + <span class=\"hljs-number\">1</span>]:\n\n                input_list[i], input_list[i + <span class=\"hljs-number\">1</span>] = input_list[i + <span class=\"hljs-number\">1</span>], input_list[i]\n                <span class=\"hljs-comment\"># swapping if elements not in order</span>\n                <span class=\"hljs-built_in\">sorted</span> = <span class=\"hljs-literal\">False</span>\n\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">len</span>(input_list) - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>):  <span class=\"hljs-comment\"># iterating over all odd indices</span>\n            <span class=\"hljs-keyword\">if</span> input_list[i] &gt; input_list[i + <span class=\"hljs-number\">1</span>]:\n                input_list[i], input_list[i + <span class=\"hljs-number\">1</span>] = input_list[i + <span class=\"hljs-number\">1</span>], input_list[i]\n                <span class=\"hljs-comment\"># swapping if elements not in order</span>\n                <span class=\"hljs-built_in\">sorted</span> = <span class=\"hljs-literal\">False</span>\n    <span class=\"hljs-keyword\">return</span> input_list\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Enter list to be sorted&quot;</span>)\n    input_list = [<span class=\"hljs-built_in\">int</span>(x) <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">input</span>().split()]\n    <span class=\"hljs-comment\"># inputing elements of the list in one line</span>\n    sorted_list = odd_even_sort(input_list)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;The sorted list is&quot;</span>)\n    <span class=\"hljs-built_in\">print</span>(sorted_list)\n"
    },
    "javascript": {
      "dir": "Sorts/OddEvenSort.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Sorts/OddEvenSort.js",
      "code": "<span class=\"hljs-comment\">/*\n  odd–even sort or odd–even transposition sort\n  is a relatively simple sorting algorithm, developed originally for use on parallel processors with local interconnections.\n  It is a comparison sort related to bubble sort, with which it shares many characteristics.\n\n   for more information : https://en.wikipedia.org/wiki/Odd%E2%80%93even_sort\n*/</span>\n\n<span class=\"hljs-comment\">// Helper function to swap array items</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">swap</span> (arr, i, j) {\n  <span class=\"hljs-keyword\">const</span> tmp = arr[i]\n  arr[i] = arr[j]\n  arr[j] = tmp\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">oddEvenSort</span> (arr) {\n  <span class=\"hljs-keyword\">let</span> sorted = <span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">while</span> (!sorted) {\n    sorted = <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; arr.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>; i += <span class=\"hljs-number\">2</span>) {\n      <span class=\"hljs-keyword\">if</span> (arr[i] &gt; arr[i + <span class=\"hljs-number\">1</span>]) {\n        <span class=\"hljs-title function_\">swap</span>(arr, i, i + <span class=\"hljs-number\">1</span>)\n        sorted = <span class=\"hljs-literal\">false</span>\n      }\n    }\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; arr.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>; i += <span class=\"hljs-number\">2</span>) {\n      <span class=\"hljs-keyword\">if</span> (arr[i] &gt; arr[i + <span class=\"hljs-number\">1</span>]) {\n        <span class=\"hljs-title function_\">swap</span>(arr, i, i + <span class=\"hljs-number\">1</span>)\n        sorted = <span class=\"hljs-literal\">false</span>\n      }\n    }\n  }\n}\n<span class=\"hljs-keyword\">const</span> testArray = [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>]\n\n<span class=\"hljs-comment\">// Array before sort</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(testArray)\n<span class=\"hljs-title function_\">oddEvenSort</span>(testArray)\n<span class=\"hljs-comment\">// Array after sort</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(testArray)\n"
    },
    "c-plus-plus": {
      "dir": "sorting/odd_even_sort.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/sorting/odd_even_sort.cpp",
      "code": "<span class=\"hljs-comment\">/* C++ implementation Odd Even Sort */</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;vector&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">oddEven</span><span class=\"hljs-params\">(vector&lt;<span class=\"hljs-type\">int</span>&gt; &amp;arr, <span class=\"hljs-type\">int</span> size)</span> </span>{\n    <span class=\"hljs-type\">bool</span> sorted = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">while</span> (!sorted) {\n        sorted = <span class=\"hljs-literal\">true</span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; size - <span class=\"hljs-number\">1</span>; i += <span class=\"hljs-number\">2</span>)  <span class=\"hljs-comment\">// Odd</span>\n        {\n            <span class=\"hljs-keyword\">if</span> (arr[i] &gt; arr[i + <span class=\"hljs-number\">1</span>]) {\n                <span class=\"hljs-built_in\">swap</span>(arr[i], arr[i + <span class=\"hljs-number\">1</span>]);\n                sorted = <span class=\"hljs-literal\">false</span>;\n            }\n        }\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; size - <span class=\"hljs-number\">1</span>; i += <span class=\"hljs-number\">2</span>)  <span class=\"hljs-comment\">// Even</span>\n        {\n            <span class=\"hljs-keyword\">if</span> (arr[i] &gt; arr[i + <span class=\"hljs-number\">1</span>]) {\n                <span class=\"hljs-built_in\">swap</span>(arr[i], arr[i + <span class=\"hljs-number\">1</span>]);\n                sorted = <span class=\"hljs-literal\">false</span>;\n            }\n        }\n    }\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">show</span><span class=\"hljs-params\">(vector&lt;<span class=\"hljs-type\">int</span>&gt; A, <span class=\"hljs-type\">int</span> size)</span> </span>{\n    <span class=\"hljs-type\">int</span> i;\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; size; i++) cout &lt;&lt; A[i] &lt;&lt; <span class=\"hljs-string\">&quot;\\n&quot;</span>;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-type\">int</span> size, temp;\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;\\nEnter the number of elements : &quot;</span>;\n    cin &gt;&gt; size;\n\n    vector&lt;<span class=\"hljs-type\">int</span>&gt; arr;\n\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;\\nEnter the unsorted elements : \\n&quot;</span>;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; size; ++i) {\n        cin &gt;&gt; temp;\n        arr.<span class=\"hljs-built_in\">push_back</span>(temp);\n    }\n\n    <span class=\"hljs-built_in\">oddEven</span>(arr, size);\n\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;Sorted array\\n&quot;</span>;\n    <span class=\"hljs-built_in\">show</span>(arr, size);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "mustafasalih1993",
      "email": "mustafasalih1991@gmail.com",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ashwek Swamy",
      "email": "39827514+ashwek@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ocean Monjur",
      "email": "75680423+OCM-7898@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "PARISOT paul andrea",
      "email": "parisotp@informatique.univ-paris-diderot.fr",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}
