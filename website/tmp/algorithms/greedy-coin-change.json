{
  "slug": "greedy-coin-change",
  "name": "Greedy Coin Change",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/greedy_coin_change.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/greedy_coin_change.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nTest cases:\nDo you want to enter your denominations ? (Y/N) :N\nEnter the change you want to make in Indian Currency: 987\nFollowing is minimal  change for 987 :\n500 100 100 100 100 50 20 10 5 2\n\nDo you want to enter your denominations ? (Y/N) :Y\nEnter number of denomination:10\n1\n5\n10\n20\n50\n100\n200\n500\n1000\n2000\nEnter the change you want to make: 18745\nFollowing is minimal  change for 18745 :\n2000 2000 2000 2000 2000 2000 2000 2000 2000 500 200 20 20 5\n\nDo you want to enter your denominations ? (Y/N) :N\nEnter the change you want to make: 0\nThe total value cannot be zero or negative.\nDo you want to enter your denominations ? (Y/N) :N\nEnter the change you want to make: -98\nThe total value cannot be zero or negative.\n\nDo you want to enter your denominations ? (Y/N) :Y\nEnter number of denomination:5\n1\n5\n100\n500\n1000\nEnter the change you want to make: 456\nFollowing is minimal   change for 456 :\n100 100 100 100 5 5 5 5 5 5 5 5 5 5 5 1\n&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">find_minimum_change</span>(<span class=\"hljs-params\">denominations: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>], value: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Find the minimum change from the given denominations and value\n    &gt;&gt;&gt; find_minimum_change([1, 5, 10, 20, 50, 100, 200, 500, 1000,2000], 18745)\n    [2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 500, 200, 20, 20, 5]\n    &gt;&gt;&gt; find_minimum_change([1, 2, 5, 10, 20, 50, 100, 500, 2000], 987)\n    [500, 100, 100, 100, 100, 50, 20, 10, 5, 2]\n    &gt;&gt;&gt; find_minimum_change([1, 2, 5, 10, 20, 50, 100, 500, 2000], 0)\n    []\n    &gt;&gt;&gt; find_minimum_change([1, 2, 5, 10, 20, 50, 100, 500, 2000], -98)\n    []\n    &gt;&gt;&gt; find_minimum_change([1, 5, 100, 500, 1000], 456)\n    [100, 100, 100, 100, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1]\n    &quot;&quot;&quot;</span>\n    total_value = <span class=\"hljs-built_in\">int</span>(value)\n\n    <span class=\"hljs-comment\"># Initialize Result</span>\n    answer = []\n\n    <span class=\"hljs-comment\"># Traverse through all denomination</span>\n    <span class=\"hljs-keyword\">for</span> denomination <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">reversed</span>(denominations):\n\n        <span class=\"hljs-comment\"># Find denominations</span>\n        <span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">int</span>(total_value) &gt;= <span class=\"hljs-built_in\">int</span>(denomination):\n            total_value -= <span class=\"hljs-built_in\">int</span>(denomination)\n            answer.append(denomination)  <span class=\"hljs-comment\"># Append the &quot;answers&quot; array</span>\n\n    <span class=\"hljs-keyword\">return</span> answer\n\n\n<span class=\"hljs-comment\"># Driver Code</span>\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n\n    denominations = <span class=\"hljs-built_in\">list</span>()\n    value = <span class=\"hljs-number\">0</span>\n\n    <span class=\"hljs-keyword\">if</span> (\n        <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Do you want to enter your denominations ? (yY/n): &quot;</span>).strip().lower()\n        == <span class=\"hljs-string\">&quot;y&quot;</span>\n    ):\n        n = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter the number of denominations you want to add: &quot;</span>).strip())\n\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, n):\n            denominations.append(<span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">f&quot;Denomination <span class=\"hljs-subst\">{i}</span>: &quot;</span>).strip()))\n        value = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter the change you want to make in Indian Currency: &quot;</span>).strip()\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-comment\"># All denominations of Indian Currency if user does not enter</span>\n        denominations = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">500</span>, <span class=\"hljs-number\">2000</span>]\n        value = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter the change you want to make: &quot;</span>).strip()\n\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">int</span>(value) == <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-built_in\">int</span>(value) &lt; <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;The total value cannot be zero or negative.&quot;</span>)\n\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Following is minimal change for <span class=\"hljs-subst\">{value}</span>: &quot;</span>)\n        answer = find_minimum_change(denominations, value)\n        <span class=\"hljs-comment\"># Print result</span>\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(answer)):\n            <span class=\"hljs-built_in\">print</span>(answer[i], end=<span class=\"hljs-string\">&quot; &quot;</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "DevanshiPatel18",
      "email": "61454611+DevanshiPatel18@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
