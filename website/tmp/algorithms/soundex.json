{
  "slug": "soundex",
  "name": "Soundex",
  "categories": ["datastructures", "linkedlist"],
  "body": {},
  "implementations": {
    "c-sharp": {
      "dir": "Algorithms/Encoders/SoundexEncoder.cs",
      "url": "https://github.com/TheAlgorithms/C-Sharp/blob/master/Algorithms/Encoders/SoundexEncoder.cs",
      "code": "<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.Linq;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Algorithms.Encoders</span>\n{\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Class for Soundex encoding strings.</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SoundexEncoder</span>\n    {\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Encodes a string using the Soundex Algorithm.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;text&quot;&gt;</span>The string to encode.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>The Soundex encoded string (one uppercase character and three digits).<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">Encode</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> text</span>)</span>\n        {\n            text = text.ToLowerInvariant();\n            <span class=\"hljs-keyword\">var</span> chars = OmitHAndW(text);\n            IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; numbers = ProduceNumberCoding(chars);\n            numbers = CollapseDoubles(numbers);\n            numbers = OmitVowels(numbers);\n            numbers = CollapseLeadingDigit(numbers, text[<span class=\"hljs-number\">0</span>]);\n            numbers = numbers.Take(<span class=\"hljs-number\">3</span>);\n            numbers = PadTo3Numbers(numbers);\n            <span class=\"hljs-keyword\">var</span> final = numbers.ToArray();\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">$&quot;<span class=\"hljs-subst\">{text.ToUpperInvariant()[<span class=\"hljs-number\">0</span>]}</span><span class=\"hljs-subst\">{final[<span class=\"hljs-number\">0</span>]}</span><span class=\"hljs-subst\">{final[<span class=\"hljs-number\">1</span>]}</span><span class=\"hljs-subst\">{final[<span class=\"hljs-number\">2</span>]}</span>&quot;</span>;\n        }\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; <span class=\"hljs-title\">CollapseLeadingDigit</span>(<span class=\"hljs-params\">IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; numbers, <span class=\"hljs-built_in\">char</span> c</span>)</span>\n        {\n            <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">var</span> enumerator = numbers.GetEnumerator();\n            enumerator.MoveNext();\n            <span class=\"hljs-keyword\">if</span> (enumerator.Current == MapToNumber(c))\n            {\n                enumerator.MoveNext();\n            }\n\n            <span class=\"hljs-keyword\">do</span>\n            {\n                <span class=\"hljs-keyword\">yield</span> <span class=\"hljs-keyword\">return</span> enumerator.Current;\n            }\n            <span class=\"hljs-keyword\">while</span> (enumerator.MoveNext());\n        }\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; <span class=\"hljs-title\">PadTo3Numbers</span>(<span class=\"hljs-params\">IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; numbers</span>)</span>\n        {\n            <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">var</span> enumerator = numbers.GetEnumerator();\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">3</span>; i++)\n            {\n                <span class=\"hljs-keyword\">yield</span> <span class=\"hljs-keyword\">return</span> enumerator.MoveNext()\n                    ? enumerator.Current\n                    : <span class=\"hljs-number\">0</span>;\n            }\n        }\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; <span class=\"hljs-title\">OmitVowels</span>(<span class=\"hljs-params\">IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; numbers</span>)</span> =&gt; numbers.Where(i =&gt; i != <span class=\"hljs-number\">0</span>);\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> IEnumerable&lt;<span class=\"hljs-built_in\">char</span>&gt; <span class=\"hljs-title\">OmitHAndW</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> text</span>)</span> =&gt; text.Where(c =&gt; c != <span class=\"hljs-string\">&#x27;h&#x27;</span> &amp;&amp; c != <span class=\"hljs-string\">&#x27;w&#x27;</span>);\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; <span class=\"hljs-title\">CollapseDoubles</span>(<span class=\"hljs-params\">IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; numbers</span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> previous = <span class=\"hljs-built_in\">int</span>.MinValue;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> i <span class=\"hljs-keyword\">in</span> numbers)\n            {\n                <span class=\"hljs-keyword\">if</span> (previous != i)\n                {\n                    <span class=\"hljs-keyword\">yield</span> <span class=\"hljs-keyword\">return</span> i;\n                    previous = i;\n                }\n            }\n        }\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> IEnumerable&lt;<span class=\"hljs-built_in\">int</span>&gt; <span class=\"hljs-title\">ProduceNumberCoding</span>(<span class=\"hljs-params\">IEnumerable&lt;<span class=\"hljs-built_in\">char</span>&gt; text</span>)</span> =&gt; text.Select(MapToNumber);\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">MapToNumber</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">char</span> ch</span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> mapping = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-built_in\">char</span>, <span class=\"hljs-built_in\">int</span>&gt;\n            {\n                [<span class=\"hljs-string\">&#x27;a&#x27;</span>] = <span class=\"hljs-number\">0</span>,\n                [<span class=\"hljs-string\">&#x27;e&#x27;</span>] = <span class=\"hljs-number\">0</span>,\n                [<span class=\"hljs-string\">&#x27;i&#x27;</span>] = <span class=\"hljs-number\">0</span>,\n                [<span class=\"hljs-string\">&#x27;o&#x27;</span>] = <span class=\"hljs-number\">0</span>,\n                [<span class=\"hljs-string\">&#x27;u&#x27;</span>] = <span class=\"hljs-number\">0</span>,\n                [<span class=\"hljs-string\">&#x27;y&#x27;</span>] = <span class=\"hljs-number\">0</span>,\n                [<span class=\"hljs-string\">&#x27;h&#x27;</span>] = <span class=\"hljs-number\">8</span>,\n                [<span class=\"hljs-string\">&#x27;w&#x27;</span>] = <span class=\"hljs-number\">8</span>,\n                [<span class=\"hljs-string\">&#x27;b&#x27;</span>] = <span class=\"hljs-number\">1</span>,\n                [<span class=\"hljs-string\">&#x27;f&#x27;</span>] = <span class=\"hljs-number\">1</span>,\n                [<span class=\"hljs-string\">&#x27;p&#x27;</span>] = <span class=\"hljs-number\">1</span>,\n                [<span class=\"hljs-string\">&#x27;v&#x27;</span>] = <span class=\"hljs-number\">1</span>,\n                [<span class=\"hljs-string\">&#x27;c&#x27;</span>] = <span class=\"hljs-number\">2</span>,\n                [<span class=\"hljs-string\">&#x27;g&#x27;</span>] = <span class=\"hljs-number\">2</span>,\n                [<span class=\"hljs-string\">&#x27;j&#x27;</span>] = <span class=\"hljs-number\">2</span>,\n                [<span class=\"hljs-string\">&#x27;k&#x27;</span>] = <span class=\"hljs-number\">2</span>,\n                [<span class=\"hljs-string\">&#x27;q&#x27;</span>] = <span class=\"hljs-number\">2</span>,\n                [<span class=\"hljs-string\">&#x27;s&#x27;</span>] = <span class=\"hljs-number\">2</span>,\n                [<span class=\"hljs-string\">&#x27;x&#x27;</span>] = <span class=\"hljs-number\">2</span>,\n                [<span class=\"hljs-string\">&#x27;z&#x27;</span>] = <span class=\"hljs-number\">2</span>,\n                [<span class=\"hljs-string\">&#x27;d&#x27;</span>] = <span class=\"hljs-number\">3</span>,\n                [<span class=\"hljs-string\">&#x27;t&#x27;</span>] = <span class=\"hljs-number\">3</span>,\n                [<span class=\"hljs-string\">&#x27;l&#x27;</span>] = <span class=\"hljs-number\">4</span>,\n                [<span class=\"hljs-string\">&#x27;m&#x27;</span>] = <span class=\"hljs-number\">5</span>,\n                [<span class=\"hljs-string\">&#x27;n&#x27;</span>] = <span class=\"hljs-number\">5</span>,\n                [<span class=\"hljs-string\">&#x27;r&#x27;</span>] = <span class=\"hljs-number\">6</span>,\n            };\n\n            <span class=\"hljs-keyword\">return</span> mapping[ch];\n        }\n    }\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
