{
  "slug": "open-knight-tour",
  "name": "Open Knight Tour",
  "categories": ["backtracking"],
  "body": {},
  "implementations": {
    "dart": {
      "dir": "backtracking/open_knight_tour.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/backtracking/open_knight_tour.dart",
      "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;dart:io&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:test/test.dart&#x27;</span>;\n\n<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt;&gt; getValidPos(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; position, <span class=\"hljs-built_in\">int</span> n) {\n  <span class=\"hljs-keyword\">final</span> i = position[<span class=\"hljs-number\">0</span>];\n  <span class=\"hljs-keyword\">final</span> j = position[<span class=\"hljs-number\">1</span>];\n  <span class=\"hljs-keyword\">final</span> positions = [\n    [i + <span class=\"hljs-number\">1</span>, j + <span class=\"hljs-number\">2</span>],\n    [i - <span class=\"hljs-number\">1</span>, j + <span class=\"hljs-number\">2</span>],\n    [i + <span class=\"hljs-number\">1</span>, j - <span class=\"hljs-number\">2</span>],\n    [i - <span class=\"hljs-number\">1</span>, j - <span class=\"hljs-number\">2</span>],\n    [i + <span class=\"hljs-number\">2</span>, j + <span class=\"hljs-number\">1</span>],\n    [i + <span class=\"hljs-number\">2</span>, j - <span class=\"hljs-number\">1</span>],\n    [i - <span class=\"hljs-number\">2</span>, j + <span class=\"hljs-number\">1</span>],\n    [i - <span class=\"hljs-number\">2</span>, j - <span class=\"hljs-number\">1</span>],\n  ];\n\n  <span class=\"hljs-keyword\">final</span> <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt;&gt; permissiblePositions = [];\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">final</span> currPosition <span class=\"hljs-keyword\">in</span> positions) {\n    <span class=\"hljs-keyword\">final</span> iTest = currPosition[<span class=\"hljs-number\">0</span>];\n    <span class=\"hljs-keyword\">final</span> jTest = currPosition[<span class=\"hljs-number\">1</span>];\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">0</span> &lt;= iTest &amp;&amp; iTest &lt; n &amp;&amp; <span class=\"hljs-number\">0</span> &lt;= jTest &amp;&amp; jTest &lt; n) {\n      permissiblePositions.add(currPosition);\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> permissiblePositions;\n}\n\n<span class=\"hljs-built_in\">bool</span> isComplete(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt;&gt; board) {\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">final</span> row <span class=\"hljs-keyword\">in</span> board) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">final</span> elem <span class=\"hljs-keyword\">in</span> row) {\n      <span class=\"hljs-keyword\">if</span> (elem == <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">true</span>;\n}\n\n<span class=\"hljs-built_in\">bool</span> openKnightTourHelper(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt;&gt; board, <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; pos, <span class=\"hljs-built_in\">int</span> curr) {\n  <span class=\"hljs-keyword\">if</span> (isComplete(board)) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">true</span>;\n  }\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">final</span> position <span class=\"hljs-keyword\">in</span> getValidPos(pos, board.length)) {\n    <span class=\"hljs-keyword\">final</span> i = position[<span class=\"hljs-number\">0</span>];\n    <span class=\"hljs-keyword\">final</span> j = position[<span class=\"hljs-number\">1</span>];\n\n    <span class=\"hljs-keyword\">if</span> (board[i][j] == <span class=\"hljs-number\">0</span>) {\n      board[i][j] = curr + <span class=\"hljs-number\">1</span>;\n      <span class=\"hljs-keyword\">if</span> (openKnightTourHelper(board, position, curr + <span class=\"hljs-number\">1</span>)) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">true</span>;\n      }\n      board[i][j] = <span class=\"hljs-number\">0</span>;\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n}\n\n<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt;&gt; openKnightTour(<span class=\"hljs-built_in\">int</span> n) {\n  <span class=\"hljs-comment\">// board creation</span>\n  <span class=\"hljs-keyword\">final</span> <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt;&gt; board = [];\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; row = [];\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j++) {\n      row.add(<span class=\"hljs-number\">0</span>);\n    }\n    board.add(row);\n  }\n  <span class=\"hljs-comment\">// open knight tour with backtracking</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j++) {\n      board[i][j] = <span class=\"hljs-number\">1</span>;\n      <span class=\"hljs-keyword\">if</span> (openKnightTourHelper(board, [i, j], <span class=\"hljs-number\">1</span>)) {\n        <span class=\"hljs-keyword\">return</span> board;\n      }\n      board[i][j] = <span class=\"hljs-number\">0</span>;\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> board;\n}\n\n<span class=\"hljs-keyword\">void</span> printBoard(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt;&gt; board) {\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">final</span> row <span class=\"hljs-keyword\">in</span> board) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">final</span> elem <span class=\"hljs-keyword\">in</span> row) {\n      stdout.write(elem);\n    }\n    stdout.write(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n  }\n  stdout.write(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n}\n\n<span class=\"hljs-keyword\">void</span> main() {\n  test((<span class=\"hljs-string\">&#x27;getValidPos: testCase #1&#x27;</span>), () {\n    expect(\n        getValidPos([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>], <span class=\"hljs-number\">4</span>),\n        equals([\n          [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>],\n          [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>],\n          [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>]\n        ]));\n  });\n\n  test((<span class=\"hljs-string\">&#x27;getValidPos: testCase #3&#x27;</span>), () {\n    expect(\n        getValidPos([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>], <span class=\"hljs-number\">5</span>),\n        equals([\n          [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>],\n          [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">4</span>],\n          [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">0</span>],\n          [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n          [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>],\n          [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>]\n        ]));\n  });\n\n  test((<span class=\"hljs-string\">&#x27;isComplete: testCase #1&#x27;</span>), () {\n    expect(\n        isComplete([\n          [<span class=\"hljs-number\">1</span>]\n        ]),\n        equals(<span class=\"hljs-keyword\">true</span>));\n  });\n\n  test((<span class=\"hljs-string\">&#x27;isComplete: testCase #2&#x27;</span>), () {\n    expect(\n        isComplete([\n          [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>],\n          [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">0</span>]\n        ]),\n        equals(<span class=\"hljs-keyword\">false</span>));\n  });\n\n  test((<span class=\"hljs-string\">&#x27;openKnightTour: testCase #1&#x27;</span>), () {\n    expect(\n        openKnightTour(<span class=\"hljs-number\">1</span>),\n        equals([\n          [<span class=\"hljs-number\">1</span>]\n        ]));\n  });\n\n  test((<span class=\"hljs-string\">&#x27;openKnightTour: testCase #2&#x27;</span>), () {\n    expect(\n        openKnightTour(<span class=\"hljs-number\">2</span>),\n        equals([\n          [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n          [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>]\n        ]));\n  });\n\n  test((<span class=\"hljs-string\">&#x27;openKnightTour: testCase #3&#x27;</span>), () {\n    expect(\n        openKnightTour(<span class=\"hljs-number\">5</span>),\n        equals([\n          [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">19</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">25</span>],\n          [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">18</span>],\n          [<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">24</span>, <span class=\"hljs-number\">3</span>],\n          [<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">22</span>, <span class=\"hljs-number\">17</span>, <span class=\"hljs-number\">12</span>],\n          [<span class=\"hljs-number\">21</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">23</span>]\n        ]));\n  });\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Tapajyoti Bose",
      "email": "ruppysuppy@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
