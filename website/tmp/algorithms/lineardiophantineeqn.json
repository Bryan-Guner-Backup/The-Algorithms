{
  "slug": "lineardiophantineeqn",
  "name": "LinearDiophantineEqn",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "dart": {
      "dir": "maths/LinearDiophantineEqn.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/maths/LinearDiophantineEqn.dart",
      "code": "<span class=\"hljs-comment\">// Program Linear Diophantine equation</span>\n\n<span class=\"hljs-comment\">//Find the GCD of two numbers</span>\n<span class=\"hljs-built_in\">int</span> gcd(<span class=\"hljs-built_in\">int</span> a, <span class=\"hljs-built_in\">int</span> b) {\n  <span class=\"hljs-keyword\">return</span> (a % b == <span class=\"hljs-number\">0</span>) ? b.abs() : gcd(b, a % b);\n}\n\n<span class=\"hljs-comment\">// This function checks if integral solutions are possible</span>\n<span class=\"hljs-built_in\">bool</span> Isposs(<span class=\"hljs-built_in\">int</span> a, <span class=\"hljs-built_in\">int</span> b, <span class=\"hljs-built_in\">int</span> c) {\n  <span class=\"hljs-keyword\">return</span> (c % gcd(a, b) == <span class=\"hljs-number\">0</span>);\n}\n\n<span class=\"hljs-comment\">//Driver function for Linear Diophantine Equations</span>\n<span class=\"hljs-built_in\">int</span> main() {\n  <span class=\"hljs-built_in\">int</span> a = <span class=\"hljs-number\">3</span>, b = <span class=\"hljs-number\">6</span>, c = <span class=\"hljs-number\">9</span>;\n  <span class=\"hljs-keyword\">if</span> (Isposs(a, b, c) == <span class=\"hljs-keyword\">true</span>) {\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Possible&quot;</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Not Possible&quot;</span>);\n  }\n  <span class=\"hljs-built_in\">int</span> x = <span class=\"hljs-number\">3</span>, y = <span class=\"hljs-number\">6</span>, z = <span class=\"hljs-number\">8</span>;\n  <span class=\"hljs-keyword\">if</span> (Isposs(x, y, z) == <span class=\"hljs-keyword\">true</span>) {\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Possible&quot;</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Not Possible&quot;</span>);\n  }\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    },
    "matlab-octave": {
      "dir": "algorithms/maths/linear_diophantine_eqn.m",
      "url": "https://github.com/TheAlgorithms/matlab-octave/tree/master/algorithms/maths/linear_diophantine_eqn.m",
      "code": "<span class=\"hljs-comment\">% Linear Diophantine Equation</span>\n<span class=\"hljs-comment\">%Given three integers a, b, c representing a linear equation of the form : ax + by = c. </span>\n<span class=\"hljs-comment\">%To find if the equation has a solution such that x and y are both integral values.</span>\n<span class=\"hljs-comment\">%Used in programming to find the exact solution exists or not.</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">retval</span> = <span class=\"hljs-title\">linear_diophantine_eqn</span> <span class=\"hljs-params\">(a,b,c)</span></span>\n   <span class=\"hljs-keyword\">if</span> c <span class=\"hljs-comment\">% gcd(a,b)==0</span>\n     retval=<span class=\"hljs-built_in\">true</span>;            <span class=\"hljs-comment\">% 1 represent yes it exist</span>\n   <span class=\"hljs-keyword\">else</span>\n     retval= <span class=\"hljs-built_in\">false</span>;          <span class=\"hljs-comment\">%  0 represent no it doesn&#x27;t exist</span>\n\n<span class=\"hljs-keyword\">end</span>\n"
    }
  },
  "contributors": [
    {
      "name": "KAUSHAL DEVRARI",
      "email": "71590645+KaushalDevrari@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
