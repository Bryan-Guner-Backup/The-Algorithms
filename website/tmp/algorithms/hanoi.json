{
  "slug": "hanoi",
  "name": "Hanoi",
  "categories": ["others", "restrictedtowerofhanoi", "main"],
  "body": {},
  "implementations": {
    "java": {
      "dir": "Others/RestrictedTowerOfHanoi/Main/Hanoi.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/Others/RestrictedTowerOfHanoi/Main/Hanoi.java",
      "code": "<span class=\"hljs-keyword\">import</span> java.awt.*;\n<span class=\"hljs-keyword\">import</span> java.awt.event.*;\n<span class=\"hljs-keyword\">import</span> java.util.*;\n<span class=\"hljs-keyword\">import</span> javax.swing.*;\n<span class=\"hljs-keyword\">import</span> javax.swing.Timer;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Hanoi</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">JFrame</span> {\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">ONE_SECOND</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1000</span>;\n\n  <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">number_of_disks</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">game_counter</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n\n  <span class=\"hljs-comment\">/*  GUI COMPONENTS */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">JButton</span> <span class=\"hljs-variable\">move_button</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">JButton</span>();\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">JButton</span> <span class=\"hljs-variable\">exit_button</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">JButton</span>();\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">JButton</span> <span class=\"hljs-variable\">replay_button</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">JButton</span>();\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">JButton</span> <span class=\"hljs-variable\">auto_button</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">JButton</span>();\n\n  <span class=\"hljs-comment\">/* BACKEND COMPONENTS */</span>\n  <span class=\"hljs-keyword\">public</span> ArrayList&lt;String&gt; movements = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;String&gt;();\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">StringBuilder</span> <span class=\"hljs-variable\">stringBuilder</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuilder</span>();\n\n  <span class=\"hljs-keyword\">public</span> ArrayList&lt;Integer&gt; Stack1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;Integer&gt;();\n  <span class=\"hljs-keyword\">public</span> ArrayList&lt;Integer&gt; Stack2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;Integer&gt;();\n  <span class=\"hljs-keyword\">public</span> ArrayList&lt;Integer&gt; Stack3 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;Integer&gt;();\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">updateStacks</span><span class=\"hljs-params\">()</span> {\n    <span class=\"hljs-keyword\">if</span> (game_counter != movements.size()) {\n      <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">temp</span> <span class=\"hljs-operator\">=</span> movements.get(game_counter);\n      System.out.println(temp);\n      <span class=\"hljs-keyword\">if</span> (temp.charAt(<span class=\"hljs-number\">1</span>) == <span class=\"hljs-string\">&#x27;A&#x27;</span>) {\n        <span class=\"hljs-keyword\">if</span> (temp.charAt(<span class=\"hljs-number\">2</span>) == <span class=\"hljs-string\">&#x27;B&#x27;</span>) {\n          <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">x</span> <span class=\"hljs-operator\">=</span> Stack1.get(Stack1.size() - <span class=\"hljs-number\">1</span>);\n          Stack1.remove(Stack1.size() - <span class=\"hljs-number\">1</span>);\n          Stack2.add(x);\n        }\n      }\n      <span class=\"hljs-keyword\">if</span> (temp.charAt(<span class=\"hljs-number\">1</span>) == <span class=\"hljs-string\">&#x27;C&#x27;</span>) {\n        <span class=\"hljs-keyword\">if</span> (temp.charAt(<span class=\"hljs-number\">2</span>) == <span class=\"hljs-string\">&#x27;B&#x27;</span>) {\n          <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">x</span> <span class=\"hljs-operator\">=</span> Stack3.get(Stack3.size() - <span class=\"hljs-number\">1</span>);\n          Stack3.remove(Stack3.size() - <span class=\"hljs-number\">1</span>);\n          Stack2.add(x);\n        }\n      }\n\n      <span class=\"hljs-keyword\">if</span> (temp.charAt(<span class=\"hljs-number\">1</span>) == <span class=\"hljs-string\">&#x27;B&#x27;</span>) {\n        <span class=\"hljs-keyword\">if</span> (temp.charAt(<span class=\"hljs-number\">2</span>) == <span class=\"hljs-string\">&#x27;C&#x27;</span>) {\n          <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">x</span> <span class=\"hljs-operator\">=</span> Stack2.get(Stack2.size() - <span class=\"hljs-number\">1</span>);\n          Stack2.remove(Stack2.size() - <span class=\"hljs-number\">1</span>);\n          Stack3.add(x);\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (temp.charAt(<span class=\"hljs-number\">2</span>) == <span class=\"hljs-string\">&#x27;A&#x27;</span>) {\n          <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">x</span> <span class=\"hljs-operator\">=</span> Stack2.get(Stack2.size() - <span class=\"hljs-number\">1</span>);\n          Stack2.remove(Stack2.size() - <span class=\"hljs-number\">1</span>);\n          Stack1.add(x);\n        }\n      }\n      revalidate();\n      repaint();\n      game_counter++;\n    }\n  }\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">paint</span><span class=\"hljs-params\">(Graphics canvas)</span> {\n    <span class=\"hljs-built_in\">super</span>.paint(canvas);\n\n    <span class=\"hljs-comment\">// Drawing pedestels</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">3</span>; i++) {\n      canvas.drawRect(<span class=\"hljs-number\">30</span> + i * <span class=\"hljs-number\">230</span>, <span class=\"hljs-number\">670</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">20</span>);\n      canvas.setColor(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Color</span>(<span class=\"hljs-number\">76</span>, <span class=\"hljs-number\">174</span>, <span class=\"hljs-number\">227</span>)); <span class=\"hljs-comment\">// Blue Accent</span>\n      canvas.fillRect(<span class=\"hljs-number\">30</span> + i * <span class=\"hljs-number\">230</span>, <span class=\"hljs-number\">670</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">20</span>);\n\n      canvas.fillRect(<span class=\"hljs-number\">130</span> + i * <span class=\"hljs-number\">230</span> - <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">670</span> - <span class=\"hljs-number\">170</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">170</span>);\n      canvas.setColor(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Color</span>(<span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>)); <span class=\"hljs-comment\">// Arseny</span>\n      canvas.fillRect(<span class=\"hljs-number\">130</span> + i * <span class=\"hljs-number\">230</span> - <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">670</span> - <span class=\"hljs-number\">170</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">170</span>);\n    }\n\n    <span class=\"hljs-comment\">// Disks in stack1</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>; i &lt;= Stack1.size(); i++) {\n      canvas.drawRect(<span class=\"hljs-number\">130</span> - Stack1.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">670</span> - i * <span class=\"hljs-number\">12</span>, Stack1.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">10</span>);\n      canvas.setColor(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Color</span>(<span class=\"hljs-number\">64</span>, <span class=\"hljs-number\">26</span>, <span class=\"hljs-number\">0</span>)); <span class=\"hljs-comment\">// Brown Wolfers</span>\n      canvas.fillRect(<span class=\"hljs-number\">130</span> - Stack1.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">670</span> - i * <span class=\"hljs-number\">12</span>, Stack1.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">10</span>);\n    }\n\n    <span class=\"hljs-comment\">// Disks in stack2</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>; i &lt;= Stack2.size(); i++) {\n      canvas.drawRect(<span class=\"hljs-number\">360</span> - Stack2.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">670</span> - i * <span class=\"hljs-number\">12</span>, Stack2.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">10</span>);\n      canvas.setColor(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Color</span>(<span class=\"hljs-number\">64</span>, <span class=\"hljs-number\">26</span>, <span class=\"hljs-number\">0</span>)); <span class=\"hljs-comment\">// Brown Wolfers</span>\n      canvas.fillRect(<span class=\"hljs-number\">360</span> - Stack2.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">670</span> - i * <span class=\"hljs-number\">12</span>, Stack2.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">10</span>);\n    }\n\n    <span class=\"hljs-comment\">// Disks in stack3</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>; i &lt;= Stack3.size(); i++) {\n      canvas.drawRect(<span class=\"hljs-number\">590</span> - Stack3.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">670</span> - i * <span class=\"hljs-number\">12</span>, Stack3.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">10</span>);\n      canvas.setColor(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Color</span>(<span class=\"hljs-number\">64</span>, <span class=\"hljs-number\">26</span>, <span class=\"hljs-number\">0</span>)); <span class=\"hljs-comment\">// Brown Wolfers</span>\n      canvas.fillRect(<span class=\"hljs-number\">590</span> - Stack3.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">670</span> - i * <span class=\"hljs-number\">12</span>, Stack3.get(i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">10</span>);\n    }\n  }\n\n  <span class=\"hljs-comment\">// Function to initialize the widget properties and the frame.</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">initialize</span><span class=\"hljs-params\">()</span> {\n\n    move_button.setIcon(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ImageIcon</span>(<span class=\"hljs-string\">&quot;../Resources/rsz_move.png&quot;</span>));\n    move_button.setBounds(<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>);\n\n    auto_button.setIcon(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ImageIcon</span>(<span class=\"hljs-string\">&quot;../Resources/rsz_loop.png&quot;</span>));\n    auto_button.setBounds(<span class=\"hljs-number\">260</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>);\n\n    replay_button.setIcon(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ImageIcon</span>(<span class=\"hljs-string\">&quot;../Resources/rsz_replay.jpg&quot;</span>));\n    replay_button.setBounds(<span class=\"hljs-number\">390</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>);\n\n    exit_button.setIcon(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ImageIcon</span>(<span class=\"hljs-string\">&quot;../Resources/rsz_exit.png&quot;</span>));\n    exit_button.setBounds(<span class=\"hljs-number\">520</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>);\n\n    add(move_button);\n    add(exit_button);\n    add(replay_button);\n    add(auto_button);\n\n    setLayout(<span class=\"hljs-literal\">null</span>);\n    setSize(<span class=\"hljs-number\">720</span>, <span class=\"hljs-number\">720</span>);\n    setVisible(<span class=\"hljs-literal\">true</span>);\n    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n  }\n  <span class=\"hljs-comment\">// Main cnstructor.</span>\n  Hanoi() {\n    <span class=\"hljs-built_in\">super</span>(<span class=\"hljs-string\">&quot;restricted tower of hanoi&quot;</span>);\n    initialize();\n\n    <span class=\"hljs-comment\">// MOVE BUTTON ACTION LISTENER</span>\n    move_button.addActionListener(\n        <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ActionListener</span>() {\n          <span class=\"hljs-meta\">@Override</span>\n          <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">actionPerformed</span><span class=\"hljs-params\">(ActionEvent e)</span> {\n            updateStacks();\n          }\n        });\n\n    <span class=\"hljs-comment\">// EXIT BUTTON ACTION LISTENER</span>\n    exit_button.addActionListener(\n        <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ActionListener</span>() {\n          <span class=\"hljs-meta\">@Override</span>\n          <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">actionPerformed</span><span class=\"hljs-params\">(ActionEvent e)</span> {\n            System.exit(<span class=\"hljs-number\">0</span>);\n          }\n        });\n\n    <span class=\"hljs-comment\">// REPLAY BUTTON ACTION LISTENER</span>\n    replay_button.addActionListener(\n        <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ActionListener</span>() {\n          <span class=\"hljs-meta\">@Override</span>\n          <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">actionPerformed</span><span class=\"hljs-params\">(ActionEvent e)</span> {\n            startGame();\n            repaint();\n          }\n        });\n\n    <span class=\"hljs-comment\">// AUTOMATIC PLAY BUTTON ACTION LISTENER</span>\n    auto_button.addActionListener(\n        <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ActionListener</span>() {\n          <span class=\"hljs-meta\">@Override</span>\n          <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">actionPerformed</span><span class=\"hljs-params\">(ActionEvent e)</span> {\n            timer.start();\n            <span class=\"hljs-keyword\">if</span> (game_counter == movements.size()) {\n              timer.stop();\n            }\n          }\n        });\n  }\n\n  <span class=\"hljs-type\">Timer</span> <span class=\"hljs-variable\">timer</span> <span class=\"hljs-operator\">=</span>\n      <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Timer</span>(\n          ONE_SECOND,\n          <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ActionListener</span>() {\n            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">actionPerformed</span><span class=\"hljs-params\">(ActionEvent e)</span> {\n              updateStacks();\n            }\n          });\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">startGame</span><span class=\"hljs-params\">()</span> {\n\n    System.out.println(<span class=\"hljs-string\">&quot;New Game Started&quot;</span>);\n    timer.stop();\n\n    Stack1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;Integer&gt;();\n    Stack2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;Integer&gt;();\n    Stack3 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;Integer&gt;();\n\n    movements = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;String&gt;();\n    game_counter = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; number_of_disks; i++) {\n      Stack1.add(number_of_disks - i);\n    }\n\n    towerOfHanoi(number_of_disks, <span class=\"hljs-string\">&#x27;A&#x27;</span>, <span class=\"hljs-string\">&#x27;C&#x27;</span>, <span class=\"hljs-string\">&#x27;B&#x27;</span>);\n  }\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\n    <span class=\"hljs-type\">Hanoi</span> <span class=\"hljs-variable\">tower</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Hanoi</span>();\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">number</span> <span class=\"hljs-operator\">=</span> Integer.parseInt(args[<span class=\"hljs-number\">0</span>]);\n    tower.number_of_disks = number;\n    tower.startGame();\n    <span class=\"hljs-comment\">/*for(int i=0;i&lt;tower.movements.size();i++) {\n        System.out.println(tower.movements.get(i));\n        //System.out.println(tower.Stack1.get(i));\n    }*/</span>\n  }\n\n  <span class=\"hljs-comment\">// Recursive function to formulate restricted tower of hanoi.</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">towerOfHanoi</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> n, <span class=\"hljs-type\">char</span> from_rod, <span class=\"hljs-type\">char</span> to_rod, <span class=\"hljs-type\">char</span> aux_rod)</span> {\n    <span class=\"hljs-keyword\">if</span> (n == <span class=\"hljs-number\">1</span>) {\n      stringBuilder.setLength(<span class=\"hljs-number\">0</span>);\n      stringBuilder.append(Integer.toString(n));\n      stringBuilder.append(from_rod);\n      stringBuilder.append(aux_rod);\n      movements.add(stringBuilder.toString());\n      <span class=\"hljs-comment\">// System.out.println(&quot;Move disk 1 from rod &quot; +  from_rod + &quot; to rod &quot; + aux_rod);</span>\n      stringBuilder.setLength(<span class=\"hljs-number\">0</span>);\n      stringBuilder.append(Integer.toString(n));\n      stringBuilder.append(aux_rod);\n      stringBuilder.append(to_rod);\n      movements.add(stringBuilder.toString());\n      <span class=\"hljs-comment\">// System.out.println(&quot;Move disk 1 from rod &quot; +  aux_rod + &quot; to rod &quot; + to_rod);</span>\n      <span class=\"hljs-keyword\">return</span>;\n    }\n    towerOfHanoi(n - <span class=\"hljs-number\">1</span>, from_rod, to_rod, aux_rod);\n    stringBuilder.setLength(<span class=\"hljs-number\">0</span>);\n    stringBuilder.append(Integer.toString(n));\n    stringBuilder.append(from_rod);\n    stringBuilder.append(aux_rod);\n    movements.add(stringBuilder.toString());\n    <span class=\"hljs-comment\">// System.out.println(&quot;Move disk &quot; + n + &quot; from rod &quot; +  from_rod + &quot; to rod &quot; + aux_rod);</span>\n    towerOfHanoi(n - <span class=\"hljs-number\">1</span>, to_rod, from_rod, aux_rod);\n    stringBuilder.setLength(<span class=\"hljs-number\">0</span>);\n    stringBuilder.append(Integer.toString(n));\n    stringBuilder.append(aux_rod);\n    stringBuilder.append(to_rod);\n    movements.add(stringBuilder.toString());\n    <span class=\"hljs-comment\">// System.out.println(&quot;Move disk &quot; + n + &quot; from rod &quot; +  aux_rod + &quot; to rod &quot; + to_rod);</span>\n    towerOfHanoi(n - <span class=\"hljs-number\">1</span>, from_rod, to_rod, aux_rod);\n  }\n}\n"
    },
    "rust": {
      "dir": "src/general/hanoi.rs",
      "url": "https://github.com/TheAlgorithms/rust/tree/master/src/general/hanoi.rs",
      "code": "<span class=\"hljs-keyword\">pub</span> <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">hanoi</span>(n: <span class=\"hljs-type\">i32</span>, from: <span class=\"hljs-type\">i32</span>, to: <span class=\"hljs-type\">i32</span>, via: <span class=\"hljs-type\">i32</span>, moves: &amp;<span class=\"hljs-keyword\">mut</span> <span class=\"hljs-type\">Vec</span>&lt;(<span class=\"hljs-type\">i32</span>, <span class=\"hljs-type\">i32</span>)&gt;) {\n    <span class=\"hljs-keyword\">if</span> n &gt; <span class=\"hljs-number\">0</span> {\n        <span class=\"hljs-title function_ invoke__\">hanoi</span>(n - <span class=\"hljs-number\">1</span>, from, via, to, moves);\n        moves.<span class=\"hljs-title function_ invoke__\">push</span>((from, to));\n        <span class=\"hljs-title function_ invoke__\">hanoi</span>(n - <span class=\"hljs-number\">1</span>, via, to, from, moves);\n    }\n}\n\n<span class=\"hljs-meta\">#[cfg(test)]</span>\n<span class=\"hljs-keyword\">mod</span> tests {\n    <span class=\"hljs-keyword\">use</span> super::*;\n\n    <span class=\"hljs-meta\">#[test]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">hanoi_simple</span>() {\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">correct_solution</span>: <span class=\"hljs-type\">Vec</span>&lt;(<span class=\"hljs-type\">i32</span>, <span class=\"hljs-type\">i32</span>)&gt; =\n            <span class=\"hljs-built_in\">vec!</span>[(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>), (<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>), (<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>), (<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>), (<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>), (<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>), (<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>)];\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">our_solution</span>: <span class=\"hljs-type\">Vec</span>&lt;(<span class=\"hljs-type\">i32</span>, <span class=\"hljs-type\">i32</span>)&gt; = Vec::<span class=\"hljs-title function_ invoke__\">new</span>();\n        <span class=\"hljs-title function_ invoke__\">hanoi</span>(<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, &amp;<span class=\"hljs-keyword\">mut</span> our_solution);\n        <span class=\"hljs-built_in\">assert_eq!</span>(correct_solution, our_solution);\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Arnav Borborah",
      "email": "arnavborborah11@gmail.com",
      "commits": 1
    },
    {
      "name": "lukabavdaz",
      "email": "lukabavdaz@gmail.com",
      "commits": 1
    },
    {
      "name": "PatOnTheBack",
      "email": "51241310+PatOnTheBack@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Vasu Tomar",
      "email": "vasutomar26@gmail.com",
      "commits": 1
    },
    {
      "name": "WILFRIED NJANGUI",
      "email": "wilfried.njangui@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
