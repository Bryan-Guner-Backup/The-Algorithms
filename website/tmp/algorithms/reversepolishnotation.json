{
  "slug": "reversepolishnotation",
  "name": "ReversePolishNotation",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths/ReversePolishNotation.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/ReversePolishNotation.js",
      "code": "<span class=\"hljs-comment\">// Wikipedia: https://en.wikipedia.org/wiki/Reverse_Polish_notation</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">calcRPN</span> = (<span class=\"hljs-params\">expression</span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> operators = {\n    <span class=\"hljs-string\">&#x27;+&#x27;</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a + b,\n    <span class=\"hljs-string\">&#x27;-&#x27;</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a - b,\n    <span class=\"hljs-string\">&#x27;*&#x27;</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a * b,\n    <span class=\"hljs-string\">&#x27;/&#x27;</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> b / a\n  }\n\n  <span class=\"hljs-keyword\">const</span> tokens = expression.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27; &#x27;</span>)\n\n  <span class=\"hljs-keyword\">const</span> stack = []\n\n  tokens.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">token</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> operator = operators[token]\n\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> operator === <span class=\"hljs-string\">&#x27;function&#x27;</span>) {\n      <span class=\"hljs-keyword\">const</span> a = stack.<span class=\"hljs-title function_\">pop</span>()\n      <span class=\"hljs-keyword\">const</span> b = stack.<span class=\"hljs-title function_\">pop</span>()\n\n      <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-title function_\">operator</span>(a, b)\n\n      stack.<span class=\"hljs-title function_\">push</span>(result)\n    } <span class=\"hljs-keyword\">else</span> {\n      stack.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-built_in\">parseFloat</span>(token))\n    }\n  })\n\n  <span class=\"hljs-keyword\">return</span> stack.<span class=\"hljs-title function_\">pop</span>()\n}\n\n<span class=\"hljs-keyword\">export</span> { calcRPN }\n"
    }
  },
  "contributors": [
    {
      "name": "Stas",
      "email": "real.peha@gmail.com",
      "commits": 1
    },
    {
      "name": "Ephraim Atta-Duncan",
      "email": "55143799+dephraiim@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
