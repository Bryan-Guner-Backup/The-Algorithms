{
  "slug": "unboundedknapsack",
  "name": "UnboundedKnapsack",
  "categories": ["dynamicprogramming"],
  "body": {},
  "implementations": {
    "kotlin": {
      "dir": "src/main/kotlin/dynamicProgramming/UnboundedKnapsack.kt",
      "url": "https://github.com/TheAlgorithms/kotlin/tree/master/src/main/kotlin/dynamicProgramming/UnboundedKnapsack.kt",
      "code": "<span class=\"hljs-keyword\">package</span> dynamicProgramming\n\n<span class=\"hljs-keyword\">import</span> kotlin.math.max\n\n<span class=\"hljs-comment\">/* This algorithm is Unbounded Knapsack Problem\n\n * @param W- capacity, weight- array of weights, value- array of value, n- size of weight and value array\n * @return Maximum value with repetition of items that can be obtained\n */</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">unboundedKnapsack</span><span class=\"hljs-params\">(W: <span class=\"hljs-type\">Int</span>, wt: <span class=\"hljs-type\">IntArray</span>, v: <span class=\"hljs-type\">IntArray</span>, n: <span class=\"hljs-type\">Int</span>)</span></span>: <span class=\"hljs-built_in\">Int</span> {\n\n    <span class=\"hljs-keyword\">if</span> (W &lt; <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n\n    <span class=\"hljs-keyword\">val</span> dp = IntArray(W + <span class=\"hljs-number\">1</span>)\n\n    <span class=\"hljs-keyword\">for</span> (i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0.</span>.W) {\n        <span class=\"hljs-keyword\">for</span> (j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> until n) {\n            <span class=\"hljs-keyword\">if</span> (wt[j] &lt;= i) {\n                dp[i] = max(dp[i], dp[i - wt[j]] + v[j])\n            }\n        }\n    }\n\n    <span class=\"hljs-keyword\">for</span> (i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0.</span>.W) {\n        print(dp[i])\n        print(<span class=\"hljs-string\">&quot; &quot;</span>)\n    }\n    println(dp[W])\n    <span class=\"hljs-keyword\">return</span> dp[W]\n}"
    }
  },
  "contributors": [
    {
      "name": "Akshay-H",
      "email": "akshayhari555@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
