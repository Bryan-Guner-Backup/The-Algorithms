{
  "slug": "find-factorial",
  "name": "Find Factorial",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "matlab-octave": {
      "dir": "algorithms/maths/find_factorial.m",
      "url": "https://github.com/TheAlgorithms/matlab-octave/tree/master/algorithms/maths/find_factorial.m",
      "code": "<span class=\"hljs-comment\">%% Factorial</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">[f]</span> = <span class=\"hljs-title\">find_factorial</span><span class=\"hljs-params\">(n)</span></span>\n<span class=\"hljs-comment\">% calculate the factorial of a positive integer n</span>\n<span class=\"hljs-comment\">% factorial(n)can be used directly as a default function of Matlab</span>\n\nintegerTest= ~<span class=\"hljs-built_in\">mod</span>(n,<span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">%it returns 0 if value is not an integer.</span>\n<span class=\"hljs-keyword\">if</span> integerTest== <span class=\"hljs-number\">0</span> || n &lt; <span class=\"hljs-number\">0</span>;   <span class=\"hljs-comment\">% checking n to be positive &amp; integer </span>\n    <span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&#x27;Error! your number muss be positive and integer&#x27;</span>);\n<span class=\"hljs-keyword\">else</span>\n    f = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">i</span> = <span class=\"hljs-number\">1</span>:n\n        f = f*<span class=\"hljs-built_in\">i</span>;\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-built_in\">disp</span>([<span class=\"hljs-string\">&#x27;factorial of &#x27;</span>,num2str(n),<span class=\"hljs-string\">&#x27; is: &#x27;</span>,num2str(f)]);\n<span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
