{
  "slug": "find-max",
  "name": "Find Max",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/find_max.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/find_max.py",
      "code": "<span class=\"hljs-comment\"># NguyenU</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">find_max</span>(<span class=\"hljs-params\">nums</span>):\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; for nums in ([3, 2, 1], [-3, -2, -1], [3, -3, 0], [3.0, 3.1, 2.9]):\n    ...     find_max(nums) == max(nums)\n    True\n    True\n    True\n    True\n    &quot;&quot;&quot;</span>\n    max_num = nums[<span class=\"hljs-number\">0</span>]\n    <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> nums:\n        <span class=\"hljs-keyword\">if</span> x &gt; max_num:\n            max_num = x\n    <span class=\"hljs-keyword\">return</span> max_num\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    <span class=\"hljs-built_in\">print</span>(find_max([<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">19</span>, <span class=\"hljs-number\">94</span>, <span class=\"hljs-number\">5</span>]))  <span class=\"hljs-comment\"># 94</span>\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    main()\n"
    },
    "java": {
      "dir": "Maths/FindMax.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/Maths/FindMax.java",
      "code": "<span class=\"hljs-keyword\">package</span> Maths;\n\n<span class=\"hljs-keyword\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\">import</span> java.util.Random;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">FindMax</span> {\n\n  <span class=\"hljs-comment\">/** Driver Code */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n    <span class=\"hljs-type\">Random</span> <span class=\"hljs-variable\">random</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Random</span>();\n\n    <span class=\"hljs-comment\">/* random size */</span>\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">size</span> <span class=\"hljs-operator\">=</span> random.nextInt(<span class=\"hljs-number\">100</span>) + <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-type\">int</span>[] array = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[size];\n\n    <span class=\"hljs-comment\">/* init array with random numbers */</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; size; i++) {\n      array[i] = random.nextInt() % <span class=\"hljs-number\">100</span>;\n    }\n\n    <span class=\"hljs-keyword\">assert</span> Arrays.stream(array).max().getAsInt() == findMax(array);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * find max of array\n   *\n   * <span class=\"hljs-doctag\">@param</span> array the array contains element\n   * <span class=\"hljs-doctag\">@return</span> max value of given array\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">findMax</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] array)</span> {\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">max</span> <span class=\"hljs-operator\">=</span> array[<span class=\"hljs-number\">0</span>];\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>; i &lt; array.length; ++i) {\n      <span class=\"hljs-keyword\">if</span> (array[i] &gt; max) {\n        max = array[i];\n      }\n    }\n    <span class=\"hljs-keyword\">return</span> max;\n  }\n}\n"
    },
    "dart": {
      "dir": "maths/find_max.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/maths/find_max.dart",
      "code": "<span class=\"hljs-comment\">//find the max number</span>\nfind_max(<span class=\"hljs-built_in\">List</span> numbers) {\n  <span class=\"hljs-keyword\">var</span> max = numbers[<span class=\"hljs-number\">0</span>];\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> x <span class=\"hljs-keyword\">in</span> numbers) {\n    <span class=\"hljs-keyword\">if</span> (x &gt; max) {\n      max = x;\n    }\n  }\n  <span class=\"hljs-built_in\">print</span>(max);\n}\n\n<span class=\"hljs-keyword\">void</span> main() {\n  find_max([<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">76</span>, <span class=\"hljs-number\">-3</span>]);\n}\n"
    },
    "ruby": {
      "dir": "maths/find_max.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/maths/find_max.rb",
      "code": "<span class=\"hljs-comment\"># A ruby program to find max from a set of elements</span>\n\n<span class=\"hljs-comment\"># This find_max method will return the max element out of the array</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">find_max</span><span class=\"hljs-params\">(*array)</span></span>\n  max = array[<span class=\"hljs-number\">0</span>]\n  array.each <span class=\"hljs-keyword\">do</span> <span class=\"hljs-params\">|a|</span>\n    <span class=\"hljs-keyword\">if</span> a &gt;= max\n      max = a\n    <span class=\"hljs-keyword\">end</span>\n  <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-string\">&quot;The Max of the following elements <span class=\"hljs-subst\">#{array}</span> is <span class=\"hljs-subst\">#{max}</span>.&quot;</span>\n  <span class=\"hljs-keyword\">rescue</span>\n    <span class=\"hljs-string\">&quot;Error: Please provide number only!&quot;</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-comment\"># Max method will return the maximum element from the set of input elements provided</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">predefined_max</span><span class=\"hljs-params\">(*array)</span></span>\n  <span class=\"hljs-string\">&quot;The Max of the following elements <span class=\"hljs-subst\">#{array}</span> is <span class=\"hljs-subst\">#{array.max}</span>.&quot;</span>\n  <span class=\"hljs-keyword\">rescue</span>\n    <span class=\"hljs-string\">&quot;Error: Please provide number only!&quot;</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-comment\"># Sort method will sort the elements in ascending order. Last method will return the end element out of the array</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">predefined_sort_last_max</span><span class=\"hljs-params\">(*array)</span></span>\n  <span class=\"hljs-string\">&quot;The Max of the following elements <span class=\"hljs-subst\">#{array}</span> is <span class=\"hljs-subst\">#{array.sort.last}</span>.&quot;</span>\n  <span class=\"hljs-keyword\">rescue</span>\n    <span class=\"hljs-string\">&quot;Error: Please provide number only!&quot;</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-comment\"># Using find_max</span>\n<span class=\"hljs-comment\"># Valid inputs</span>\nputs find_max(<span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">29</span>, <span class=\"hljs-number\">33</span>)\n<span class=\"hljs-comment\"># The Max of the following elements [11, 29, 33] is 33.</span>\n\nputs find_max(-<span class=\"hljs-number\">221</span>, -<span class=\"hljs-number\">852</span>, -<span class=\"hljs-number\">1100</span>, -<span class=\"hljs-number\">10</span>)\n<span class=\"hljs-comment\"># The Max of the following elements [-221, -852, -1100, -10] is -10.</span>\n\n<span class=\"hljs-comment\"># Invalid inputs</span>\nputs find_max(<span class=\"hljs-number\">5</span>, <span class=\"hljs-string\">&quot;95&quot;</span>, <span class=\"hljs-number\">2</span>)\n<span class=\"hljs-comment\"># Error: Please provide number only!</span>\n\n<span class=\"hljs-comment\"># Using predefined_max</span>\n<span class=\"hljs-comment\"># Valid inputs</span>\nputs predefined_max(<span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">82</span>, <span class=\"hljs-number\">39</span>)\n<span class=\"hljs-comment\"># The Max of the following elements [51, 82, 39] is 82.</span>\n\nputs predefined_max(-<span class=\"hljs-number\">11</span>, -<span class=\"hljs-number\">51</span>, -<span class=\"hljs-number\">10</span>, -<span class=\"hljs-number\">10</span>)\n<span class=\"hljs-comment\"># The Max of the following elements [-11, -51, -10, -10] is -10.</span>\n\n<span class=\"hljs-comment\"># Invalid inputs</span>\nputs predefined_max(<span class=\"hljs-string\">&quot;x&quot;</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">95</span>, <span class=\"hljs-number\">2</span>)\n<span class=\"hljs-comment\"># Error: Please provide number only!</span>\n\n<span class=\"hljs-comment\"># Using predefined_sort_last_max</span>\n<span class=\"hljs-comment\"># Valid inputs</span>\nputs predefined_sort_last_max(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>)\n<span class=\"hljs-comment\"># The Max of the following elements [1, 2, 3] is 3.</span>\n\nputs predefined_sort_last_max(-<span class=\"hljs-number\">21</span>, -<span class=\"hljs-number\">52</span>, -<span class=\"hljs-number\">100</span>, -<span class=\"hljs-number\">1</span>)\n<span class=\"hljs-comment\"># The Max of the following elements [-21, -52, -100, -1] is -1.</span>\n\n<span class=\"hljs-comment\"># Invalid inputs</span>\nputs predefined_sort_last_max(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">95</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&quot;a&quot;</span>)\n<span class=\"hljs-comment\"># Error: Please provide number only!</span>\n"
    },
    "scala": {
      "dir": "src/main/scala/Mathematics/FindMax.scala",
      "url": "https://github.com/TheAlgorithms/scala/tree/master/src/main/scala/Mathematics/FindMax.scala",
      "code": "<span class=\"hljs-keyword\">package</span> <span class=\"hljs-type\">Mathematics</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">FindMax</span> </span>{\n\n  <span class=\"hljs-comment\">/**\n    * Method returns Max Element from the list\n    *\n    * @param listOfElements\n    * @return\n    */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findMax</span></span>(elements: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Int</span>]): <span class=\"hljs-type\">Int</span> = elements.foldLeft(elements.head) { (acc, i) =&gt; <span class=\"hljs-keyword\">if</span> (acc &gt; i) acc <span class=\"hljs-keyword\">else</span> i }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Stepfen Shawn",
      "email": "m18824909883@163.com",
      "commits": 1
    },
    {
      "name": "khanhhuynguyenvu",
      "email": "khanhhuynguyenvu@gmail.com",
      "commits": 1
    },
    {
      "name": "Aditi Agarwal",
      "email": "31546143+aditiagarwal34550@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "aditiagarwal34550",
      "email": "aditiagarwal34550@gmail.com",
      "commits": 1
    },
    {
      "name": "Harshil Darji",
      "email": "darjiharshil2994@gmail.com",
      "commits": 1
    },
    {
      "name": "Ashwek Swamy",
      "email": "39827514+ashwek@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Deekshaesha",
      "email": "57080015+Deekshaesha@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Uyen",
      "email": "xuyennguyenx@gmail.com",
      "commits": 1
    },
    {
      "name": "Sahil Afrid Farookhi",
      "email": "msafarookhi@gmail.com",
      "commits": 3
    },
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 5
    }
  ],
  "explanationUrl": {}
}
