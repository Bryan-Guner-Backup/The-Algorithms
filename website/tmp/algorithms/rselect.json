{
  "slug": "rselect",
  "name": "Rselect",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "misc/rselect.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/misc/rselect.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdlib.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;time.h&gt;</span></span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">swap</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> *a, <span class=\"hljs-type\">int</span> *b)</span>\n{\n    <span class=\"hljs-type\">int</span> t;\n    t = *a;\n    *a = *b;\n    *b = t;\n}\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">part</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a[], <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> n, <span class=\"hljs-type\">int</span> pivot, <span class=\"hljs-type\">int</span> pindex)</span>\n{\n    <span class=\"hljs-type\">int</span> p1 = l, p2 = r;\n    <span class=\"hljs-keyword\">while</span> (p2 &gt; p1)\n    {\n        <span class=\"hljs-keyword\">if</span> (a[p1] &gt; pivot &amp;&amp; a[p2] &lt; pivot)\n        {\n            swap(&amp;a[p1], &amp;a[p2]);\n        }\n        <span class=\"hljs-keyword\">else</span>\n        {\n            <span class=\"hljs-keyword\">if</span> (a[p1] &lt;= pivot)\n            {\n                p1++;\n            }\n            <span class=\"hljs-keyword\">if</span> (a[p2] &gt;= pivot)\n            {\n                p2--;\n            }\n        }\n    }\n    swap(&amp;a[pindex], &amp;a[p2]);\n    <span class=\"hljs-keyword\">return</span> p2;\n}\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">rselect</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a[], <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> n, <span class=\"hljs-type\">int</span> o)</span>\n{\n    <span class=\"hljs-type\">int</span> pivot, pindex, pactual;\n    <span class=\"hljs-keyword\">if</span> (r &gt; l)\n    {\n        pindex = rand() % (r - l + <span class=\"hljs-number\">1</span>);\n        pivot = a[pindex];\n        pactual = part(a, l, r, n, pivot, pindex);\n\n        <span class=\"hljs-keyword\">if</span> (pactual == o)\n        {\n            <span class=\"hljs-keyword\">return</span> a[pactual];\n        }\n\n        <span class=\"hljs-keyword\">if</span> (o &lt; pactual)\n        {\n            rselect(a, l, pactual - <span class=\"hljs-number\">1</span>, n, o);\n        }\n\n        <span class=\"hljs-keyword\">if</span> (o &gt; pactual)\n        {\n            rselect(a, pactual + <span class=\"hljs-number\">1</span>, r, n, o - pactual);\n        }\n    }\n    <span class=\"hljs-keyword\">if</span> (r == l)\n    {\n        <span class=\"hljs-keyword\">return</span> a[l];\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n}\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\n{\n    srand(time(<span class=\"hljs-literal\">NULL</span>));\n    <span class=\"hljs-type\">int</span> n, o, i, *a;\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d %d&quot;</span>, &amp;n, &amp;o);\n    a = (<span class=\"hljs-type\">int</span> *)<span class=\"hljs-built_in\">malloc</span>(n * <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">int</span>));\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)\n    {\n        <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, a + i);\n    }\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n\\n%d&quot;</span>, rselect(a, <span class=\"hljs-number\">0</span>, n - <span class=\"hljs-number\">1</span>, n, o));\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
