{
  "slug": "plotdecisionboundary",
  "name": "Plotdecisionboundary",
  "categories": ["machinelearning", "logisticregression"],
  "body": {},
  "implementations": {
    "matlab-octave": {
      "dir": "algorithms/machine_learning/Logistic-Regression/plotdecisionboundary.m",
      "url": "https://github.com/TheAlgorithms/matlab-octave/tree/master/algorithms/machine_learning/Logistic-Regression/plotdecisionboundary.m",
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">plotdecisionboundary</span><span class=\"hljs-params\">(Theta, X, Y)</span></span>\n\nplotdata(X(:,<span class=\"hljs-number\">2</span>:<span class=\"hljs-number\">3</span>), Y);\n\n<span class=\"hljs-built_in\">hold</span> on;\n\n<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">size</span>(X, <span class=\"hljs-number\">2</span>) &lt;= <span class=\"hljs-number\">3</span>\n    \n    plot_X = [<span class=\"hljs-built_in\">min</span>(X(:,<span class=\"hljs-number\">2</span>))<span class=\"hljs-number\">-2</span>,  <span class=\"hljs-built_in\">max</span>(X(:,<span class=\"hljs-number\">2</span>))+<span class=\"hljs-number\">2</span>];\n\n    plot_Y = (<span class=\"hljs-number\">-1.</span>/Theta(<span class=\"hljs-number\">3</span>)).*(Theta(<span class=\"hljs-number\">2</span>).*plot_X + Theta(<span class=\"hljs-number\">1</span>));\n\n    <span class=\"hljs-built_in\">plot</span>(plot_X, plot_Y);\n    \n    <span class=\"hljs-built_in\">legend</span>(<span class=\"hljs-string\">&#x27;Admitted&#x27;</span>, <span class=\"hljs-string\">&#x27;Not admitted&#x27;</span>, <span class=\"hljs-string\">&#x27;Decision Boundary&#x27;</span>);\n    \n    axis([<span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">100</span>]);\n\n<span class=\"hljs-keyword\">else</span>\n    \n    U = <span class=\"hljs-built_in\">linspace</span>(<span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">1.5</span>, <span class=\"hljs-number\">50</span>);\n    \n    V = <span class=\"hljs-built_in\">linspace</span>(<span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">1.5</span>, <span class=\"hljs-number\">50</span>);\n\n    Z = <span class=\"hljs-built_in\">zeros</span>(<span class=\"hljs-built_in\">length</span>(U), <span class=\"hljs-built_in\">length</span>(V));\n    \n    <span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">i</span> = <span class=\"hljs-number\">1</span>:<span class=\"hljs-built_in\">length</span>(U)\n        \n        <span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">j</span> = <span class=\"hljs-number\">1</span>:<span class=\"hljs-built_in\">length</span>(V)\n            \n            Z(<span class=\"hljs-built_in\">i</span>,<span class=\"hljs-built_in\">j</span>) = mapFeature(U(<span class=\"hljs-built_in\">i</span>), V(<span class=\"hljs-built_in\">j</span>))*Theta;\n        \n        <span class=\"hljs-keyword\">end</span>\n    \n    <span class=\"hljs-keyword\">end</span>\n    \n    Z = Z&#x27;; \n\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-built_in\">hold</span> off;\n\n<span class=\"hljs-keyword\">end</span>"
    }
  },
  "contributors": [
    {
      "name": "Anesh Kaul",
      "email": "aneshkaul@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
