{
  "slug": "hex-to-bin",
  "name": "Hex to Bin",
  "categories": ["conversions"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "conversions/hex_to_bin.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/conversions/hex_to_bin.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">hex_to_bin</span>(<span class=\"hljs-params\">hex_num: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Convert a hexadecimal value to its binary equivalent\n    #https://stackoverflow.com/questions/1425493/convert-hex-to-binary\n    Here, we have used the bitwise right shift operator: &gt;&gt;\n    Shifts the bits of the number to the right and fills 0 on voids left as a result.\n    Similar effect as of dividing the number with some power of two.\n    Example:\n    a = 10\n    a &gt;&gt; 1 = 5\n\n    &gt;&gt;&gt; hex_to_bin(&quot;AC&quot;)\n    10101100\n    &gt;&gt;&gt; hex_to_bin(&quot;9A4&quot;)\n    100110100100\n    &gt;&gt;&gt; hex_to_bin(&quot;   12f   &quot;)\n    100101111\n    &gt;&gt;&gt; hex_to_bin(&quot;FfFf&quot;)\n    1111111111111111\n    &gt;&gt;&gt; hex_to_bin(&quot;-fFfF&quot;)\n    -1111111111111111\n    &gt;&gt;&gt; hex_to_bin(&quot;F-f&quot;)\n    Traceback (most recent call last):\n    ...\n    ValueError: Invalid value was passed to the function\n    &gt;&gt;&gt; hex_to_bin(&quot;&quot;)\n    Traceback (most recent call last):\n    ...\n    ValueError: No value was passed to the function\n    &quot;&quot;&quot;</span>\n\n    hex_num = hex_num.strip()\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> hex_num:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;No value was passed to the function&quot;</span>)\n\n    is_negative = hex_num[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&quot;-&quot;</span>\n    <span class=\"hljs-keyword\">if</span> is_negative:\n        hex_num = hex_num[<span class=\"hljs-number\">1</span>:]\n\n    <span class=\"hljs-keyword\">try</span>:\n        int_num = <span class=\"hljs-built_in\">int</span>(hex_num, <span class=\"hljs-number\">16</span>)\n    <span class=\"hljs-keyword\">except</span> ValueError:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Invalid value was passed to the function&quot;</span>)\n\n    bin_str = <span class=\"hljs-string\">&quot;&quot;</span>\n    <span class=\"hljs-keyword\">while</span> int_num &gt; <span class=\"hljs-number\">0</span>:\n        bin_str = <span class=\"hljs-built_in\">str</span>(int_num % <span class=\"hljs-number\">2</span>) + bin_str\n        int_num &gt;&gt;= <span class=\"hljs-number\">1</span>\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">int</span>((<span class=\"hljs-string\">&quot;-&quot;</span> + bin_str) <span class=\"hljs-keyword\">if</span> is_negative <span class=\"hljs-keyword\">else</span> bin_str)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    }
  },
  "contributors": [
    {
      "name": "TANMAY SRIVASTAVA",
      "email": "77936821+ktsrivastava29@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
