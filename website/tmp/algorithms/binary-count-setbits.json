{
  "slug": "binary-count-setbits",
  "name": "Binary Count Setbits",
  "categories": ["bitmanipulation"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "bit_manipulation/binary_count_setbits.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/bit_manipulation/binary_count_setbits.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">binary_count_setbits</span>(<span class=\"hljs-params\">a: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Take in 1 integer, return a number that is\n    the number of 1&#x27;s in binary representation of that number.\n\n    &gt;&gt;&gt; binary_count_setbits(25)\n    3\n    &gt;&gt;&gt; binary_count_setbits(36)\n    2\n    &gt;&gt;&gt; binary_count_setbits(16)\n    1\n    &gt;&gt;&gt; binary_count_setbits(58)\n    4\n    &gt;&gt;&gt; binary_count_setbits(4294967295)\n    32\n    &gt;&gt;&gt; binary_count_setbits(0)\n    0\n    &gt;&gt;&gt; binary_count_setbits(-10)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input value must be a positive integer\n    &gt;&gt;&gt; binary_count_setbits(0.8)\n    Traceback (most recent call last):\n        ...\n    TypeError: Input value must be a &#x27;int&#x27; type\n    &gt;&gt;&gt; binary_count_setbits(&quot;0&quot;)\n    Traceback (most recent call last):\n        ...\n    TypeError: &#x27;&lt;&#x27; not supported between instances of &#x27;str&#x27; and &#x27;int&#x27;\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> a &lt; <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input value must be a positive integer&quot;</span>)\n    <span class=\"hljs-keyword\">elif</span> <span class=\"hljs-built_in\">isinstance</span>(a, <span class=\"hljs-built_in\">float</span>):\n        <span class=\"hljs-keyword\">raise</span> TypeError(<span class=\"hljs-string\">&quot;Input value must be a &#x27;int&#x27; type&quot;</span>)\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">bin</span>(a).count(<span class=\"hljs-string\">&quot;1&quot;</span>)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    },
    "javascript": {
      "dir": "Bit-Manipulation/BinaryCountSetBits.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Bit-Manipulation/BinaryCountSetBits.js",
      "code": "<span class=\"hljs-comment\">/*\n    author: vivek9patel\n    license: GPL-3.0 or later\n\n    This script will find number of 1&#x27;s\n    in binary representain of given number\n\n*/</span>\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">BinaryCountSetBits</span> (a) {\n  <span class=\"hljs-string\">&#x27;use strict&#x27;</span>\n  <span class=\"hljs-comment\">// convert number into binary representation and return number of set bits in binary representaion</span>\n  <span class=\"hljs-keyword\">return</span> a.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-number\">2</span>).<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;1&#x27;</span>).<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>\n}\n\n<span class=\"hljs-comment\">// Run `binary_and` Function to find the binary and operation</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">BinaryCountSetBits</span>(<span class=\"hljs-number\">251</span>))\n"
    },
    "ruby": {
      "dir": "bit_manipulation/binary_count_setbits.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/bit_manipulation/binary_count_setbits.rb",
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">binary_count_setbits</span><span class=\"hljs-params\">(x)</span></span>\n  raise <span class=\"hljs-string\">&#x27;Input must be a positive integer&#x27;</span> <span class=\"hljs-keyword\">if</span> x &lt; <span class=\"hljs-number\">0</span>\n\n  binary = x.to_s(<span class=\"hljs-number\">2</span>)\n\n  binary.chars.map { <span class=\"hljs-params\">|c|</span> c.to_i }.reduce(<span class=\"hljs-symbol\">:+</span>)\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-keyword\">begin</span>\n  binary_count_setbits(-<span class=\"hljs-number\">1</span>)\n<span class=\"hljs-keyword\">rescue</span> =&gt; e\n  puts e.message\n<span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-comment\"># Input must be a positive integer</span>\n\nputs binary_count_setbits(<span class=\"hljs-number\">0</span>)\n<span class=\"hljs-comment\"># 0</span>\n\nputs binary_count_setbits(<span class=\"hljs-number\">1</span>)\n<span class=\"hljs-comment\"># 1</span>\n\nputs binary_count_setbits(<span class=\"hljs-number\">1024</span>)\n<span class=\"hljs-comment\"># 1</span>\n\nputs binary_count_setbits(<span class=\"hljs-number\">1023</span>)\n<span class=\"hljs-comment\"># 10</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Vijay Siva",
      "email": "vijay.sivasubramaniam@instacart.com",
      "commits": 2
    },
    {
      "name": "Vivek Patel",
      "email": "vicky.p8980@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}
