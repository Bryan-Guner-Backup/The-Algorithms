{
  "slug": "stringmatchfiniteautomata",
  "name": "StringMatchFiniteAutomata",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "java": {
      "dir": "Others/StringMatchFiniteAutomata.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/Others/StringMatchFiniteAutomata.java",
      "code": "<span class=\"hljs-comment\">/** <span class=\"hljs-doctag\">@author</span> Prateek Kumar Oraon (https://github.com/prateekKrOraon) */</span>\n<span class=\"hljs-keyword\">import</span> java.util.Scanner;\n\n<span class=\"hljs-comment\">// An implementaion of string matching using finite automata</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">StringMatchFiniteAutomata</span> {\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">CHARS</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">256</span>;\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span>[][] FA;\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">scanner</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n\n    scanner = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n    System.out.println(<span class=\"hljs-string\">&quot;Enter String&quot;</span>);\n    <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">text</span> <span class=\"hljs-operator\">=</span> scanner.nextLine();\n    System.out.println(<span class=\"hljs-string\">&quot;Enter pattern&quot;</span>);\n    <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">pat</span> <span class=\"hljs-operator\">=</span> scanner.nextLine();\n\n    searchPat(text, pat);\n\n    scanner.close();\n  }\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">searchPat</span><span class=\"hljs-params\">(String text, String pat)</span> {\n\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">m</span> <span class=\"hljs-operator\">=</span> pat.length();\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> text.length();\n\n    FA = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[m + <span class=\"hljs-number\">1</span>][CHARS];\n\n    computeFA(pat, m, FA);\n\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">state</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n      state = FA[state][text.charAt(i)];\n\n      <span class=\"hljs-keyword\">if</span> (state == m) {\n        System.out.println(<span class=\"hljs-string\">&quot;Pattern found at index &quot;</span> + (i - m + <span class=\"hljs-number\">1</span>));\n      }\n    }\n  }\n\n  <span class=\"hljs-comment\">// Computes finite automata for the partern</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">computeFA</span><span class=\"hljs-params\">(String pat, <span class=\"hljs-type\">int</span> m, <span class=\"hljs-type\">int</span>[][] FA)</span> {\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">state</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; state &lt;= m; ++state) {\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">x</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; x &lt; CHARS; ++x) {\n        FA[state][x] = getNextState(pat, m, state, x);\n      }\n    }\n  }\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">getNextState</span><span class=\"hljs-params\">(String pat, <span class=\"hljs-type\">int</span> m, <span class=\"hljs-type\">int</span> state, <span class=\"hljs-type\">int</span> x)</span> {\n\n    <span class=\"hljs-comment\">// if current state is less than length of pattern</span>\n    <span class=\"hljs-comment\">// and input character of pattern matches the character in the alphabet</span>\n    <span class=\"hljs-comment\">// then automata goes to next state</span>\n    <span class=\"hljs-keyword\">if</span> (state &lt; m &amp;&amp; x == pat.charAt(state)) {\n      <span class=\"hljs-keyword\">return</span> state + <span class=\"hljs-number\">1</span>;\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">ns</span> <span class=\"hljs-operator\">=</span> state; ns &gt; <span class=\"hljs-number\">0</span>; ns--) {\n\n      <span class=\"hljs-keyword\">if</span> (pat.charAt(ns - <span class=\"hljs-number\">1</span>) == x) {\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; ns - <span class=\"hljs-number\">1</span>; i++) {\n\n          <span class=\"hljs-keyword\">if</span> (pat.charAt(i) != pat.charAt(state - ns + i + <span class=\"hljs-number\">1</span>)) {\n            <span class=\"hljs-keyword\">break</span>;\n          }\n\n          <span class=\"hljs-keyword\">if</span> (i == ns - <span class=\"hljs-number\">1</span>) {\n            <span class=\"hljs-keyword\">return</span> ns;\n          }\n        }\n      }\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n  }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Prateek Kumar Oraon",
      "email": "b170078@nitsikkim.ac.in",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
