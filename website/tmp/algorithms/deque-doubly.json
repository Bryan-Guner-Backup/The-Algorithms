{
  "slug": "deque-doubly",
  "name": "Deque Doubly",
  "categories": ["datastructures", "linkedlist"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "data_structures/linked_list/deque_doubly.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/data_structures/linked_list/deque_doubly.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nImplementing Deque using DoublyLinkedList ...\nOperations:\n    1. insertion in the front -&gt; O(1)\n    2. insertion in the end -&gt; O(1)\n    3. remove from the front -&gt; O(1)\n    4. remove from the end -&gt; O(1)\n&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">_DoublyLinkedBase</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;A Private class (to be inherited)&quot;&quot;&quot;</span>\n\n    <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">_Node</span>:\n        __slots__ = <span class=\"hljs-string\">&quot;_prev&quot;</span>, <span class=\"hljs-string\">&quot;_data&quot;</span>, <span class=\"hljs-string\">&quot;_next&quot;</span>\n\n        <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self, link_p, element, link_n</span>):\n            self._prev = link_p\n            self._data = element\n            self._<span class=\"hljs-built_in\">next</span> = link_n\n\n        <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">has_next_and_prev</span>(<span class=\"hljs-params\">self</span>):\n            <span class=\"hljs-keyword\">return</span> (\n                <span class=\"hljs-string\">f&quot; Prev -&gt; <span class=\"hljs-subst\">{self._prev <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">None</span>}</span>, Next -&gt; <span class=\"hljs-subst\">{self._<span class=\"hljs-built_in\">next</span> <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">None</span>}</span>&quot;</span>\n            )\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self</span>):\n        self._header = self._Node(<span class=\"hljs-literal\">None</span>, <span class=\"hljs-literal\">None</span>, <span class=\"hljs-literal\">None</span>)\n        self._trailer = self._Node(<span class=\"hljs-literal\">None</span>, <span class=\"hljs-literal\">None</span>, <span class=\"hljs-literal\">None</span>)\n        self._header._<span class=\"hljs-built_in\">next</span> = self._trailer\n        self._trailer._prev = self._header\n        self._size = <span class=\"hljs-number\">0</span>\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__len__</span>(<span class=\"hljs-params\">self</span>):\n        <span class=\"hljs-keyword\">return</span> self._size\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">is_empty</span>(<span class=\"hljs-params\">self</span>):\n        <span class=\"hljs-keyword\">return</span> self.__len__() == <span class=\"hljs-number\">0</span>\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">_insert</span>(<span class=\"hljs-params\">self, predecessor, e, successor</span>):\n        <span class=\"hljs-comment\"># Create new_node by setting it&#x27;s prev.link -&gt; header</span>\n        <span class=\"hljs-comment\"># setting it&#x27;s next.link -&gt; trailer</span>\n        new_node = self._Node(predecessor, e, successor)\n        predecessor._<span class=\"hljs-built_in\">next</span> = new_node\n        successor._prev = new_node\n        self._size += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">return</span> self\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">_delete</span>(<span class=\"hljs-params\">self, node</span>):\n        predecessor = node._prev\n        successor = node._<span class=\"hljs-built_in\">next</span>\n\n        predecessor._<span class=\"hljs-built_in\">next</span> = successor\n        successor._prev = predecessor\n        self._size -= <span class=\"hljs-number\">1</span>\n        temp = node._data\n        node._prev = node._<span class=\"hljs-built_in\">next</span> = node._data = <span class=\"hljs-literal\">None</span>\n        <span class=\"hljs-keyword\">del</span> node\n        <span class=\"hljs-keyword\">return</span> temp\n\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LinkedDeque</span>(<span class=\"hljs-title class_ inherited__\">_DoublyLinkedBase</span>):\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">first</span>(<span class=\"hljs-params\">self</span>):\n        <span class=\"hljs-string\">&quot;&quot;&quot;return first element\n        &gt;&gt;&gt; d = LinkedDeque()\n        &gt;&gt;&gt; d.add_first(&#x27;A&#x27;).first()\n        &#x27;A&#x27;\n        &gt;&gt;&gt; d.add_first(&#x27;B&#x27;).first()\n        &#x27;B&#x27;\n        &quot;&quot;&quot;</span>\n        <span class=\"hljs-keyword\">if</span> self.is_empty():\n            <span class=\"hljs-keyword\">raise</span> Exception(<span class=\"hljs-string\">&quot;List is empty&quot;</span>)\n        <span class=\"hljs-keyword\">return</span> self._header._<span class=\"hljs-built_in\">next</span>._data\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">last</span>(<span class=\"hljs-params\">self</span>):\n        <span class=\"hljs-string\">&quot;&quot;&quot;return last element\n        &gt;&gt;&gt; d = LinkedDeque()\n        &gt;&gt;&gt; d.add_last(&#x27;A&#x27;).last()\n        &#x27;A&#x27;\n        &gt;&gt;&gt; d.add_last(&#x27;B&#x27;).last()\n        &#x27;B&#x27;\n        &quot;&quot;&quot;</span>\n        <span class=\"hljs-keyword\">if</span> self.is_empty():\n            <span class=\"hljs-keyword\">raise</span> Exception(<span class=\"hljs-string\">&quot;List is empty&quot;</span>)\n        <span class=\"hljs-keyword\">return</span> self._trailer._prev._data\n\n    <span class=\"hljs-comment\"># DEque Insert Operations (At the front, At the end)</span>\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">add_first</span>(<span class=\"hljs-params\">self, element</span>):\n        <span class=\"hljs-string\">&quot;&quot;&quot;insertion in the front\n        &gt;&gt;&gt; LinkedDeque().add_first(&#x27;AV&#x27;).first()\n        &#x27;AV&#x27;\n        &quot;&quot;&quot;</span>\n        <span class=\"hljs-keyword\">return</span> self._insert(self._header, element, self._header._<span class=\"hljs-built_in\">next</span>)\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">add_last</span>(<span class=\"hljs-params\">self, element</span>):\n        <span class=\"hljs-string\">&quot;&quot;&quot;insertion in the end\n        &gt;&gt;&gt; LinkedDeque().add_last(&#x27;B&#x27;).last()\n        &#x27;B&#x27;\n        &quot;&quot;&quot;</span>\n        <span class=\"hljs-keyword\">return</span> self._insert(self._trailer._prev, element, self._trailer)\n\n    <span class=\"hljs-comment\"># DEqueu Remove Operations (At the front, At the end)</span>\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">remove_first</span>(<span class=\"hljs-params\">self</span>):\n        <span class=\"hljs-string\">&quot;&quot;&quot;removal from the front\n        &gt;&gt;&gt; d = LinkedDeque()\n        &gt;&gt;&gt; d.is_empty()\n        True\n        &gt;&gt;&gt; d.remove_first()\n        Traceback (most recent call last):\n           ...\n        IndexError: remove_first from empty list\n        &gt;&gt;&gt; d.add_first(&#x27;A&#x27;) # doctest: +ELLIPSIS\n        &lt;data_structures.linked_list.deque_doubly.LinkedDeque object at ...\n        &gt;&gt;&gt; d.remove_first()\n        &#x27;A&#x27;\n        &gt;&gt;&gt; d.is_empty()\n        True\n        &quot;&quot;&quot;</span>\n        <span class=\"hljs-keyword\">if</span> self.is_empty():\n            <span class=\"hljs-keyword\">raise</span> IndexError(<span class=\"hljs-string\">&quot;remove_first from empty list&quot;</span>)\n        <span class=\"hljs-keyword\">return</span> self._delete(self._header._<span class=\"hljs-built_in\">next</span>)\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">remove_last</span>(<span class=\"hljs-params\">self</span>):\n        <span class=\"hljs-string\">&quot;&quot;&quot;removal in the end\n        &gt;&gt;&gt; d = LinkedDeque()\n        &gt;&gt;&gt; d.is_empty()\n        True\n        &gt;&gt;&gt; d.remove_last()\n        Traceback (most recent call last):\n           ...\n        IndexError: remove_first from empty list\n        &gt;&gt;&gt; d.add_first(&#x27;A&#x27;) # doctest: +ELLIPSIS\n        &lt;data_structures.linked_list.deque_doubly.LinkedDeque object at ...\n        &gt;&gt;&gt; d.remove_last()\n        &#x27;A&#x27;\n        &gt;&gt;&gt; d.is_empty()\n        True\n        &quot;&quot;&quot;</span>\n        <span class=\"hljs-keyword\">if</span> self.is_empty():\n            <span class=\"hljs-keyword\">raise</span> IndexError(<span class=\"hljs-string\">&quot;remove_first from empty list&quot;</span>)\n        <span class=\"hljs-keyword\">return</span> self._delete(self._trailer._prev)\n"
    }
  },
  "contributors": [
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "CarsonHam",
      "email": "carson.ham@utexas.edu",
      "commits": 1
    },
    {
      "name": "matkosoric",
      "email": "soric.matko@gmail.com",
      "commits": 1
    },
    {
      "name": "Himanshu Bhatnagar",
      "email": "33115688+Himan10@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Dhruv Manilawala",
      "email": "dhruvmanila@gmail.com",
      "commits": 2
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}
