{
  "slug": "capitalize",
  "name": "Capitalize",
  "categories": ["strings"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "strings/capitalize.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/strings/capitalize.py",
      "code": "<span class=\"hljs-keyword\">from</span> string <span class=\"hljs-keyword\">import</span> ascii_lowercase, ascii_uppercase\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">capitalize</span>(<span class=\"hljs-params\">sentence: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    This function will capitalize the first letter of a sentence or a word\n    &gt;&gt;&gt; capitalize(&quot;hello world&quot;)\n    &#x27;Hello world&#x27;\n    &gt;&gt;&gt; capitalize(&quot;123 hello world&quot;)\n    &#x27;123 hello world&#x27;\n    &gt;&gt;&gt; capitalize(&quot; hello world&quot;)\n    &#x27; hello world&#x27;\n    &gt;&gt;&gt; capitalize(&quot;a&quot;)\n    &#x27;A&#x27;\n    &gt;&gt;&gt; capitalize(&quot;&quot;)\n    &#x27;&#x27;\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> sentence:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>\n    lower_to_upper = {lc: uc <span class=\"hljs-keyword\">for</span> lc, uc <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">zip</span>(ascii_lowercase, ascii_uppercase)}\n    <span class=\"hljs-keyword\">return</span> lower_to_upper.get(sentence[<span class=\"hljs-number\">0</span>], sentence[<span class=\"hljs-number\">0</span>]) + sentence[<span class=\"hljs-number\">1</span>:]\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">from</span> doctest <span class=\"hljs-keyword\">import</span> testmod\n\n    testmod()\n"
    },
    "f-sharp": {
      "dir": "Algorithms/Strings/Capitalize.fs",
      "url": "https://github.com/TheAlgorithms/f-sharp/tree/master/Algorithms/Strings/Capitalize.fs",
      "code": "<span class=\"hljs-keyword\">namespace</span> Algorithms.Strings\n\n<span class=\"hljs-keyword\">module</span> Capitalize =\n    <span class=\"hljs-comment\">/// &lt;summary&gt;</span>\n    <span class=\"hljs-comment\">/// This function will capitalize the first letter of a sentence or a word</span>\n    <span class=\"hljs-comment\">/// &lt;/summary&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;example&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;code&gt;</span>\n    <span class=\"hljs-comment\">/// capitalize(&quot;hello world&quot;)</span>\n    <span class=\"hljs-comment\">/// &#x27;Hello world&#x27;</span>\n    <span class=\"hljs-comment\">///</span>\n    <span class=\"hljs-comment\">/// capitalize(&quot;123 hello world&quot;)</span>\n    <span class=\"hljs-comment\">/// &#x27;123 hello world&#x27;</span>\n    <span class=\"hljs-comment\">///</span>\n    <span class=\"hljs-comment\">/// capitalize(&quot; hello world&quot;)</span>\n    <span class=\"hljs-comment\">/// &#x27; hello world&#x27;</span>\n    <span class=\"hljs-comment\">///</span>\n    <span class=\"hljs-comment\">/// capitalize(&quot;a&quot;)</span>\n    <span class=\"hljs-comment\">/// &#x27;A&#x27;</span>\n    <span class=\"hljs-comment\">///</span>\n    <span class=\"hljs-comment\">/// capitalize(&quot;&quot;)</span>\n    <span class=\"hljs-comment\">/// &#x27;&#x27;</span>\n    <span class=\"hljs-comment\">/// &lt;/code&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;/example&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;param name=&quot;sentence&quot;&gt;String to capitalize.&lt;/param&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;returns&gt;Capitalized string&lt;/returns&gt;</span>\n    <span class=\"hljs-keyword\">let</span> capitalize (sentence: string) =\n        <span class=\"hljs-keyword\">match</span> sentence <span class=\"hljs-keyword\">with</span>\n        | <span class=\"hljs-string\">&quot;&quot;</span> -&gt; <span class=\"hljs-string\">&quot;&quot;</span>\n        | s <span class=\"hljs-keyword\">when</span> s.[<span class=\"hljs-number\">0</span>] &gt;= <span class=\"hljs-symbol\">&#x27;a</span>&#x27; &amp;&amp; s.[<span class=\"hljs-number\">0</span>] &lt;= <span class=\"hljs-symbol\">&#x27;z</span>&#x27; -&gt;\n            sentence\n                .Remove(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>)\n                .Insert(<span class=\"hljs-number\">0</span>, (string) ((char) ((int) s.[<span class=\"hljs-number\">0</span>] - <span class=\"hljs-number\">32</span>)))\n        | _ -&gt; sentence\n"
    }
  },
  "contributors": [
    {
      "name": "mohammadreza490",
      "email": "47437328+mohammadreza490@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "Allister Isaiah Harvey",
      "email": "41553768+powpow58@users.noreply.github.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}
