{
  "slug": "transitive-closure",
  "name": "Transitive Closure",
  "categories": ["datastructures", "graphs"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "data_structures/graphs/transitive_closure.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/data_structures/graphs/transitive_closure.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdbool.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> NODES 4</span>\n\n<span class=\"hljs-type\">int</span> digraph[NODES][NODES] = {\n    {<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>}, {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>}, {<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>}, {<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>}};\n<span class=\"hljs-type\">int</span> tc[NODES][NODES];\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">warshall</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-type\">int</span> i, s, t;\n    <span class=\"hljs-keyword\">for</span> (s = <span class=\"hljs-number\">0</span>; s &lt; NODES; s++)\n        <span class=\"hljs-keyword\">for</span> (t = <span class=\"hljs-number\">0</span>; t &lt; NODES; t++) tc[s][t] = digraph[s][t];\n\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; NODES; i++)\n        <span class=\"hljs-keyword\">for</span> (s = <span class=\"hljs-number\">0</span>; s &lt; NODES; s++)\n            <span class=\"hljs-keyword\">for</span> (t = <span class=\"hljs-number\">0</span>; t &lt; NODES; t++)\n                <span class=\"hljs-keyword\">if</span> (tc[s][i] &amp;&amp; tc[i][t])\n                    tc[s][t] = <span class=\"hljs-number\">1</span>;\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(<span class=\"hljs-type\">void</span>)</span>\n{\n    warshall();\n    <span class=\"hljs-type\">int</span> i, j;\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; NODES; i++)\n    {\n        <span class=\"hljs-keyword\">for</span> (j = <span class=\"hljs-number\">0</span>; j &lt; NODES; j++)\n        {\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d &quot;</span>, tc[i][j]);\n        }\n        <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>);\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-comment\">// By</span>\n<span class=\"hljs-comment\">//  .----------------.  .----------------.  .----------------.</span>\n<span class=\"hljs-comment\">//  .-----------------.  .----------------.  .----------------.</span>\n<span class=\"hljs-comment\">// | .--------------. || .--------------. || .--------------. ||</span>\n<span class=\"hljs-comment\">// .--------------. | | .--------------. || .--------------. | | |  _________ |</span>\n<span class=\"hljs-comment\">// || | _____  _____ | || |      __      | || | ____  _____  | | | |  ____  ____</span>\n<span class=\"hljs-comment\">// | || |     ____     | | | | |  _   _  |  | || ||_   _||_   _|| || |     /  \\\n// | || ||_   \\|_   _| | | | | |_   ||   _| | || |   .&#x27;    `.   | | | | |_/ | |</span>\n<span class=\"hljs-comment\">// \\_|  | || |  | |    | |  | || |    / /\\ \\    | || |  |   \\ | |   | | | |   |</span>\n<span class=\"hljs-comment\">// |__| |   | || |  /  .--.  \\  | | | |     | |      | || |  | &#x27;    &#x27; |  | || |</span>\n<span class=\"hljs-comment\">// / ____ \\   | || |  | |\\ \\| |   | | | |   |  __  |   | || |  | |    | |  | |</span>\n<span class=\"hljs-comment\">// | |    _| |_     | || |   \\ `--&#x27; /   | || | _/ /    \\ \\_ | || | _| |_\\   |_</span>\n<span class=\"hljs-comment\">// | | | |  _| |  | |_  | || |  \\  `--&#x27;  /  | | | |   |_____|    | || | `.__.&#x27;</span>\n<span class=\"hljs-comment\">// | || ||____|  |____|| || ||_____|\\____| | | | | |____||____| | || | `.____.&#x27;</span>\n<span class=\"hljs-comment\">// | | | |              | || |              | || |              | || | | | | |</span>\n<span class=\"hljs-comment\">// | || |              | | | &#x27;--------------&#x27; || &#x27;--------------&#x27; ||</span>\n<span class=\"hljs-comment\">// &#x27;--------------&#x27; || &#x27;--------------&#x27; | | &#x27;--------------&#x27; || &#x27;--------------&#x27;</span>\n<span class=\"hljs-comment\">// |</span>\n<span class=\"hljs-comment\">//  &#x27;----------------&#x27;  &#x27;----------------&#x27;  &#x27;----------------&#x27;</span>\n<span class=\"hljs-comment\">//  &#x27;----------------&#x27;   &#x27;----------------&#x27;  &#x27;----------------&#x27;</span>\n\n<span class=\"hljs-comment\">//  Email :    z5261243@unsw.edu.au</span>\n<span class=\"hljs-comment\">//             hhoanhtuann@gmail.com</span>\n"
    }
  },
  "contributors": [
    {
      "name": "ttuanho",
      "email": "hhoanhtuann@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
