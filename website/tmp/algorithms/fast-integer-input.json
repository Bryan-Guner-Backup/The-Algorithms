{
  "slug": "fast-integer-input",
  "name": "Fast Integer Input",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "others/fast_integer_input.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/others/fast_integer_input.cpp",
      "code": "<span class=\"hljs-comment\">/**\n * @file\n * @brief Read integers from stdin continuously as they are entered without\n * waiting for the `\\n` character\n */</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-comment\">/** Function to read the number from stdin. The function reads input until a non\n * numeric character is entered.\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">fastinput</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> *number)</span> </span>{\n    <span class=\"hljs-comment\">// variable to indicate sign of input integer</span>\n    <span class=\"hljs-type\">bool</span> negative = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> c;\n    *number = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-comment\">// extract current character from buffer</span>\n    c = std::<span class=\"hljs-built_in\">getchar</span>();\n    <span class=\"hljs-keyword\">if</span> (c == <span class=\"hljs-string\">&#x27;-&#x27;</span>) {\n        <span class=\"hljs-comment\">// number is negative</span>\n        negative = <span class=\"hljs-literal\">true</span>;\n\n        <span class=\"hljs-comment\">// extract the next character from the buffer</span>\n        c = std::<span class=\"hljs-built_in\">getchar</span>();\n    }\n\n    <span class=\"hljs-comment\">// Keep on extracting characters if they are integers</span>\n    <span class=\"hljs-comment\">// i.e ASCII Value lies from &#x27;0&#x27;(48) to &#x27;9&#x27; (57)</span>\n    <span class=\"hljs-keyword\">for</span> (; (c &gt; <span class=\"hljs-number\">47</span> &amp;&amp; c &lt; <span class=\"hljs-number\">58</span>); c = std::<span class=\"hljs-built_in\">getchar</span>())\n        *number = *number * <span class=\"hljs-number\">10</span> + c - <span class=\"hljs-number\">48</span>;\n\n    <span class=\"hljs-comment\">// if scanned input has a negative sign, negate the</span>\n    <span class=\"hljs-comment\">// value of the input number</span>\n    <span class=\"hljs-keyword\">if</span> (negative)\n        *(number) *= <span class=\"hljs-number\">-1</span>;\n}\n\n<span class=\"hljs-comment\">/** Main function */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-type\">int</span> number;\n    <span class=\"hljs-built_in\">fastinput</span>(&amp;number);\n    std::cout &lt;&lt; number &lt;&lt; std::endl;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
