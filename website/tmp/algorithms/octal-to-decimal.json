{
  "slug": "octal-to-decimal",
  "name": "Octal to Decimal",
  "categories": ["conversions"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "conversions/octal_to_decimal.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/conversions/octal_to_decimal.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">oct_to_decimal</span>(<span class=\"hljs-params\">oct_string: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Convert a octal value to its decimal equivalent\n\n    &gt;&gt;&gt; oct_to_decimal(&quot;12&quot;)\n    10\n    &gt;&gt;&gt; oct_to_decimal(&quot; 12   &quot;)\n    10\n    &gt;&gt;&gt; oct_to_decimal(&quot;-45&quot;)\n    -37\n    &gt;&gt;&gt; oct_to_decimal(&quot;2-0Fm&quot;)\n    Traceback (most recent call last):\n    ...\n    ValueError: Non-octal value was passed to the function\n    &gt;&gt;&gt; oct_to_decimal(&quot;&quot;)\n    Traceback (most recent call last):\n    ...\n    ValueError: Empty string was passed to the function\n    &gt;&gt;&gt; oct_to_decimal(&quot;19&quot;)\n    Traceback (most recent call last):\n    ...\n    ValueError: Non-octal value was passed to the function\n    &quot;&quot;&quot;</span>\n    oct_string = <span class=\"hljs-built_in\">str</span>(oct_string).strip()\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> oct_string:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Empty string was passed to the function&quot;</span>)\n    is_negative = oct_string[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&quot;-&quot;</span>\n    <span class=\"hljs-keyword\">if</span> is_negative:\n        oct_string = oct_string[<span class=\"hljs-number\">1</span>:]\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> oct_string.isdigit() <span class=\"hljs-keyword\">or</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">all</span>(<span class=\"hljs-number\">0</span> &lt;= <span class=\"hljs-built_in\">int</span>(char) &lt;= <span class=\"hljs-number\">7</span> <span class=\"hljs-keyword\">for</span> char <span class=\"hljs-keyword\">in</span> oct_string):\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Non-octal value was passed to the function&quot;</span>)\n    decimal_number = <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span> char <span class=\"hljs-keyword\">in</span> oct_string:\n        decimal_number = <span class=\"hljs-number\">8</span> * decimal_number + <span class=\"hljs-built_in\">int</span>(char)\n    <span class=\"hljs-keyword\">if</span> is_negative:\n        decimal_number = -decimal_number\n    <span class=\"hljs-keyword\">return</span> decimal_number\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">from</span> doctest <span class=\"hljs-keyword\">import</span> testmod\n\n    testmod()\n"
    },
    "java": {
      "dir": "Conversions/OctalToDecimal.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/Conversions/OctalToDecimal.java",
      "code": "<span class=\"hljs-keyword\">package</span> Conversions;\n\n<span class=\"hljs-keyword\">import</span> java.util.Scanner;\n\n<span class=\"hljs-comment\">/**\n * Converts any Octal Number to a Decimal Number\n *\n * <span class=\"hljs-doctag\">@author</span> Zachary Jones\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">OctalToDecimal</span> {\n\n  <span class=\"hljs-comment\">/**\n   * Main method\n   *\n   * <span class=\"hljs-doctag\">@param</span> args Command line arguments\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\n    <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">sc</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n    System.out.print(<span class=\"hljs-string\">&quot;Octal Input: &quot;</span>);\n    <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">inputOctal</span> <span class=\"hljs-operator\">=</span> sc.nextLine();\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">result</span> <span class=\"hljs-operator\">=</span> convertOctalToDecimal(inputOctal);\n    <span class=\"hljs-keyword\">if</span> (result != -<span class=\"hljs-number\">1</span>) System.out.println(<span class=\"hljs-string\">&quot;Result convertOctalToDecimal : &quot;</span> + result);\n    sc.close();\n  }\n\n  <span class=\"hljs-comment\">/**\n   * This method converts an octal number to a decimal number.\n   *\n   * <span class=\"hljs-doctag\">@param</span> inputOctal The octal number\n   * <span class=\"hljs-doctag\">@return</span> The decimal number\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">convertOctalToDecimal</span><span class=\"hljs-params\">(String inputOctal)</span> {\n\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-comment\">// Actual conversion of Octal to Decimal:</span>\n      <span class=\"hljs-type\">Integer</span> <span class=\"hljs-variable\">outputDecimal</span> <span class=\"hljs-operator\">=</span> Integer.parseInt(inputOctal, <span class=\"hljs-number\">8</span>);\n      <span class=\"hljs-keyword\">return</span> outputDecimal;\n    } <span class=\"hljs-keyword\">catch</span> (NumberFormatException ne) {\n      <span class=\"hljs-comment\">// Printing a warning message if the input is not a valid octal</span>\n      <span class=\"hljs-comment\">// number:</span>\n      System.out.println(<span class=\"hljs-string\">&quot;Invalid Input, Expecting octal number 0-7&quot;</span>);\n      <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>;\n    }\n  }\n}\n"
    },
    "c": {
      "dir": "conversions/octal_to_decimal.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/conversions/octal_to_decimal.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;math.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n\n<span class=\"hljs-comment\">// Converts octal number to decimal</span>\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">convertValue</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> num, <span class=\"hljs-type\">int</span> i)</span> { <span class=\"hljs-keyword\">return</span> num * <span class=\"hljs-built_in\">pow</span>(<span class=\"hljs-number\">8</span>, i); }\n\n<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> <span class=\"hljs-title function_\">toDecimal</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> octal_value)</span>\n{\n    <span class=\"hljs-type\">int</span> decimal_value = <span class=\"hljs-number\">0</span>, i = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-keyword\">while</span> (octal_value)\n    {\n        <span class=\"hljs-comment\">// Extracts right-most digit and then multiplies by 8^i</span>\n        decimal_value += convertValue(octal_value % <span class=\"hljs-number\">10</span>, i++);\n\n        <span class=\"hljs-comment\">// Shift right in base 10</span>\n        octal_value /= <span class=\"hljs-number\">10</span>;\n    }\n\n    <span class=\"hljs-keyword\">return</span> decimal_value;\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Enter octal value: &quot;</span>);\n\n    <span class=\"hljs-type\">int</span> octal_value;\n\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;octal_value);\n\n    <span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> result = toDecimal(octal_value);\n\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d in decimal is %lld\\n&quot;</span>, octal_value, result);\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    },
    "dart": {
      "dir": "conversions/octal_to_decimal.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/conversions/octal_to_decimal.dart",
      "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;dart:math&quot;</span> <span class=\"hljs-keyword\">show</span> pow;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:test/test.dart&#x27;</span>;\n\n<span class=\"hljs-comment\">// octal number to decimal number conversion</span>\n<span class=\"hljs-comment\">//</span>\n<span class=\"hljs-comment\">// function to take oct string value and  return decmal string value</span>\n<span class=\"hljs-built_in\">String</span> ocatal_to_decimal(<span class=\"hljs-built_in\">String</span> oct_val) {\n  <span class=\"hljs-comment\">// checking for unexpected values</span>\n  oct_val = oct_val.trim();\n  <span class=\"hljs-keyword\">if</span> (oct_val == <span class=\"hljs-keyword\">null</span> || oct_val == <span class=\"hljs-string\">&quot;&quot;</span>) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> FormatException(<span class=\"hljs-string\">&quot;An empty value was passed to the function&quot;</span>);\n  }\n\n  <span class=\"hljs-comment\">// negative number check</span>\n  <span class=\"hljs-built_in\">bool</span> is_negative = oct_val[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&quot;-&quot;</span>;\n  <span class=\"hljs-keyword\">if</span> (is_negative) oct_val = oct_val.substring(<span class=\"hljs-number\">1</span>);\n\n  <span class=\"hljs-built_in\">int</span> oct;\n  <span class=\"hljs-keyword\">try</span> {\n    oct = <span class=\"hljs-built_in\">int</span>.parse(oct_val);\n  } <span class=\"hljs-keyword\">catch</span> (e) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> FormatException(<span class=\"hljs-string\">&quot;An invalid value was passed to the function&quot;</span>);\n  }\n\n  <span class=\"hljs-comment\">// checking number not valid for octal is passed(0-7)</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; oct_val.length; i++) {\n    <span class=\"hljs-keyword\">if</span> (!(<span class=\"hljs-built_in\">int</span>.parse(oct_val.substring(i, i + <span class=\"hljs-number\">1</span>)) &lt; <span class=\"hljs-number\">8</span>)) {\n      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> FormatException(<span class=\"hljs-string\">&quot;An invalid value was passed to the function&quot;</span>);\n    }\n    ;\n  }\n\n  <span class=\"hljs-comment\">// converting octal to decimal</span>\n  <span class=\"hljs-built_in\">int</span> dec_val = <span class=\"hljs-number\">0</span>, i = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">while</span> (oct != <span class=\"hljs-number\">0</span>) {\n    dec_val = dec_val + ((oct % <span class=\"hljs-number\">10</span>) * pow(<span class=\"hljs-number\">8</span>, i));\n    i++;\n    oct = oct ~/ <span class=\"hljs-number\">10</span>;\n  }\n\n  <span class=\"hljs-comment\">// returning the value</span>\n  <span class=\"hljs-keyword\">if</span> (is_negative) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-&quot;</span> + dec_val.toString();\n  }\n  <span class=\"hljs-keyword\">return</span> dec_val.toString();\n}\n\n<span class=\"hljs-comment\">// driver function</span>\n<span class=\"hljs-keyword\">void</span> main() {\n  <span class=\"hljs-comment\">// test cases for different input</span>\n  test(<span class=\"hljs-string\">&quot;ocatal_to_decimal 75&quot;</span>, () {\n    expect(ocatal_to_decimal(<span class=\"hljs-string\">&quot;75&quot;</span>), equals(<span class=\"hljs-string\">&quot;61&quot;</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;ocatal_to_decimal -62&quot;</span>, () {\n    expect(ocatal_to_decimal(<span class=\"hljs-string\">&quot;-62&quot;</span>), equals(<span class=\"hljs-string\">&quot;-50&quot;</span>));\n  });\n\n  test(<span class=\"hljs-string\">&quot;ocatal_to_decimal rasies error when number is invalid&quot;</span>, () {\n    expect(() =&gt; ocatal_to_decimal(<span class=\"hljs-string\">&quot;84&quot;</span>), throwsFormatException);\n  });\n\n  test(<span class=\"hljs-string\">&quot;ocatal_to_decimal rasies error when number is invalid&quot;</span>, () {\n    expect(() =&gt; ocatal_to_decimal(<span class=\"hljs-string\">&quot;as23&quot;</span>), throwsFormatException);\n  });\n\n  test(<span class=\"hljs-string\">&quot;ocatal_to_decimal of empty string raises error&quot;</span>, () {\n    expect(() =&gt; ocatal_to_decimal(<span class=\"hljs-string\">&quot;&quot;</span>), throwsFormatException);\n  });\n}\n"
    },
    "php": {
      "dir": "Conversions/OctalToDecimal.php",
      "url": "https://github.com/TheAlgorithms/php/tree/master/Conversions/OctalToDecimal.php",
      "code": "<span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n * This function converts the\n * submitted Octal Number to\n * Decimal Number.\n *\n * Working of Algorithm\n * (10) base 8\n * (1 * (8 ^ 1) + 0 * (8 ^ 0)) base 10\n * (8 + 0) base 10\n * 9 base 10\n * <span class=\"hljs-doctag\">@param</span> string $octalNumber\n * <span class=\"hljs-doctag\">@return</span> int\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">octalToDecimal</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$octalNumber</span></span>)\n</span>{\n    <span class=\"hljs-keyword\">if</span> (!is_numeric(<span class=\"hljs-variable\">$octalNumber</span>)) {\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> \\<span class=\"hljs-built_in\">Exception</span>(<span class=\"hljs-string\">&#x27;Please pass a valid Octal Number for Converting it to a Decimal Number.&#x27;</span>);\n    }\n\n    <span class=\"hljs-variable\">$decimalNumber</span> = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-variable\">$octalDigits</span>   = array_reverse(str_split(<span class=\"hljs-variable\">$octalNumber</span>));\n\n    <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-variable\">$octalDigits</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$index</span> =&gt; <span class=\"hljs-variable\">$digit</span>) {\n        <span class=\"hljs-variable\">$decimalNumber</span> += <span class=\"hljs-variable\">$digit</span> * pow(<span class=\"hljs-number\">8</span>, <span class=\"hljs-variable\">$index</span>);\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$decimalNumber</span>;\n}\n\n<span class=\"hljs-comment\">/**\n * This function converts the\n * submitted Decimal Number to\n * Octal Number.\n *\n * <span class=\"hljs-doctag\">@param</span> string $decimalNumber\n * <span class=\"hljs-doctag\">@return</span> string\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">decimalToOctal</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$decimalNumber</span></span>)\n</span>{\n    <span class=\"hljs-keyword\">if</span> (!is_numeric(<span class=\"hljs-variable\">$decimalNumber</span>)) {\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> \\<span class=\"hljs-built_in\">Exception</span>(<span class=\"hljs-string\">&#x27;Please pass a valid Decimal Number for Converting it to an Octal Number.&#x27;</span>);\n    }\n\n    <span class=\"hljs-variable\">$octalNumber</span> = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n\n    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-variable\">$decimalNumber</span> &gt; <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-variable\">$octalNumber</span> = (<span class=\"hljs-variable\">$decimalNumber</span> % <span class=\"hljs-number\">8</span>) . <span class=\"hljs-variable\">$octalNumber</span>;\n        <span class=\"hljs-variable\">$decimalNumber</span> /= <span class=\"hljs-number\">8</span>;\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$octalNumber</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Akshay Khale",
      "email": "khale.akshay@gmail.com",
      "commits": 1
    },
    {
      "name": "mohammadreza490",
      "email": "47437328+mohammadreza490@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "LethargicLeprechaun",
      "email": "LethargicLeprechaun@gmail.com",
      "commits": 1
    },
    {
      "name": "unknown",
      "email": "cnddhks846@naver.com",
      "commits": 1
    },
    {
      "name": "Andrés Jozef Jiménez Leandro",
      "email": "AndrewJey@gmail.com",
      "commits": 1
    },
    {
      "name": "Vishnu",
      "email": "vishnupothan2@gmail.com",
      "commits": 2
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 2
    },
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
