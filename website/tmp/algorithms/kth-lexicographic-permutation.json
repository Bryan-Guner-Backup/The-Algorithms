{
  "slug": "kth-lexicographic-permutation",
  "name": "Kth Lexicographic Permutation",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/kth_lexicographic_permutation.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/kth_lexicographic_permutation.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">kthPermutation</span>(<span class=\"hljs-params\">k, n</span>):\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Finds k&#x27;th lexicographic permutation (in increasing order) of\r\n    0,1,2,...n-1 in O(n^2) time.\r\n\r\n    Examples:\r\n    First permutation is always 0,1,2,...n\r\n    &gt;&gt;&gt; kthPermutation(0,5)\r\n    [0, 1, 2, 3, 4]\r\n\r\n    The order of permutation of 0,1,2,3 is [0,1,2,3], [0,1,3,2], [0,2,1,3],\r\n    [0,2,3,1], [0,3,1,2], [0,3,2,1], [1,0,2,3], [1,0,3,2], [1,2,0,3],\r\n    [1,2,3,0], [1,3,0,2]\r\n    &gt;&gt;&gt; kthPermutation(10,4)\r\n    [1, 3, 0, 2]\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-comment\"># Factorails from 1! to (n-1)!</span>\r\n    factorials = [<span class=\"hljs-number\">1</span>]\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">2</span>, n):\r\n        factorials.append(factorials[-<span class=\"hljs-number\">1</span>] * i)\r\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-number\">0</span> &lt;= k &lt; factorials[-<span class=\"hljs-number\">1</span>] * n, <span class=\"hljs-string\">&quot;k out of bounds&quot;</span>\r\n\r\n    permutation = []\r\n    elements = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">range</span>(n))\r\n\r\n    <span class=\"hljs-comment\"># Find permutation</span>\r\n    <span class=\"hljs-keyword\">while</span> factorials:\r\n        factorial = factorials.pop()\r\n        number, k = <span class=\"hljs-built_in\">divmod</span>(k, factorial)\r\n        permutation.append(elements[number])\r\n        elements.remove(elements[number])\r\n    permutation.append(elements[<span class=\"hljs-number\">0</span>])\r\n\r\n    <span class=\"hljs-keyword\">return</span> permutation\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "Kiril Bangachev",
      "email": "51961981+KirilBangachev@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
