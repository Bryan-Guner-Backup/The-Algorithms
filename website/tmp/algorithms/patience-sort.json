{
  "slug": "patience-sort",
  "name": "Patience Sort",
  "categories": ["sorts"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts/patience_sort.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts/patience_sort.py",
      "code": "<span class=\"hljs-keyword\">from</span> bisect <span class=\"hljs-keyword\">import</span> bisect_left\n<span class=\"hljs-keyword\">from</span> functools <span class=\"hljs-keyword\">import</span> total_ordering\n<span class=\"hljs-keyword\">from</span> heapq <span class=\"hljs-keyword\">import</span> merge\n<span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">List</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\nA pure Python implementation of the patience sort algorithm\n\nFor more information: https://en.wikipedia.org/wiki/Patience_sorting\n\nThis algorithm is based on the card game patience\n\nFor doctests run following command:\npython3 -m doctest -v patience_sort.py\n\nFor manual testing run:\npython3 patience_sort.py\n&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-meta\">@total_ordering</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Stack</span>(<span class=\"hljs-title class_ inherited__\">list</span>):\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__lt__</span>(<span class=\"hljs-params\">self, other</span>):\n        <span class=\"hljs-keyword\">return</span> self[-<span class=\"hljs-number\">1</span>] &lt; other[-<span class=\"hljs-number\">1</span>]\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__eq__</span>(<span class=\"hljs-params\">self, other</span>):\n        <span class=\"hljs-keyword\">return</span> self[-<span class=\"hljs-number\">1</span>] == other[-<span class=\"hljs-number\">1</span>]\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">patience_sort</span>(<span class=\"hljs-params\">collection: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">list</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;A pure implementation of quick sort algorithm in Python\n\n    :param collection: some mutable ordered collection with heterogeneous\n    comparable items inside\n    :return: the same collection ordered by ascending\n\n    Examples:\n    &gt;&gt;&gt; patience_sort([1, 9, 5, 21, 17, 6])\n    [1, 5, 6, 9, 17, 21]\n\n    &gt;&gt;&gt; patience_sort([])\n    []\n\n    &gt;&gt;&gt; patience_sort([-3, -17, -48])\n    [-48, -17, -3]\n    &quot;&quot;&quot;</span>\n    stacks: <span class=\"hljs-type\">List</span>[Stack] = []\n    <span class=\"hljs-comment\"># sort into stacks</span>\n    <span class=\"hljs-keyword\">for</span> element <span class=\"hljs-keyword\">in</span> collection:\n        new_stacks = Stack([element])\n        i = bisect_left(stacks, new_stacks)\n        <span class=\"hljs-keyword\">if</span> i != <span class=\"hljs-built_in\">len</span>(stacks):\n            stacks[i].append(element)\n        <span class=\"hljs-keyword\">else</span>:\n            stacks.append(new_stacks)\n\n    <span class=\"hljs-comment\"># use a heap-based merge to merge stack efficiently</span>\n    collection[:] = merge(*[<span class=\"hljs-built_in\">reversed</span>(stack) <span class=\"hljs-keyword\">for</span> stack <span class=\"hljs-keyword\">in</span> stacks])\n    <span class=\"hljs-keyword\">return</span> collection\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    user_input = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter numbers separated by a comma:\\n&quot;</span>).strip()\n    unsorted = [<span class=\"hljs-built_in\">int</span>(item) <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> user_input.split(<span class=\"hljs-string\">&quot;,&quot;</span>)]\n    <span class=\"hljs-built_in\">print</span>(patience_sort(unsorted))\n"
    },
    "aarch64_assembly": {
      "dir": "sorters/patience_sort.s",
      "url": "https://github.com/TheAlgorithms/aarch64_assembly/tree/master/sorters/patience_sort.s",
      "code": "<span class=\"hljs-comment\">/* ARM assembly AARCH64 Raspberry PI 3B */</span>\n<span class=\"hljs-comment\">/*  program patienceSort64.s  */</span>\n \n<span class=\"hljs-comment\">/*******************************************/</span>\n<span class=\"hljs-comment\">/* Constantes file                         */</span>\n<span class=\"hljs-comment\">/*******************************************/</span>\n<span class=\"hljs-comment\">/* for this file see task include a file in language AArch64 assembly */</span>\n<span class=\"hljs-symbol\">.include</span> <span class=\"hljs-string\">&quot;../includeConstantesARM64.inc&quot;</span>\n \n<span class=\"hljs-comment\">/*******************************************/</span>\n<span class=\"hljs-comment\">/* Structures                               */</span>\n<span class=\"hljs-comment\">/********************************************/</span>\n<span class=\"hljs-comment\">/* structure Doublylinkedlist*/</span>\n    .struct  <span class=\"hljs-number\">0</span>\n<span class=\"hljs-symbol\">dllist_head:</span>                    <span class=\"hljs-comment\">// head node</span>\n    .struct  dllist_head + <span class=\"hljs-number\">8</span>\n<span class=\"hljs-symbol\">dllist_tail:</span>                    <span class=\"hljs-comment\">// tail node</span>\n    .struct  dllist_tail  + <span class=\"hljs-number\">8</span>\n<span class=\"hljs-symbol\">dllist_fin:</span>\n<span class=\"hljs-comment\">/* structure Node Doublylinked List*/</span>\n    .struct  <span class=\"hljs-number\">0</span>\n<span class=\"hljs-symbol\">NDlist_next:</span>                    <span class=\"hljs-comment\">// next element</span>\n    .struct  NDlist_next + <span class=\"hljs-number\">8</span> \n<span class=\"hljs-symbol\">NDlist_prev:</span>                    <span class=\"hljs-comment\">// previous element</span>\n    .struct  NDlist_prev + <span class=\"hljs-number\">8</span> \n<span class=\"hljs-symbol\">NDlist_value:</span>                   <span class=\"hljs-comment\">// element value or key</span>\n    .struct  NDlist_value + <span class=\"hljs-number\">8</span>\n<span class=\"hljs-symbol\">NDlist_fin:</span>\n \n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-comment\">/* Initialized data              */</span>\n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-symbol\">.data</span>\n<span class=\"hljs-symbol\">szMessSortOk:</span>       <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Table sorted.\\n&quot;</span>\n<span class=\"hljs-symbol\">szMessSortNok:</span>      <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Table not sorted !!!!!.\\n&quot;</span>\n<span class=\"hljs-symbol\">sMessResult:</span>        <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Value  : @ \\n&quot;</span>\n<span class=\"hljs-symbol\">szCarriageReturn:</span>   <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;\\n&quot;</span>\n \n<span class=\"hljs-symbol\">.align</span> <span class=\"hljs-number\">4</span>\n<span class=\"hljs-symbol\">TableNumber:</span>      .quad   <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">7</span>\n<span class=\"hljs-comment\">#TableNumber:     .quad   10,9,8,7,6,-5,4,3,2,1</span>\n                 <span class=\"hljs-meta\">.equ</span> NBELEMENTS, (. - TableNumber) / <span class=\"hljs-number\">8</span> \n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-comment\">/* UnInitialized data            */</span>\n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-symbol\">.bss</span>\n<span class=\"hljs-symbol\">sZoneConv:</span>       <span class=\"hljs-meta\">.skip</span> <span class=\"hljs-number\">24</span>\n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-comment\">/*  code section                 */</span>\n<span class=\"hljs-comment\">/*********************************/</span>\n<span class=\"hljs-symbol\">.text</span>\n<span class=\"hljs-symbol\">.global</span> main \n<span class=\"hljs-symbol\">main:</span>                                              <span class=\"hljs-comment\">// entry of program </span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrTableNumber                         <span class=\"hljs-comment\">// address number table</span>\n    <span class=\"hljs-keyword\">mov</span> x1,<span class=\"hljs-number\">0</span>                                       <span class=\"hljs-comment\">// first element</span>\n    <span class=\"hljs-keyword\">mov</span> x2,NBELEMENTS                              <span class=\"hljs-comment\">// number of élements </span>\n    <span class=\"hljs-keyword\">bl</span> patienceSort\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrTableNumber                         <span class=\"hljs-comment\">// address number table</span>\n    <span class=\"hljs-keyword\">bl</span> displayTable\n \n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrTableNumber                         <span class=\"hljs-comment\">// address number table</span>\n    <span class=\"hljs-keyword\">mov</span> x1,NBELEMENTS                              <span class=\"hljs-comment\">// number of élements </span>\n    <span class=\"hljs-keyword\">bl</span> isSorted                                    <span class=\"hljs-comment\">// control sort</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,<span class=\"hljs-number\">1</span>                                       <span class=\"hljs-comment\">// sorted ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">1</span>f                                    \n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszMessSortNok                       <span class=\"hljs-comment\">// no !! error sort</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n<span class=\"hljs-number\">1</span>:                                                 <span class=\"hljs-comment\">// yes</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszMessSortOk\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n<span class=\"hljs-number\">100</span>:                                               <span class=\"hljs-comment\">// standard end of the program </span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">0</span>                                       <span class=\"hljs-comment\">// return code</span>\n    <span class=\"hljs-keyword\">mov</span> x8,EXIT                                    <span class=\"hljs-comment\">// request to exit program</span>\n    <span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">0</span>                                          <span class=\"hljs-comment\">// perform the system call</span>\n \n<span class=\"hljs-symbol\">qAdrsZoneConv:</span>            .quad sZoneConv\n<span class=\"hljs-symbol\">qAdrszCarriageReturn:</span>     .quad szCarriageReturn\n<span class=\"hljs-symbol\">qAdrsMessResult:</span>          .quad sMessResult\n<span class=\"hljs-symbol\">qAdrTableNumber:</span>          .quad TableNumber\n<span class=\"hljs-symbol\">qAdrszMessSortOk:</span>         .quad szMessSortOk\n<span class=\"hljs-symbol\">qAdrszMessSortNok:</span>        .quad szMessSortNok\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     control sorted table                                   */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of table */</span>\n<span class=\"hljs-comment\">/* x1 contains the number of elements  &gt; 0  */</span>\n<span class=\"hljs-comment\">/* x0 return 0  if not sorted   1  if sorted */</span>\n<span class=\"hljs-symbol\">isSorted:</span>\n    stp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!             <span class=\"hljs-comment\">// save  registers</span>\n    stp x3,x4,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!             <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x2,<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">ldr</span> x4,[x0,x2,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]\n<span class=\"hljs-number\">1</span>:\n    <span class=\"hljs-keyword\">add</span> x2,x2,<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">cmp</span> x2,x1\n    <span class=\"hljs-keyword\">bge</span> <span class=\"hljs-number\">99</span>f\n    <span class=\"hljs-keyword\">ldr</span> x3,[x0,x2, <span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]\n    <span class=\"hljs-keyword\">cmp</span> x3,x4\n    <span class=\"hljs-keyword\">blt</span> <span class=\"hljs-number\">98</span>f\n    <span class=\"hljs-keyword\">mov</span> x4,x3\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">1</span>b\n<span class=\"hljs-number\">98</span>:\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">0</span>                       <span class=\"hljs-comment\">// not sorted</span>\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n<span class=\"hljs-number\">99</span>:\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">1</span>                       <span class=\"hljs-comment\">// sorted</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x3,x4,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                            <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*         patience sort                                                   */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of table */</span>\n<span class=\"hljs-comment\">/* x1 contains first start index\n/* x2 contains the number of elements  */</span>\n<span class=\"hljs-symbol\">patienceSort:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!        <span class=\"hljs-comment\">// save  registers</span>\n    stp x2,x3,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!        <span class=\"hljs-comment\">// save  registers</span>\n    stp x4,x5,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!        <span class=\"hljs-comment\">// save  registers</span>\n    stp x6,x7,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!        <span class=\"hljs-comment\">// save  registers</span>\n    stp x8,x9,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!        <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">lsl</span> x9,x2,<span class=\"hljs-number\">1</span>                <span class=\"hljs-comment\">// compute total size of piles (2 list pointer by pile )</span>\n    <span class=\"hljs-keyword\">lsl</span> x10,x9,<span class=\"hljs-number\">3</span>               <span class=\"hljs-comment\">// 8 bytes by number</span>\n    <span class=\"hljs-keyword\">sub</span> <span class=\"hljs-built_in\">sp</span>,<span class=\"hljs-built_in\">sp</span>,x10              <span class=\"hljs-comment\">// reserve place to stack</span>\n    <span class=\"hljs-keyword\">mov</span> <span class=\"hljs-built_in\">fp</span>,<span class=\"hljs-built_in\">sp</span>                  <span class=\"hljs-comment\">// frame pointer = stack</span>\n    <span class=\"hljs-keyword\">mov</span> x3,<span class=\"hljs-number\">0</span>                   <span class=\"hljs-comment\">// index</span>\n    <span class=\"hljs-keyword\">mov</span> x4,<span class=\"hljs-number\">0</span>\n<span class=\"hljs-number\">1</span>:\n    <span class=\"hljs-keyword\">str</span> x4,[<span class=\"hljs-built_in\">fp</span>,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]       <span class=\"hljs-comment\">// init piles area </span>\n    <span class=\"hljs-keyword\">add</span> x3,x3,<span class=\"hljs-number\">1</span>                <span class=\"hljs-comment\">// increment index</span>\n    <span class=\"hljs-keyword\">cmp</span> x3,x9\n    <span class=\"hljs-keyword\">blt</span> <span class=\"hljs-number\">1</span>b\n    <span class=\"hljs-keyword\">mov</span> x3,<span class=\"hljs-number\">0</span>                   <span class=\"hljs-comment\">// index value</span>\n    <span class=\"hljs-keyword\">mov</span> x4,<span class=\"hljs-number\">0</span>                   <span class=\"hljs-comment\">// counter first pile</span>\n    <span class=\"hljs-keyword\">mov</span> x8,x0                  <span class=\"hljs-comment\">// save table address</span>\n<span class=\"hljs-number\">2</span>:\n    <span class=\"hljs-keyword\">ldr</span> x1,[x8,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]       <span class=\"hljs-comment\">// load value </span>\n    <span class=\"hljs-keyword\">add</span> x0,<span class=\"hljs-built_in\">fp</span>,x4,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">4</span>         <span class=\"hljs-comment\">// pile address</span>\n    <span class=\"hljs-keyword\">bl</span> isEmpty\n    <span class=\"hljs-keyword\">cmp</span> x0,<span class=\"hljs-number\">0</span>                   <span class=\"hljs-comment\">// pile empty ?</span>\n    <span class=\"hljs-keyword\">bne</span> <span class=\"hljs-number\">3</span>f\n    <span class=\"hljs-keyword\">add</span> x0,<span class=\"hljs-built_in\">fp</span>,x4,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">4</span>         <span class=\"hljs-comment\">// pile address</span>\n    <span class=\"hljs-keyword\">bl</span> insertHead              <span class=\"hljs-comment\">// insert value x1</span>\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">5</span>f\n<span class=\"hljs-number\">3</span>:\n    <span class=\"hljs-keyword\">add</span> x0,<span class=\"hljs-built_in\">fp</span>,x4,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">4</span>         <span class=\"hljs-comment\">// pile address</span>\n    <span class=\"hljs-keyword\">ldr</span> x5,[x0,dllist_head]\n    <span class=\"hljs-keyword\">ldr</span> x5,[x5,NDlist_value]   <span class=\"hljs-comment\">// load first list value</span>\n    <span class=\"hljs-keyword\">cmp</span> x1,x5                  <span class=\"hljs-comment\">// compare value and last value on the pile</span>\n    <span class=\"hljs-keyword\">blt</span> <span class=\"hljs-number\">4</span>f\n    <span class=\"hljs-keyword\">add</span> x0,<span class=\"hljs-built_in\">fp</span>,x4,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">4</span>         <span class=\"hljs-comment\">// pile address</span>\n    <span class=\"hljs-keyword\">bl</span> insertHead              <span class=\"hljs-comment\">// insert value x1</span>\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">5</span>f\n<span class=\"hljs-number\">4</span>:                             <span class=\"hljs-comment\">// value is smaller créate a new pile</span>\n    <span class=\"hljs-keyword\">add</span> x4,x4,<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">add</span> x0,<span class=\"hljs-built_in\">fp</span>,x4,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">4</span>         <span class=\"hljs-comment\">// pile address</span>\n    <span class=\"hljs-keyword\">bl</span> insertHead              <span class=\"hljs-comment\">// insert value x1</span>\n<span class=\"hljs-number\">5</span>:  \n    <span class=\"hljs-keyword\">add</span> x3,x3,<span class=\"hljs-number\">1</span>                <span class=\"hljs-comment\">// increment index value</span>\n    <span class=\"hljs-keyword\">cmp</span> x3,x2                  <span class=\"hljs-comment\">// end </span>\n    <span class=\"hljs-keyword\">blt</span> <span class=\"hljs-number\">2</span>b                     <span class=\"hljs-comment\">// and loop</span>\n \n    <span class=\"hljs-comment\">/* step 2 */</span>\n    <span class=\"hljs-keyword\">mov</span> x6,<span class=\"hljs-number\">0</span>                   <span class=\"hljs-comment\">// index value table</span>\n<span class=\"hljs-number\">6</span>:\n    <span class=\"hljs-keyword\">mov</span> x3,<span class=\"hljs-number\">0</span>                   <span class=\"hljs-comment\">// index pile</span>\n    <span class=\"hljs-keyword\">mov</span> x5, <span class=\"hljs-number\">1</span>&lt;&lt;<span class=\"hljs-number\">62</span>              <span class=\"hljs-comment\">// min</span>\n<span class=\"hljs-number\">7</span>:                             <span class=\"hljs-comment\">// search minimum</span>\n    <span class=\"hljs-keyword\">add</span> x0,<span class=\"hljs-built_in\">fp</span>,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">4</span>\n    <span class=\"hljs-keyword\">bl</span> isEmpty\n    <span class=\"hljs-keyword\">cmp</span> x0,<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">8</span>f\n    <span class=\"hljs-keyword\">add</span> x0,<span class=\"hljs-built_in\">fp</span>,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">4</span>\n    <span class=\"hljs-keyword\">bl</span> searchMinList\n    <span class=\"hljs-keyword\">cmp</span> x0,x5                 <span class=\"hljs-comment\">// compare min global</span>\n    <span class=\"hljs-keyword\">bge</span> <span class=\"hljs-number\">8</span>f\n    <span class=\"hljs-keyword\">mov</span> x5,x0                 <span class=\"hljs-comment\">// smaller -&gt; store new min</span>\n    <span class=\"hljs-keyword\">mov</span> x7,x1                 <span class=\"hljs-comment\">// and pointer to min</span>\n    <span class=\"hljs-keyword\">add</span> x9,<span class=\"hljs-built_in\">fp</span>,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">4</span>        <span class=\"hljs-comment\">// and head list</span>\n<span class=\"hljs-number\">8</span>:\n    <span class=\"hljs-keyword\">add</span> x3,x3,<span class=\"hljs-number\">1</span>               <span class=\"hljs-comment\">// next pile</span>\n    <span class=\"hljs-keyword\">cmp</span> x3,x4                 <span class=\"hljs-comment\">// end ?</span>\n    <span class=\"hljs-keyword\">ble</span> <span class=\"hljs-number\">7</span>b\n    <span class=\"hljs-keyword\">str</span> x5,[x8,x6,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]      <span class=\"hljs-comment\">// store min to table value</span>\n    <span class=\"hljs-keyword\">mov</span> x0,x9                 <span class=\"hljs-comment\">// and suppress the value in the pile</span>\n    <span class=\"hljs-keyword\">mov</span> x1,x7\n    <span class=\"hljs-keyword\">bl</span> suppressNode\n    <span class=\"hljs-keyword\">add</span> x6,x6,<span class=\"hljs-number\">1</span>               <span class=\"hljs-comment\">// increment index value</span>\n    <span class=\"hljs-keyword\">cmp</span> x6,x2                 <span class=\"hljs-comment\">// end ?</span>\n    <span class=\"hljs-keyword\">blt</span> <span class=\"hljs-number\">6</span>b\n \n    <span class=\"hljs-keyword\">add</span> <span class=\"hljs-built_in\">sp</span>,<span class=\"hljs-built_in\">sp</span>,x10             <span class=\"hljs-comment\">// stack alignement</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x8,x9,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>         <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x6,x7,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>         <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x4,x5,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>         <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x2,x3,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>         <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>         <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                       <span class=\"hljs-comment\">// return to address lr x30</span>\n \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*      Display table elements                                */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of table */</span>\n<span class=\"hljs-symbol\">displayTable:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!              <span class=\"hljs-comment\">// save  registers</span>\n    stp x2,x3,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!              <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x2,x0                        <span class=\"hljs-comment\">// table address</span>\n    <span class=\"hljs-keyword\">mov</span> x3,<span class=\"hljs-number\">0</span>\n<span class=\"hljs-number\">1</span>:                                   <span class=\"hljs-comment\">// loop display table</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x2,x3,<span class=\"hljs-keyword\">lsl</span> <span class=\"hljs-number\">3</span>]\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv\n    <span class=\"hljs-keyword\">bl</span> conversion10S                  <span class=\"hljs-comment\">// décimal conversion</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrsMessResult\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv\n    <span class=\"hljs-keyword\">bl</span> strInsertAtCharInc            <span class=\"hljs-comment\">// insert result at // character</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess                 <span class=\"hljs-comment\">// display message</span>\n    <span class=\"hljs-keyword\">add</span> x3,x3,<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">cmp</span> x3,NBELEMENTS - <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">ble</span> <span class=\"hljs-number\">1</span>b\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszCarriageReturn\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n    <span class=\"hljs-keyword\">mov</span> x0,x2\n<span class=\"hljs-number\">100</span>:\n    ldp x2,x3,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                             <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     list is empty ?                         */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of the list structure */</span>\n<span class=\"hljs-comment\">/* x0 return 0 if empty  else return 1 */</span>\n<span class=\"hljs-symbol\">isEmpty:</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x0,<span class=\"hljs-symbol\">#dllist_head</span>]\n    <span class=\"hljs-keyword\">cmp</span> x0,<span class=\"hljs-number\">0</span>\n    cset x0,ne\n    ret                                <span class=\"hljs-comment\">// return</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     insert value at list head                        */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of the list structure */</span>\n<span class=\"hljs-comment\">/* x1 contains value */</span>\n<span class=\"hljs-symbol\">insertHead:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!                  <span class=\"hljs-comment\">// save  registers</span>\n    stp x2,x3,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!                  <span class=\"hljs-comment\">// save  registers</span>\n    stp x4,x5,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!                  <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x4,x0                            <span class=\"hljs-comment\">// save address</span>\n    <span class=\"hljs-keyword\">mov</span> x0,x1                            <span class=\"hljs-comment\">// value</span>\n    <span class=\"hljs-keyword\">bl</span> createNode\n    <span class=\"hljs-keyword\">cmp</span> x0,#-<span class=\"hljs-number\">1</span>                           <span class=\"hljs-comment\">// allocation error ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">100</span>f\n    <span class=\"hljs-keyword\">ldr</span> x2,[x4,<span class=\"hljs-symbol\">#dllist_head</span>]             <span class=\"hljs-comment\">// load address first node</span>\n    <span class=\"hljs-keyword\">str</span> x2,[x0,<span class=\"hljs-symbol\">#NDlist_next</span>]             <span class=\"hljs-comment\">// store in next pointer on new node</span>\n    <span class=\"hljs-keyword\">mov</span> x1,<span class=\"hljs-number\">#0</span>\n    <span class=\"hljs-keyword\">str</span> x1,[x0,<span class=\"hljs-symbol\">#NDlist_prev</span>]             <span class=\"hljs-comment\">// store zero in previous pointer on new node</span>\n    <span class=\"hljs-keyword\">str</span> x0,[x4,<span class=\"hljs-symbol\">#dllist_head</span>]             <span class=\"hljs-comment\">// store address new node in address head list </span>\n    <span class=\"hljs-keyword\">cmp</span> x2,<span class=\"hljs-number\">#0</span>                            <span class=\"hljs-comment\">// address first node is null ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">1</span>f\n    <span class=\"hljs-keyword\">str</span> x0,[x2,<span class=\"hljs-symbol\">#NDlist_prev</span>]             <span class=\"hljs-comment\">// no store adresse new node in previous pointer</span>\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n<span class=\"hljs-number\">1</span>:\n    <span class=\"hljs-keyword\">str</span> x0,[x4,<span class=\"hljs-symbol\">#dllist_tail</span>]             <span class=\"hljs-comment\">// else store new node in tail address</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x4,x5,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>                    <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x2,x3,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>                    <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>                    <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                                  <span class=\"hljs-comment\">// return to address lr x30</span>\n \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     search value minimum                                               */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of the list structure */</span>\n<span class=\"hljs-comment\">/* x0 return min   */</span>\n<span class=\"hljs-comment\">/* x1 return address of node */</span>\n<span class=\"hljs-symbol\">searchMinList:</span>\n    stp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!                  <span class=\"hljs-comment\">// save  registers</span>\n    stp x3,x4,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!                  <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x0,<span class=\"hljs-symbol\">#dllist_head</span>]             <span class=\"hljs-comment\">// load first node</span>\n    <span class=\"hljs-keyword\">mov</span> x3,<span class=\"hljs-number\">1</span>&lt;&lt;<span class=\"hljs-number\">62</span>\n    <span class=\"hljs-keyword\">mov</span> x1,<span class=\"hljs-number\">0</span>\n<span class=\"hljs-number\">1</span>:\n    <span class=\"hljs-keyword\">cmp</span> x0,<span class=\"hljs-number\">0</span>                             <span class=\"hljs-comment\">// null -&gt; end </span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">99</span>f\n    <span class=\"hljs-keyword\">ldr</span> x2,[x0,<span class=\"hljs-symbol\">#NDlist_value</span>]            <span class=\"hljs-comment\">// load node value</span>\n    <span class=\"hljs-keyword\">cmp</span> x2,x3                            <span class=\"hljs-comment\">// min ?</span>\n    <span class=\"hljs-keyword\">bge</span> <span class=\"hljs-number\">2</span>f\n    <span class=\"hljs-keyword\">mov</span> x3,x2                            <span class=\"hljs-comment\">// value -&gt; min</span>\n    <span class=\"hljs-keyword\">mov</span> x1,x0                            <span class=\"hljs-comment\">// store pointer </span>\n<span class=\"hljs-number\">2</span>:\n    <span class=\"hljs-keyword\">ldr</span> x0,[x0,<span class=\"hljs-symbol\">#NDlist_next</span>]             <span class=\"hljs-comment\">// load addresse next node </span>\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">1</span>b                                 <span class=\"hljs-comment\">// and loop</span>\n<span class=\"hljs-number\">99</span>:\n    <span class=\"hljs-keyword\">mov</span> x0,x3                            <span class=\"hljs-comment\">// return minimum</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x3,x4,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>                    <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>                    <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                                  <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     suppress node                                               */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of the list structure */</span>\n<span class=\"hljs-comment\">/* x1 contains the address to node to suppress  */</span>\n<span class=\"hljs-symbol\">suppressNode:</span>\n    stp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!              <span class=\"hljs-comment\">// save  registers</span>\n    stp x3,x4,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!              <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">ldr</span> x2,[x1,<span class=\"hljs-symbol\">#NDlist_next</span>]         <span class=\"hljs-comment\">// load addresse next node </span>\n    <span class=\"hljs-keyword\">ldr</span> x3,[x1,<span class=\"hljs-symbol\">#NDlist_prev</span>]         <span class=\"hljs-comment\">// load addresse prev node </span>\n    <span class=\"hljs-keyword\">cmp</span> x3,<span class=\"hljs-number\">#0</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">1</span>f\n    <span class=\"hljs-keyword\">str</span> x2,[x3,<span class=\"hljs-symbol\">#NDlist_next</span>] \n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">2</span>f\n<span class=\"hljs-number\">1</span>:\n    <span class=\"hljs-keyword\">str</span> x3,[x0,<span class=\"hljs-symbol\">#NDlist_next</span>] \n<span class=\"hljs-number\">2</span>:\n    <span class=\"hljs-keyword\">cmp</span> x2,<span class=\"hljs-number\">#0</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">3</span>f\n    <span class=\"hljs-keyword\">str</span> x3,[x2,<span class=\"hljs-symbol\">#NDlist_prev</span>]\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n<span class=\"hljs-number\">3</span>:\n    <span class=\"hljs-keyword\">str</span> x2,[x0,<span class=\"hljs-symbol\">#NDlist_prev</span>]\n<span class=\"hljs-number\">100</span>:\n \n    ldp x3,x4,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>               <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                             <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     Create new node                                            */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the value */</span>\n<span class=\"hljs-comment\">/* x0 return node address or -1 if allocation error*/</span>\n<span class=\"hljs-symbol\">createNode:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!              <span class=\"hljs-comment\">// save  registers</span>\n    stp x2,x3,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!              <span class=\"hljs-comment\">// save  registers</span>\n    stp x4,x8,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!              <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x4,x0                        <span class=\"hljs-comment\">// save value</span>\n                                     <span class=\"hljs-comment\">// allocation place on the heap</span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">0</span>                         <span class=\"hljs-comment\">// allocation place heap</span>\n    <span class=\"hljs-keyword\">mov</span> x8,BRK                       <span class=\"hljs-comment\">// call system &#x27;brk&#x27;</span>\n    <span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">mov</span> x3,x0                        <span class=\"hljs-comment\">// save address heap for output string</span>\n    <span class=\"hljs-keyword\">add</span> x0,x0,NDlist_fin                <span class=\"hljs-comment\">// reservation place one element</span>\n    <span class=\"hljs-keyword\">mov</span> x8,BRK                       <span class=\"hljs-comment\">// call system &#x27;brk&#x27;</span>\n    <span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">#0</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,-<span class=\"hljs-number\">1</span>                        <span class=\"hljs-comment\">// allocation error</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">100</span>f\n    <span class=\"hljs-keyword\">mov</span> x0,x3\n    <span class=\"hljs-keyword\">str</span> x4,[x0,<span class=\"hljs-symbol\">#NDlist_value</span>]        <span class=\"hljs-comment\">// store value</span>\n    <span class=\"hljs-keyword\">mov</span> x2,<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">str</span> x2,[x0,<span class=\"hljs-symbol\">#NDlist_next</span>]         <span class=\"hljs-comment\">// store zero to pointer next</span>\n    <span class=\"hljs-keyword\">str</span> x2,[x0,<span class=\"hljs-symbol\">#NDlist_prev</span>]         <span class=\"hljs-comment\">// store zero to pointer previous</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x4,x8,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>                <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x2,x3,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>                <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>                <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                              <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/********************************************************/</span>\n<span class=\"hljs-comment\">/*        File Include fonctions                        */</span>\n<span class=\"hljs-comment\">/********************************************************/</span>\n<span class=\"hljs-comment\">/* for this file see task include a file in language AArch64 assembly */</span>\n<span class=\"hljs-symbol\">.include</span> <span class=\"hljs-string\">&quot;../includeARM64.inc&quot;</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Mertcan Davulcu",
      "email": "54983926+mertcandav@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Matthew",
      "email": "MatthewG25@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "JoaoVictorNascimento",
      "email": "joao_victorxy@hotmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
