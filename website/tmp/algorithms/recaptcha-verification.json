{
  "slug": "recaptcha-verification",
  "name": "Recaptcha Verification",
  "categories": ["webprogramming"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "web_programming/recaptcha_verification.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/web_programming/recaptcha_verification.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nRecaptcha is a free captcha service offered by Google in order to secure websites and\nforms.  At https://www.google.com/recaptcha/admin/create you can create new recaptcha\nkeys and see the keys that your have already created.\n* Keep in mind that recaptcha doesn&#x27;t work with localhost\nWhen you create a recaptcha key, your will get two separate keys: ClientKey &amp; SecretKey.\nClientKey should be kept in your site&#x27;s front end\nSecretKey should be kept in your site&#x27;s  back end\n\n# An example HTML login form with recaptcha tag is shown below\n\n    &lt;form action=&quot;&quot; method=&quot;post&quot;&gt;\n        &lt;h2 class=&quot;text-center&quot;&gt;Log in&lt;/h2&gt;\n        {% csrf_token %}\n        &lt;div class=&quot;form-group&quot;&gt;\n            &lt;input type=&quot;text&quot; name=&quot;username&quot; required=&quot;required&quot;&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;form-group&quot;&gt;\n            &lt;input type=&quot;password&quot; name=&quot;password&quot; required=&quot;required&quot;&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;form-group&quot;&gt;\n            &lt;button type=&quot;submit&quot;&gt;Log in&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;!-- Below is the recaptcha tag of html --&gt;\n        &lt;div class=&quot;g-recaptcha&quot; data-sitekey=&quot;ClientKey&quot;&gt;&lt;/div&gt;\n    &lt;/form&gt;\n\n    &lt;!-- Below is the recaptcha script to be kept inside html tag --&gt;\n    &lt;script src=&quot;https://www.google.com/recaptcha/api.js&quot; async defer&gt;&lt;/script&gt;\n\nBelow a Django function for the views.py file contains a login form for demonstrating\nrecaptcha verification.\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">import</span> requests\n\n<span class=\"hljs-keyword\">try</span>:\n    <span class=\"hljs-keyword\">from</span> django.contrib.auth <span class=\"hljs-keyword\">import</span> authenticate, login\n    <span class=\"hljs-keyword\">from</span> django.shortcuts <span class=\"hljs-keyword\">import</span> redirect, render\n<span class=\"hljs-keyword\">except</span> ImportError:\n    authenticate = login = render = redirect = <span class=\"hljs-built_in\">print</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">login_using_recaptcha</span>(<span class=\"hljs-params\">request</span>):\n    <span class=\"hljs-comment\"># Enter your recaptcha secret key here</span>\n    secret_key = <span class=\"hljs-string\">&quot;secretKey&quot;</span>\n    url = <span class=\"hljs-string\">&quot;https://www.google.com/recaptcha/api/siteverify&quot;</span>\n\n    <span class=\"hljs-comment\"># when method is not POST, direct user to login page</span>\n    <span class=\"hljs-keyword\">if</span> request.method != <span class=\"hljs-string\">&quot;POST&quot;</span>:\n        <span class=\"hljs-keyword\">return</span> render(request, <span class=\"hljs-string\">&quot;login.html&quot;</span>)\n\n    <span class=\"hljs-comment\"># from the frontend, get username, password, and client_key</span>\n    username = request.POST.get(<span class=\"hljs-string\">&quot;username&quot;</span>)\n    password = request.POST.get(<span class=\"hljs-string\">&quot;password&quot;</span>)\n    client_key = request.POST.get(<span class=\"hljs-string\">&quot;g-recaptcha-response&quot;</span>)\n\n    <span class=\"hljs-comment\"># post recaptcha response to Google&#x27;s recaptcha api</span>\n    response = requests.post(url, data={<span class=\"hljs-string\">&quot;secret&quot;</span>: secret_key, <span class=\"hljs-string\">&quot;response&quot;</span>: client_key})\n    <span class=\"hljs-comment\"># if the recaptcha api verified our keys</span>\n    <span class=\"hljs-keyword\">if</span> response.json().get(<span class=\"hljs-string\">&quot;success&quot;</span>, <span class=\"hljs-literal\">False</span>):\n        <span class=\"hljs-comment\"># authenticate the user</span>\n        user_in_database = authenticate(request, username=username, password=password)\n        <span class=\"hljs-keyword\">if</span> user_in_database:\n            login(request, user_in_database)\n            <span class=\"hljs-keyword\">return</span> redirect(<span class=\"hljs-string\">&quot;/your-webpage&quot;</span>)\n    <span class=\"hljs-keyword\">return</span> render(request, <span class=\"hljs-string\">&quot;login.html&quot;</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "Santosh Mohan Rajkumar",
      "email": "rajkumar.nits@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
