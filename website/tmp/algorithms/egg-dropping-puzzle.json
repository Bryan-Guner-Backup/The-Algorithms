{
  "slug": "egg-dropping-puzzle",
  "name": "Egg Dropping Puzzle",
  "categories": ["dynamicprogramming"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "dynamic_programming/egg_dropping_puzzle.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/dynamic_programming/egg_dropping_puzzle.cpp",
      "code": "<span class=\"hljs-comment\">/* Function to get minimun number of trials needed\n * in worst case with n eggs and k floors\n */</span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;climits&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">eggDrop</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> n, <span class=\"hljs-type\">int</span> k)</span> </span>{\n    <span class=\"hljs-type\">int</span> eggFloor[n + <span class=\"hljs-number\">1</span>][k + <span class=\"hljs-number\">1</span>];\n    <span class=\"hljs-type\">int</span> result;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++) {\n        eggFloor[i][<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">1</span>;  <span class=\"hljs-comment\">// n eggs..1 Floor</span>\n        eggFloor[i][<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">0</span>;  <span class=\"hljs-comment\">// n eggs..0 Floor</span>\n    }\n\n    <span class=\"hljs-comment\">// Only one egg available</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= k; j++) {\n        eggFloor[<span class=\"hljs-number\">1</span>][j] = j;\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">2</span>; i &lt;= n; i++) {\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">2</span>; j &lt;= k; j++) {\n            eggFloor[i][j] = INT_MAX;\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> x = <span class=\"hljs-number\">1</span>; x &lt;= j; x++) {\n                <span class=\"hljs-comment\">// 1+max(eggBreak[one less egg, lower floors],</span>\n                <span class=\"hljs-comment\">//       eggDoesntBreak[same # of eggs, upper floors]);</span>\n                result = <span class=\"hljs-number\">1</span> + <span class=\"hljs-built_in\">max</span>(eggFloor[i - <span class=\"hljs-number\">1</span>][x - <span class=\"hljs-number\">1</span>], eggFloor[i][j - x]);\n                <span class=\"hljs-keyword\">if</span> (result &lt; eggFloor[i][j])\n                    eggFloor[i][j] = result;\n            }\n        }\n    }\n\n    <span class=\"hljs-keyword\">return</span> eggFloor[n][k];\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-type\">int</span> n, k;\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter number of eggs and floors: &quot;</span>;\n    cin &gt;&gt; n &gt;&gt; k;\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;Minimum number of trials in worst case: &quot;</span> &lt;&lt; <span class=\"hljs-built_in\">eggDrop</span>(n, k) &lt;&lt; endl;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "Pallavi Chugh",
      "email": "pallavichugh2309@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
