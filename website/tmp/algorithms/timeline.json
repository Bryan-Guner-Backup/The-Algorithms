{
  "slug": "timeline",
  "name": "Timeline",
  "categories": ["datastructures", "linkedlist"],
  "body": {},
  "implementations": {
    "c-sharp": {
      "dir": "DataStructures/Timeline.cs",
      "url": "https://github.com/TheAlgorithms/C-Sharp/blob/master/DataStructures/Timeline.cs",
      "code": "<span class=\"hljs-comment\">/*\n    Author: Lorenzo Lotti\n    Name: Timeline (DataStructures.Timeline&lt;TValue&gt;)\n    Type: Data structure (class)\n    Description: A collection of dates/times and values sorted by dates/times easy to query.\n    Usage:\n        this data structure can be used to represent an ordered series of dates or times with which to associate values.\n        An example is a chronology of events:\n            306: Constantine is the new emperor,\n            312: Battle of the Milvian Bridge,\n            313: Edict of Milan,\n            330: Constantine move the capital to Constantinople.\n*/</span>\n\n<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.Linq;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">DataStructures</span>\n{\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     A collection of <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> and <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> sorted by <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> field.</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;typeparam name=&quot;TValue&quot;&gt;</span>Value associated with a <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span>.<span class=\"hljs-doctag\">&lt;/typeparam&gt;</span></span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Timeline</span>&lt;<span class=\"hljs-title\">TValue</span>&gt; :\n        <span class=\"hljs-title\">ICollection</span>&lt;(<span class=\"hljs-title\">DateTime</span> <span class=\"hljs-title\">Time</span>, <span class=\"hljs-title\">TValue</span> <span class=\"hljs-title\">Value</span>)&gt;,\n        <span class=\"hljs-title\">IEquatable</span>&lt;<span class=\"hljs-title\">Timeline</span>&lt;<span class=\"hljs-title\">TValue</span>&gt;&gt;\n    {\n        <span class=\"hljs-keyword\">private</span> List&lt;(DateTime Time, TValue Value)&gt; timeline = <span class=\"hljs-keyword\">new</span>();\n\n        <span class=\"hljs-comment\">// todo: improve performance and consider removing unnecessary methods</span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Timeline</span>(<span class=\"hljs-params\"></span>)</span> =&gt;\n            timeline = <span class=\"hljs-keyword\">new</span> List&lt;(DateTime, TValue)&gt;();\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Timeline</span>(<span class=\"hljs-params\">DateTime time, TValue <span class=\"hljs-keyword\">value</span></span>)</span> =&gt; timeline = <span class=\"hljs-keyword\">new</span> List&lt;(DateTime, TValue)&gt; { (time, <span class=\"hljs-keyword\">value</span>) };\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Timeline</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> TValue[] <span class=\"hljs-keyword\">value</span></span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> now = DateTime.Now;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> v <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">value</span>)\n            {\n                timeline.Add((now, v));\n            }\n        }\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Timeline</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> (DateTime, TValue</span>)[] timeline)</span>\n        {\n            <span class=\"hljs-keyword\">this</span>.timeline = timeline.ToList();\n            <span class=\"hljs-keyword\">this</span>.timeline = <span class=\"hljs-keyword\">this</span>.timeline.OrderBy(pair =&gt; pair.Time).ToList();\n        }\n\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> TimesCount =&gt; GetAllTimes().Length;\n\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> ValuesCount =&gt; GetAllValues().Length;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all values associated with <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;time&quot;&gt;</span>Time to get values for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Values associated with <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> TValue[] <span class=\"hljs-keyword\">this</span>[DateTime time]\n        {\n            <span class=\"hljs-keyword\">get</span> =&gt; GetValuesByTime(time);\n            <span class=\"hljs-keyword\">set</span>\n            {\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; Count; i++)\n                {\n                    <span class=\"hljs-keyword\">if</span> (timeline[i].Time == time)\n                    {\n                        timeline.RemoveAt(i);\n                    }\n                }\n\n                <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> v <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">value</span>)\n                {\n                    Add(time, v);\n                }\n            }\n        }\n\n        <span class=\"hljs-built_in\">bool</span> ICollection&lt;(DateTime Time, TValue Value)&gt;.IsReadOnly =&gt; <span class=\"hljs-literal\">false</span>;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets the count of pairs.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> Count =&gt; timeline.Count;\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Clear</span>(<span class=\"hljs-params\"></span>)</span> =&gt; timeline.Clear();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Copy a value to an array.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;array&quot;&gt;</span>Destination array.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;arrayIndex&quot;&gt;</span>The start index.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">CopyTo</span>(<span class=\"hljs-params\">(DateTime, TValue</span>)[] array, <span class=\"hljs-built_in\">int</span> arrayIndex)</span>\n        {\n            timeline.CopyTo(array, arrayIndex);\n        }\n\n        <span class=\"hljs-keyword\">void</span> ICollection&lt;(DateTime Time, TValue Value)&gt;.Add((DateTime Time, TValue Value) item) =&gt;\n            Add(item.Time, item.Value);\n\n        <span class=\"hljs-built_in\">bool</span> ICollection&lt;(DateTime Time, TValue Value)&gt;.Contains((DateTime Time, TValue Value) item) =&gt;\n            Contains(item.Time, item.Value);\n\n        <span class=\"hljs-built_in\">bool</span> ICollection&lt;(DateTime Time, TValue Value)&gt;.Remove((DateTime Time, TValue Value) item) =&gt;\n            Remove(item.Time, item.Value);\n\n        IEnumerator IEnumerable.GetEnumerator() =&gt; timeline.GetEnumerator();\n\n        IEnumerator&lt;(DateTime Time, TValue Value)&gt; IEnumerable&lt;(DateTime Time, TValue Value)&gt;.GetEnumerator() =&gt;\n            timeline.GetEnumerator();\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Equals</span>(<span class=\"hljs-params\">Timeline&lt;TValue&gt;? other</span>)</span> =&gt; other <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span> &amp;&amp; <span class=\"hljs-keyword\">this</span> == other;\n\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-keyword\">operator</span> ==(Timeline&lt;TValue&gt; left, Timeline&lt;TValue&gt; right)\n        {\n            <span class=\"hljs-keyword\">var</span> leftArray = left.ToArray();\n            <span class=\"hljs-keyword\">var</span> rightArray = right.ToArray();\n            <span class=\"hljs-keyword\">if</span> (leftArray.Length == rightArray.Length)\n            {\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; leftArray.Length; i++)\n                {\n                    <span class=\"hljs-keyword\">if</span> (leftArray[i].Time != rightArray[i].Time &amp;&amp; !leftArray[i].Value!.Equals(rightArray[i].Value))\n                    {\n                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n                    }\n                }\n\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n            }\n\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n        }\n\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-keyword\">operator</span> !=(Timeline&lt;TValue&gt; left, Timeline&lt;TValue&gt; right) =&gt; !(left == right);\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> of the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DateTime[] <span class=\"hljs-title\">GetAllTimes</span>(<span class=\"hljs-params\"></span>)</span> =&gt; timeline.Select(t =&gt; t.Time).Distinct().ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> values of the timeline that have this <span class=\"hljs-doctag\">&lt;paramref name=&quot;value&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DateTime[] <span class=\"hljs-title\">GetTimesByValue</span>(<span class=\"hljs-params\">TValue <span class=\"hljs-keyword\">value</span></span>)</span> =&gt;\n            timeline.Where(pair =&gt; pair.Value!.Equals(<span class=\"hljs-keyword\">value</span>)).Select(pair =&gt; pair.Time).ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> before <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DateTime[] <span class=\"hljs-title\">GetTimesBefore</span>(<span class=\"hljs-params\">DateTime time</span>)</span> =&gt; GetAllTimes().Where(t =&gt; t &lt; time).OrderBy(t =&gt; t).ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> after <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DateTime[] <span class=\"hljs-title\">GetTimesAfter</span>(<span class=\"hljs-params\">DateTime time</span>)</span> =&gt; GetAllTimes().Where(t =&gt; t &gt; time).OrderBy(t =&gt; t).ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> of the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> TValue[] <span class=\"hljs-title\">GetAllValues</span>(<span class=\"hljs-params\"></span>)</span> =&gt; timeline.Select(pair =&gt; pair.Value).ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> associated with <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> TValue[] <span class=\"hljs-title\">GetValuesByTime</span>(<span class=\"hljs-params\">DateTime time</span>)</span> =&gt;\n            timeline.Where(pair =&gt; pair.Time == time).Select(pair =&gt; pair.Value).ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> before <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesBefore</span>(<span class=\"hljs-params\">DateTime time</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span>\n                <span class=\"hljs-keyword\">where</span> pair.Time &lt; time\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> before <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesAfter</span>(<span class=\"hljs-params\">DateTime time</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span>\n                <span class=\"hljs-keyword\">where</span> pair.Time &gt; time\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified millisecond.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;millisecond&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByMillisecond</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> millisecond</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.Millisecond == millisecond\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified second.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;second&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesBySecond</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> second</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.Second == second\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified minute.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;minute&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByMinute</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> minute</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.Minute == minute\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified hour.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;hour&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByHour</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> hour</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.Hour == hour\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified day.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;day&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByDay</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> day</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.Day == day\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified time of the day.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;timeOfDay&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByTimeOfDay</span>(<span class=\"hljs-params\">TimeSpan timeOfDay</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.TimeOfDay == timeOfDay\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified day of the week.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;dayOfWeek&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByDayOfWeek</span>(<span class=\"hljs-params\">DayOfWeek dayOfWeek</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.DayOfWeek == dayOfWeek\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified day of the year.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;dayOfYear&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByDayOfYear</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> dayOfYear</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.DayOfYear == dayOfYear\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified month.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;month&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByMonth</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> month</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.Month == month\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified year.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;year&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByYear</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> year</span>)</span> =&gt;\n            <span class=\"hljs-keyword\">new</span>((<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                <span class=\"hljs-keyword\">where</span> pair.Time.Year == year\n                <span class=\"hljs-keyword\">select</span> pair).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Add a <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> and a <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> to the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Add</span>(<span class=\"hljs-params\">DateTime time, TValue <span class=\"hljs-keyword\">value</span></span>)</span>\n        {\n            timeline.Add((time, <span class=\"hljs-keyword\">value</span>));\n            timeline = timeline.OrderBy(pair =&gt; pair.Time).ToList();\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Add a set of <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> and <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> to the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Add</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> (DateTime, TValue</span>)[] timeline)</span>\n        {\n            <span class=\"hljs-keyword\">this</span>.timeline.AddRange(timeline);\n            <span class=\"hljs-keyword\">this</span>.timeline = <span class=\"hljs-keyword\">this</span>.timeline.OrderBy(pair =&gt; pair.Time).ToList();\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Add an existing timeline to this timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Add</span>(<span class=\"hljs-params\">Timeline&lt;TValue&gt; timeline</span>)</span>\n        {\n            Add(timeline.ToArray());\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Add a <span class=\"hljs-doctag\">&lt;paramref name=&quot;value&quot; /&gt;</span> associated with <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime.Now&quot; /&gt;</span> to the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">AddNow</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> TValue[] <span class=\"hljs-keyword\">value</span></span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> now = DateTime.Now;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> v <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">value</span>)\n            {\n                Add(now, v);\n            }\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Returns true if the timeline contains this value pair.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Contains</span>(<span class=\"hljs-params\">DateTime time, TValue <span class=\"hljs-keyword\">value</span></span>)</span> =&gt; timeline.Contains((time, <span class=\"hljs-keyword\">value</span>));\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Returns true if the timeline contains this set of value pairs.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Contains</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> (DateTime, TValue</span>)[] timeline)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> (time, <span class=\"hljs-keyword\">value</span>) <span class=\"hljs-keyword\">in</span> timeline)\n            {\n                result &amp;= Contains(time, <span class=\"hljs-keyword\">value</span>);\n            }\n\n            <span class=\"hljs-keyword\">return</span> result;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Returns true if this timeline contains an existing timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Contains</span>(<span class=\"hljs-params\">Timeline&lt;TValue&gt; timeline</span>)</span> =&gt; Contains(timeline.ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Returns true if the timeline constains <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">ContainsTime</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> DateTime[] time</span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> <span class=\"hljs-keyword\">value</span> <span class=\"hljs-keyword\">in</span> time)\n            {\n                result &amp;= GetAllTimes().Contains(<span class=\"hljs-keyword\">value</span>);\n            }\n\n            <span class=\"hljs-keyword\">return</span> result;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Returns true if the timeline constains <span class=\"hljs-doctag\">&lt;paramref name=&quot;value&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">ContainsValue</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> TValue[] <span class=\"hljs-keyword\">value</span></span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> v <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">value</span>)\n            {\n                result &amp;= GetAllValues().Contains(v);\n            }\n\n            <span class=\"hljs-keyword\">return</span> result;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove a value pair from the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Returns true if the operation completed successfully.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Remove</span>(<span class=\"hljs-params\">DateTime time, TValue <span class=\"hljs-keyword\">value</span></span>)</span> =&gt; timeline.Remove((time, <span class=\"hljs-keyword\">value</span>));\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove a set of value pairs from the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Returns true if the operation completed successfully.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Remove</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> (DateTime, TValue</span>)[] timeline)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-literal\">false</span>;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> (time, <span class=\"hljs-keyword\">value</span>) <span class=\"hljs-keyword\">in</span> timeline)\n            {\n                result |= <span class=\"hljs-keyword\">this</span>.timeline.Remove((time, <span class=\"hljs-keyword\">value</span>));\n            }\n\n            <span class=\"hljs-keyword\">return</span> result;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove an existing timeline from this timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Returns true if the operation completed successfully.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Remove</span>(<span class=\"hljs-params\">Timeline&lt;TValue&gt; timeline</span>)</span> =&gt; Remove(timeline.ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove a value pair from the timeline if the time is equal to <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Returns true if the operation completed successfully.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">RemoveTime</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> DateTime[] time</span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-literal\">false</span>;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> <span class=\"hljs-keyword\">value</span> <span class=\"hljs-keyword\">in</span> time)\n            {\n                result |= GetAllTimes().Contains(<span class=\"hljs-keyword\">value</span>);\n            }\n\n            <span class=\"hljs-keyword\">if</span> (result)\n            {\n                timeline = (<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                    <span class=\"hljs-keyword\">where</span> !time.Contains(pair.Time)\n                    <span class=\"hljs-keyword\">select</span> pair).ToList();\n            }\n\n            <span class=\"hljs-keyword\">return</span> result;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove a value pair from the timeline if the value is equal to <span class=\"hljs-doctag\">&lt;paramref name=&quot;value&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Returns true if the operation completed successfully.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">RemoveValue</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> TValue[] <span class=\"hljs-keyword\">value</span></span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-literal\">false</span>;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> v <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">value</span>)\n            {\n                result |= GetAllValues().Contains(v);\n            }\n\n            <span class=\"hljs-keyword\">if</span> (result)\n            {\n                timeline = (<span class=\"hljs-keyword\">from</span> pair <span class=\"hljs-keyword\">in</span> timeline\n                    <span class=\"hljs-keyword\">where</span> !<span class=\"hljs-keyword\">value</span>.Contains(pair.Value)\n                    <span class=\"hljs-keyword\">select</span> pair).ToList();\n            }\n\n            <span class=\"hljs-keyword\">return</span> result;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Convert the timeline to an array.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> (DateTime Time, TValue Value)[] ToArray() =&gt; timeline.ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Convert the timeline to a list.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> IList&lt;(DateTime Time, TValue Value)&gt; ToList() =&gt; timeline;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Convert the timeline to a dictionary.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> IDictionary&lt;DateTime, TValue&gt; <span class=\"hljs-title\">ToDictionary</span>(<span class=\"hljs-params\"></span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> dictionary = <span class=\"hljs-keyword\">new</span> Dictionary&lt;DateTime, TValue&gt;();\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> (date, time) <span class=\"hljs-keyword\">in</span> timeline)\n            {\n                dictionary.Add(date, time);\n            }\n\n            <span class=\"hljs-keyword\">return</span> dictionary;\n        }\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Equals</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span>? obj</span>)</span> =&gt; obj <span class=\"hljs-keyword\">is</span> Timeline&lt;TValue&gt; timeline &amp;&amp; <span class=\"hljs-keyword\">this</span> == timeline;\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">GetHashCode</span>(<span class=\"hljs-params\"></span>)</span> =&gt; timeline.GetHashCode();\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Andrii Siriak",
      "email": "siryaka@gmail.com",
      "commits": 2
    },
    {
      "name": "LorenzoLotti",
      "email": "52128675+LorenzoLotti@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
