{
  "slug": "newton-forward-interpolation",
  "name": "Newton Forward Interpolation",
  "categories": ["numericalanalysis"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "arithmetic_analysis/newton_forward_interpolation.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/arithmetic_analysis/newton_forward_interpolation.py",
      "code": "<span class=\"hljs-comment\"># https://www.geeksforgeeks.org/newton-forward-backward-interpolation/</span>\n\n<span class=\"hljs-keyword\">import</span> math\n<span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">List</span>\n\n\n<span class=\"hljs-comment\"># for calculating u value</span>\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">ucal</span>(<span class=\"hljs-params\">u: <span class=\"hljs-built_in\">float</span>, p: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; ucal(1, 2)\n    0\n    &gt;&gt;&gt; ucal(1.1, 2)\n    0.11000000000000011\n    &gt;&gt;&gt; ucal(1.2, 2)\n    0.23999999999999994\n    &quot;&quot;&quot;</span>\n    temp = u\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, p):\n        temp = temp * (u - i)\n    <span class=\"hljs-keyword\">return</span> temp\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>() -&gt; <span class=\"hljs-literal\">None</span>:\n    n = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;enter the numbers of values: &quot;</span>))\n    y: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">float</span>]] = []\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):\n        y.append([])\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):\n            y[i].append(j)\n            y[i][j] = <span class=\"hljs-number\">0</span>\n\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;enter the values of parameters in a list: &quot;</span>)\n    x = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">input</span>().split()))\n\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;enter the values of corresponding parameters: &quot;</span>)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):\n        y[i][<span class=\"hljs-number\">0</span>] = <span class=\"hljs-built_in\">float</span>(<span class=\"hljs-built_in\">input</span>())\n\n    value = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;enter the value to interpolate: &quot;</span>))\n    u = (value - x[<span class=\"hljs-number\">0</span>]) / (x[<span class=\"hljs-number\">1</span>] - x[<span class=\"hljs-number\">0</span>])\n\n    <span class=\"hljs-comment\"># for calculating forward difference table</span>\n\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, n):\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n - i):\n            y[j][i] = y[j + <span class=\"hljs-number\">1</span>][i - <span class=\"hljs-number\">1</span>] - y[j][i - <span class=\"hljs-number\">1</span>]\n\n    summ = y[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>]\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, n):\n        summ += (ucal(u, i) * y[<span class=\"hljs-number\">0</span>][i]) / math.factorial(i)\n\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;the value at <span class=\"hljs-subst\">{value}</span> is <span class=\"hljs-subst\">{summ}</span>&quot;</span>)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    main()\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Dhruv Manilawala",
      "email": "dhruvmanila@gmail.com",
      "commits": 1
    },
    {
      "name": "GeorgeChambi",
      "email": "charalambous99@gmail.com",
      "commits": 1
    },
    {
      "name": "Anmol Jain",
      "email": "30307833+jainanmol123@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
