{
  "slug": "fractional-knapsack",
  "name": "Fractional Knapsack",
  "categories": ["dynamicprogramming"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "dynamic_programming/fractional_knapsack.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/dynamic_programming/fractional_knapsack.py",
      "code": "<span class=\"hljs-keyword\">from</span> bisect <span class=\"hljs-keyword\">import</span> bisect\n<span class=\"hljs-keyword\">from</span> itertools <span class=\"hljs-keyword\">import</span> accumulate\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">fracKnapsack</span>(<span class=\"hljs-params\">vl, wt, W, n</span>):\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; fracKnapsack([60, 100, 120], [10, 20, 30], 50, 3)\n    240.0\n    &quot;&quot;&quot;</span>\n\n    r = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">sorted</span>(<span class=\"hljs-built_in\">zip</span>(vl, wt), key=<span class=\"hljs-keyword\">lambda</span> x: x[<span class=\"hljs-number\">0</span>] / x[<span class=\"hljs-number\">1</span>], reverse=<span class=\"hljs-literal\">True</span>))\n    vl, wt = [i[<span class=\"hljs-number\">0</span>] <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> r], [i[<span class=\"hljs-number\">1</span>] <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> r]\n    acc = <span class=\"hljs-built_in\">list</span>(accumulate(wt))\n    k = bisect(acc, W)\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">if</span> k == <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">sum</span>(vl[:k]) + (W - acc[k - <span class=\"hljs-number\">1</span>]) * (vl[k]) / (wt[k])\n        <span class=\"hljs-keyword\">if</span> k != n\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">sum</span>(vl[:k])\n    )\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Ankur Chattopadhyay",
      "email": "39518771+chttrjeankr@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Jigyasa G",
      "email": "jigsgandhi97@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Srikumar Sastry",
      "email": "srikumarsastry1997@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
