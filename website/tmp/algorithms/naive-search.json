{
  "slug": "naive-search",
  "name": "Naive Search",
  "categories": ["searches", "patternsearch"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "searching/pattern_search/naive_search.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/searching/pattern_search/naive_search.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;string.h&gt;</span></span>\n\n<span class=\"hljs-comment\">/* Naive Pattern Search algorithm (brute force way) */</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">naive_search</span><span class=\"hljs-params\">(<span class=\"hljs-type\">char</span> *str, <span class=\"hljs-type\">char</span> *pattern)</span>\n{\n    <span class=\"hljs-type\">int</span> len_str = <span class=\"hljs-built_in\">strlen</span>(str);\n    <span class=\"hljs-type\">int</span> len_pat = <span class=\"hljs-built_in\">strlen</span>(pattern);\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;= len_str - len_pat; i++)\n    {\n        <span class=\"hljs-type\">int</span> j;\n        <span class=\"hljs-keyword\">for</span> (j = <span class=\"hljs-number\">0</span>; j &lt; len_pat; j++)\n        {\n            <span class=\"hljs-keyword\">if</span> (str[i + j] != pattern[j])\n                <span class=\"hljs-keyword\">break</span>;\n        }\n        <span class=\"hljs-keyword\">if</span> (j == len_pat)\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;--Pattern is found at: %d\\n&quot;</span>, i);\n    }\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-type\">char</span> str[] = <span class=\"hljs-string\">&quot;AABCAB12AFAABCABFFEGABCAB&quot;</span>;\n    <span class=\"hljs-type\">char</span> pat1[] = <span class=\"hljs-string\">&quot;ABCAB&quot;</span>;\n    <span class=\"hljs-type\">char</span> pat2[] = <span class=\"hljs-string\">&quot;FFF&quot;</span>; <span class=\"hljs-comment\">/* not found */</span>\n    <span class=\"hljs-type\">char</span> pat3[] = <span class=\"hljs-string\">&quot;CAB&quot;</span>;\n\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;String test: %s\\n&quot;</span>, str);\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Test1: search pattern %s\\n&quot;</span>, pat1);\n    naive_search(str, pat1);\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Test2: search pattern %s\\n&quot;</span>, pat2);\n    naive_search(str, pat2);\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Test3: search pattern %s\\n&quot;</span>, pat3);\n    naive_search(str, pat3);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "hai dang",
      "email": "haihoangdang91@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
