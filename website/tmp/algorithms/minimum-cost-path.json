{
  "slug": "minimum-cost-path",
  "name": "Minimum Cost Path",
  "categories": ["dynamicprogramming"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "dynamic_programming/minimum_cost_path.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/dynamic_programming/minimum_cost_path.py",
      "code": "<span class=\"hljs-comment\"># Youtube Explanation: https://www.youtube.com/watch?v=lBRtnuxg-gU</span>\n\n<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">minimum_cost_path</span>(<span class=\"hljs-params\">matrix: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Find the minimum cost traced by all possible paths from top left to bottom right in\n    a given matrix\n\n    &gt;&gt;&gt; minimum_cost_path([[2, 1], [3, 1], [4, 2]])\n    6\n\n    &gt;&gt;&gt; minimum_cost_path([[2, 1, 4], [2, 1, 3], [3, 2, 1]])\n    7\n    &quot;&quot;&quot;</span>\n\n    <span class=\"hljs-comment\"># preprocessing the first row</span>\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">len</span>(matrix[<span class=\"hljs-number\">0</span>])):\n        matrix[<span class=\"hljs-number\">0</span>][i] += matrix[<span class=\"hljs-number\">0</span>][i - <span class=\"hljs-number\">1</span>]\n\n    <span class=\"hljs-comment\"># preprocessing the first column</span>\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">len</span>(matrix)):\n        matrix[i][<span class=\"hljs-number\">0</span>] += matrix[i - <span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">0</span>]\n\n    <span class=\"hljs-comment\"># updating the path cost for current position</span>\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">len</span>(matrix)):\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">len</span>(matrix[<span class=\"hljs-number\">0</span>])):\n            matrix[i][j] += <span class=\"hljs-built_in\">min</span>(matrix[i - <span class=\"hljs-number\">1</span>][j], matrix[i][j - <span class=\"hljs-number\">1</span>])\n\n    <span class=\"hljs-keyword\">return</span> matrix[-<span class=\"hljs-number\">1</span>][-<span class=\"hljs-number\">1</span>]\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    },
    "javascript": {
      "dir": "Dynamic-Programming/MinimumCostPath.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Dynamic-Programming/MinimumCostPath.js",
      "code": "<span class=\"hljs-comment\">// Problem Statement =&gt; https://www.youtube.com/watch?v=lBRtnuxg-gU</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">minCostPath</span> = (<span class=\"hljs-params\">matrix</span>) =&gt; {\n  <span class=\"hljs-comment\">/*\n        Find the min cost path from top-left to bottom-right in matrix\n        &gt;&gt;&gt; minCostPath([[2, 1], [3, 1], [4, 2]])\n        &gt;&gt;&gt; 6\n    */</span>\n\n  <span class=\"hljs-keyword\">const</span> n = matrix.<span class=\"hljs-property\">length</span>\n  <span class=\"hljs-keyword\">const</span> m = matrix[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">length</span>\n\n  <span class=\"hljs-comment\">// moves[i][j] =&gt; minimum number of moves to reach cell i, j</span>\n  <span class=\"hljs-keyword\">const</span> moves = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span>(n)\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; moves.<span class=\"hljs-property\">length</span>; i++) moves[i] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span>(m)\n\n  <span class=\"hljs-comment\">// base conditions</span>\n  moves[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>] = matrix[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>] <span class=\"hljs-comment\">// to reach cell (0, 0) from (0, 0) is of no moves</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; m; i++) moves[<span class=\"hljs-number\">0</span>][i] = moves[<span class=\"hljs-number\">0</span>][i - <span class=\"hljs-number\">1</span>] + matrix[<span class=\"hljs-number\">0</span>][i]\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; n; i++) moves[i][<span class=\"hljs-number\">0</span>] = moves[i - <span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">0</span>] + matrix[i][<span class=\"hljs-number\">0</span>]\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; n; i++) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">1</span>; j &lt; m; j++) { moves[i][j] = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">min</span>(moves[i - <span class=\"hljs-number\">1</span>][j], moves[i][j - <span class=\"hljs-number\">1</span>]) + matrix[i][j] }\n  }\n\n  <span class=\"hljs-keyword\">return</span> moves[n - <span class=\"hljs-number\">1</span>][m - <span class=\"hljs-number\">1</span>]\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">main</span> = (<span class=\"hljs-params\"></span>) =&gt; {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(\n    <span class=\"hljs-title function_\">minCostPath</span>([\n      [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>],\n      [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>],\n      [<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>]\n    ])\n  )\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(\n    <span class=\"hljs-title function_\">minCostPath</span>([\n      [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>],\n      [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>],\n      [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>]\n    ])\n  )\n}\n\n<span class=\"hljs-title function_\">main</span>()\n"
    }
  },
  "contributors": [
    {
      "name": "vinayak",
      "email": "itssvinayak@gmail.com",
      "commits": 1
    },
    {
      "name": "Tapajyoti Bose",
      "email": "44058757+ruppysuppy@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "DhruvGheewala",
      "email": "dhruvgheewala.4g@gmail.com",
      "commits": 1
    },
    {
      "name": "Suhail Malik",
      "email": "devmsuhail@gmail.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
