{
  "slug": "hash-sdbm",
  "name": "Hash Sdbm",
  "categories": ["hashing"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "hash/hash_sdbm.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/hash/hash_sdbm.c",
      "code": "<span class=\"hljs-comment\">/**\n * @addtogroup hash Hash algorithms\n * @{\n * @file hash_sdbm.c\n * @author [Christian Bender](https://github.com/christianbender)\n * @brief [SDBM hash algorithm](http://www.cse.yorku.ca/~oz/hash.html)\n */</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;assert.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;inttypes.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n\n<span class=\"hljs-comment\">/**\n * @brief SDBM algorithm implementation\n *\n * @param s NULL terminated string to hash\n * @return 64-bit hash result\n */</span>\n<span class=\"hljs-type\">uint64_t</span> <span class=\"hljs-title function_\">sdbm</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-type\">char</span>* s)</span>\n{\n    <span class=\"hljs-type\">uint64_t</span> hash = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-type\">size_t</span> i = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">while</span> (s[i] != <span class=\"hljs-string\">&#x27;\\0&#x27;</span>)\n    {\n        hash = s[i] + (hash &lt;&lt; <span class=\"hljs-number\">6</span>) + (hash &lt;&lt; <span class=\"hljs-number\">16</span>) - hash;\n        i++;\n    }\n    <span class=\"hljs-keyword\">return</span> hash;\n}\n\n<span class=\"hljs-comment\">/**\n * @brief Test function for ::sdbm\n * \\returns None\n */</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">test_sdbm</span><span class=\"hljs-params\">()</span>\n{\n    assert(sdbm(<span class=\"hljs-string\">&quot;Hello World&quot;</span>) == <span class=\"hljs-number\">12881824461405877380U</span>);\n    assert(sdbm(<span class=\"hljs-string\">&quot;Hello World!&quot;</span>) == <span class=\"hljs-number\">7903571203300273309</span>);\n    assert(sdbm(<span class=\"hljs-string\">&quot;Hello world&quot;</span>) == <span class=\"hljs-number\">15154913742888948900U</span>);\n    assert(sdbm(<span class=\"hljs-string\">&quot;Hello world!&quot;</span>) == <span class=\"hljs-number\">15254999417003201661U</span>);\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Tests passed\\n&quot;</span>);\n}\n\n<span class=\"hljs-comment\">/** @} */</span>\n\n<span class=\"hljs-comment\">/** Main function */</span>\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\n{\n    test_sdbm();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
