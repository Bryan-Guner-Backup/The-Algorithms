{
  "slug": "lower-bound",
  "name": "Lower Bound",
  "categories": ["searches"],
  "body": {},
  "implementations": {
    "php": {
      "dir": "searches/lower_bound.php",
      "url": "https://github.com/TheAlgorithms/php/tree/master/searches/lower_bound.php",
      "code": "<span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@param</span> an array of integers\n * <span class=\"hljs-doctag\">@return</span> is array sorted in ascending\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">array_check</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">array</span> <span class=\"hljs-variable\">$arr</span></span>): <span class=\"hljs-title\">void</span></span>{\n    <span class=\"hljs-variable\">$len</span> = count(<span class=\"hljs-variable\">$arr</span>);\n    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$len</span> == <span class=\"hljs-number\">0</span>){\n        <span class=\"hljs-keyword\">return</span>;\n    }\n    <span class=\"hljs-keyword\">if</span>(!is_int(<span class=\"hljs-variable\">$arr</span>[<span class=\"hljs-number\">0</span>])){\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-built_in\">UnexpectedValueException</span>;\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-variable\">$i</span> = <span class=\"hljs-number\">1</span>; <span class=\"hljs-variable\">$i</span> &lt; <span class=\"hljs-variable\">$len</span>; <span class=\"hljs-variable\">$i</span>++){\n        <span class=\"hljs-comment\">// a sorted array is expected</span>\n        <span class=\"hljs-keyword\">if</span>(!is_int(<span class=\"hljs-variable\">$arr</span>[<span class=\"hljs-variable\">$i</span>]) &amp;&amp; <span class=\"hljs-variable\">$arr</span>[<span class=\"hljs-variable\">$i</span>] &lt; <span class=\"hljs-variable\">$arr</span>[<span class=\"hljs-variable\">$i</span>-<span class=\"hljs-number\">1</span>]){\n           <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-built_in\">UnexpectedValueException</span>;\n        }\n    }\n}\n\n\n<span class=\"hljs-comment\">/**\n * Lower Bound of an element is minimum index that an element would be placed \n * if it is added into that sorted array\n * \n * [C++ Lower Bound](http://www.cplusplus.com/reference/algorithm/lower_bound/)\n * \n * It is assumed that an integer array is provided\n * and the second parameter is also a integer\n * \n * <span class=\"hljs-doctag\">@param</span> array of integers\n * <span class=\"hljs-doctag\">@param</span> integer whose lower bound is to be found\n * \n * <span class=\"hljs-doctag\">@return</span> the index of lower bound of the given element\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">lower_bound</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">array</span> <span class=\"hljs-variable\">$arr</span>, <span class=\"hljs-keyword\">int</span> <span class=\"hljs-variable\">$elem</span></span>)</span>{\n    <span class=\"hljs-comment\">// array must be sorted</span>\n    <span class=\"hljs-comment\">// and all elemets must be integers</span>\n    array_check(<span class=\"hljs-variable\">$arr</span>);\n    <span class=\"hljs-variable\">$hi</span> = count(<span class=\"hljs-variable\">$arr</span>);\n    <span class=\"hljs-variable\">$lo</span> = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-variable\">$lo</span> &lt; <span class=\"hljs-variable\">$hi</span>){\n        <span class=\"hljs-variable\">$mid</span> = <span class=\"hljs-variable\">$lo</span> + floor((<span class=\"hljs-variable\">$hi</span> - <span class=\"hljs-variable\">$lo</span>)/<span class=\"hljs-number\">2</span>);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$arr</span>[<span class=\"hljs-variable\">$mid</span>] &lt; <span class=\"hljs-variable\">$elem</span>){\n            <span class=\"hljs-variable\">$lo</span> = <span class=\"hljs-variable\">$mid</span>+<span class=\"hljs-number\">1</span>;\n        }<span class=\"hljs-keyword\">else</span>{\n            <span class=\"hljs-variable\">$hi</span> = <span class=\"hljs-variable\">$mid</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$lo</span>;\n}\n\n<span class=\"hljs-comment\">// test code</span>\n<span class=\"hljs-variable\">$arr</span> = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-variable\">$i</span> = lower_bound(<span class=\"hljs-variable\">$arr</span>, <span class=\"hljs-number\">3</span>);\n<span class=\"hljs-keyword\">print</span> <span class=\"hljs-variable\">$i</span>;"
    }
  },
  "contributors": [
    {
      "name": "lakhan_nad",
      "email": "lakhannad1999@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
