{
  "slug": "temparature-conversion",
  "name": "Temparature Conversion",
  "categories": ["conversions"],
  "body": {},
  "implementations": {
    "julia": {
      "dir": "src/conversions/temparature_conversion.jl",
      "url": "https://github.com/TheAlgorithms/julia/tree/master/src/conversions/temparature_conversion.jl",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\ncelsius_to_fahrenheit(celsius, ndigits::Int = 2)\n\nConverts celsius to fahrenheit and round to 2 decimal places\n\n# Example\n\n```julia\ncelsius_to_fahrenheit(273.354, 3) == 524.037  # returns true\ncelsius_to_fahrenheit(273.354, 0) == 524.0    # returns true\ncelsius_to_fahrenheit(-40.0) == -40.0         # returns true\ncelsius_to_fahrenheit(-20.0) == -4.0          # returns true\ncelsius_to_fahrenheit(0) == 32.0              # returns true\ncelsius_to_fahrenheit(20) == 68.0             # returns true\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> celsius_to_fahrenheit(celsius, ndigits::<span class=\"hljs-built_in\">Int</span> = <span class=\"hljs-number\">2</span>)\n    <span class=\"hljs-keyword\">return</span> round((float(celsius) * <span class=\"hljs-number\">1.8</span>) + <span class=\"hljs-number\">32.0</span>; digits = ndigits)\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\nfunction celsius_to_kelvin(celsius, ndigits::Int = 2)\n\nConverts celsius to kelvin and round to 2 decimal places\n\n# Example\n\n```julia\ncelsius_to_kelvin(273.354, 3) == 546.504    # returns true\ncelsius_to_kelvin(273.354, 0) == 547.0      # returns true\ncelsius_to_kelvin(0.0) == 273.15            # returns true\ncelsius_to_kelvin(20.0) == 293.15           # returns true\n```\n\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> celsius_to_kelvin(celsius, ndigits::<span class=\"hljs-built_in\">Int</span> = <span class=\"hljs-number\">2</span>)\n\n    <span class=\"hljs-keyword\">return</span> round(float(celsius) + <span class=\"hljs-number\">273.15</span>; digits = ndigits)\n<span class=\"hljs-keyword\">end</span>\n\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\nfahrenheit_to_celsius(fahrenheit, ndigits::Int = 2)\n\nConverts fahrenheit to celsius and round to 2 decimal places\n\n# Example\n\n```julia\nfahrenheit_to_celsius(273.354, 3) == 134.086 # returns true\nfahrenheit_to_celsius(273.354, 0) == 134.0   # returns true\nfahrenheit_to_celsius(0.0) == -17.78         # returns true\nfahrenheit_to_celsius(20.0) == -6.67         # returns true\nfahrenheit_to_celsius(40.0) == 4.44          # returns true\nfahrenheit_to_celsius(60.0) == 15.56         # returns true\nfahrenheit_to_celsius(80.0) == 26.67         # returns true\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> fahrenheit_to_celsius(fahrenheit, ndigits::<span class=\"hljs-built_in\">Int</span> = <span class=\"hljs-number\">2</span>)\n    <span class=\"hljs-keyword\">return</span> round((float(fahrenheit) - <span class=\"hljs-number\">32.0</span>) * <span class=\"hljs-number\">5</span> / <span class=\"hljs-number\">9</span>; digits = ndigits)\n<span class=\"hljs-keyword\">end</span>\n\n\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\nfahrenheit_to_kelvin(fahrenheit, ndigits::Int = 2)\n\nConverts fahrenheit to kelvin and round to 2 decimal places\n\n# Example\n\n```julia\nfahrenheit_to_kelvin(273.354, 3) == 407.236 # returns true\nfahrenheit_to_kelvin(273.354, 0) == 407.0   # returns true\nfahrenheit_to_kelvin(0) == 255.37           # returns true\nfahrenheit_to_kelvin(20.0) == 266.48        # returns true\nfahrenheit_to_kelvin(40.0) == 277.59        # returns true\nfahrenheit_to_kelvin(60.0) == 288.71        # returns true\nfahrenheit_to_kelvin(80.0) == 299.82        # returns true\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> fahrenheit_to_kelvin(fahrenheit, ndigits::<span class=\"hljs-built_in\">Int</span> = <span class=\"hljs-number\">2</span>)\n    round(((float(fahrenheit) - <span class=\"hljs-number\">32.0</span>) * <span class=\"hljs-number\">5</span> / <span class=\"hljs-number\">9</span>) + <span class=\"hljs-number\">273.15</span>; digits = ndigits)\n<span class=\"hljs-keyword\">end</span>\n\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\nfunction kelvin_to_celsius(kelvin, ndigits::Int = 2)\n\nConverts kelvin to celsius and round to 2 decimal places\n\n# Example\n\n```julia\nkelvin_to_celsius(273.354, 3) == 0.204   # returns true\nkelvin_to_celsius(273.354, 0) == 0.0     # returns true\nkelvin_to_celsius(273.15) == 0.0         # returns true\nkelvin_to_celsius(300) == 26.85          # returns true\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> kelvin_to_celsius(kelvin, ndigits::<span class=\"hljs-built_in\">Int</span> = <span class=\"hljs-number\">2</span>)\n    <span class=\"hljs-keyword\">return</span> round(float(kelvin) - <span class=\"hljs-number\">273.15</span>; digits = ndigits)\n<span class=\"hljs-keyword\">end</span>\n\n\n\n<span class=\"hljs-string\">&quot;&quot;&quot;\nfunction kelvin_to_fahrenheit(kelvin, ndigits::Int = 2)\n\nConverts kelvin to fahrenheit and round to 2 decimal places\n\n# Example\n\n```julia\nkelvin_to_fahrenheit(273.354, 3) == 32.367  # returns true\nkelvin_to_fahrenheit(273.354, 0) == 32.0    # returns true\nkelvin_to_fahrenheit(273.15) == 32.0        # returns true\nkelvin_to_fahrenheit(300) == 80.33          # returns true\n```\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> kelvin_to_fahrenheit(kelvin, ndigits::<span class=\"hljs-built_in\">Int</span> = <span class=\"hljs-number\">2</span>)\n    round(((float(kelvin) - <span class=\"hljs-number\">273.15</span>) * <span class=\"hljs-number\">1.8</span>) + <span class=\"hljs-number\">32.0</span>; digits = ndigits)\n<span class=\"hljs-keyword\">end</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Rratic",
      "email": "Rratic@163.com",
      "commits": 1
    },
    {
      "name": "Ashwani Rathee",
      "email": "ab669522@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
