{
  "slug": "addition-rule",
  "name": "Addition Rule",
  "categories": ["probability"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "probability/addition_rule.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/probability/addition_rule.cpp",
      "code": "<span class=\"hljs-comment\">/**\n * @file\n * @brief Addition rule of probabilities\n */</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-comment\">/**\n * calculates the probability of the independent events A or B for independent\n * events\n * \\parama [in] A probability of event A\n * \\parama [in] B probability of event B\n * \\returns probability of A and B\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title\">addition_rule_independent</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span> A, <span class=\"hljs-type\">double</span> B)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> (A + B) - (A * B);\n}\n\n<span class=\"hljs-comment\">/** Calculates the probability of the events A or B for dependent events\n * note that if value of B_given_A is unknown, use chainrule to find it\n * \\parama [in] A probability of event A\n * \\parama [in] B probability of event B\n * \\parama [in] B_given_A probability of event B condition A\n * \\returns probability of A and B\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title\">addition_rule_dependent</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span> A, <span class=\"hljs-type\">double</span> B, <span class=\"hljs-type\">double</span> B_given_A)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> (A + B) - (A * B_given_A);\n}\n\n<span class=\"hljs-comment\">/** Main function */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-type\">double</span> A = <span class=\"hljs-number\">0.5</span>;\n    <span class=\"hljs-type\">double</span> B = <span class=\"hljs-number\">0.25</span>;\n    <span class=\"hljs-type\">double</span> B_given_A = <span class=\"hljs-number\">0.05</span>;\n\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;independent P(A or B) = &quot;</span> &lt;&lt; <span class=\"hljs-built_in\">addition_rule_independent</span>(A, B)\n              &lt;&lt; std::endl;\n\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;dependent P(A or B) = &quot;</span>\n              &lt;&lt; <span class=\"hljs-built_in\">addition_rule_dependent</span>(A, B, B_given_A) &lt;&lt; std::endl;\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Dylan Robertson",
      "email": "31269647+RobotRage@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
