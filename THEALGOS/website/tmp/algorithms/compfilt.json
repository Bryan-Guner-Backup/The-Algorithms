{
  "slug": "compfilt",
  "name": "CompFilt",
  "categories": ["robotics", "complementaryfilter"],
  "body": {},
  "implementations": {
    "haskell": {
      "dir": "src/Robotics/ComplementaryFilter/CompFilt.hs",
      "url": "https://github.com/TheAlgorithms/haskell/tree/master/src/Robotics/ComplementaryFilter/CompFilt.hs",
      "code": "<span class=\"hljs-keyword\">module</span> Robotics.ComplementaryFilter.CompFilt <span class=\"hljs-keyword\">where</span>\n\n<span class=\"hljs-keyword\">import</span> Robotics.ComplementaryFilter.TestData\n\n<span class=\"hljs-comment\">-- Utility functions to extract X, Y, Z components from 3D vector.</span>\n<span class=\"hljs-title\">getX</span> :: (a, a, a) -&gt; a\n<span class=\"hljs-title\">getX</span> (x,_,_) = x\n\n<span class=\"hljs-title\">getY</span> :: (a, a, a) -&gt; a\n<span class=\"hljs-title\">getY</span> (_,y,_) = y\n\n<span class=\"hljs-title\">getZ</span> :: (a, a, a) -&gt; a\n<span class=\"hljs-title\">getZ</span> (_,_,z) = z\n\n<span class=\"hljs-comment\">-- Extract accel data from list of floats</span>\n<span class=\"hljs-title\">getAccel</span> :: (<span class=\"hljs-type\">RealFloat</span> a) =&gt; [a] -&gt; (a, a, a)\n<span class=\"hljs-title\">getAccel</span> [] = (<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>)\n<span class=\"hljs-title\">getAccel</span> s = <span class=\"hljs-keyword\">if</span> length s &gt;= <span class=\"hljs-number\">6</span>\n                <span class=\"hljs-keyword\">then</span> (s!!<span class=\"hljs-number\">0</span>, s!!<span class=\"hljs-number\">1</span>, s!!<span class=\"hljs-number\">2</span>)\n                <span class=\"hljs-keyword\">else</span> (<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>)\n\n<span class=\"hljs-comment\">-- Extract gyro data from a lsit of floats</span>\n<span class=\"hljs-title\">getGyro</span> :: (<span class=\"hljs-type\">RealFloat</span> a) =&gt; [a] -&gt; (a, a, a)\n<span class=\"hljs-title\">getGyro</span> s = <span class=\"hljs-keyword\">if</span> length s &gt;= <span class=\"hljs-number\">6</span> \n               <span class=\"hljs-keyword\">then</span> (s!!<span class=\"hljs-number\">3</span>, s!!<span class=\"hljs-number\">4</span>, s!!<span class=\"hljs-number\">5</span>)\n               <span class=\"hljs-keyword\">else</span> (<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>)\n\n<span class=\"hljs-comment\">-- Function to calculate tilt angle from accelerometer reading.</span>\n<span class=\"hljs-comment\">-- By default the tilt measurement is made around the Z axis.</span>\n<span class=\"hljs-title\">accelTiltAngle</span> :: (<span class=\"hljs-type\">RealFloat</span> a) =&gt; (a, a, a) -&gt; a\n<span class=\"hljs-title\">accelTiltAngle</span> (_, y, z) = (atan2 z y)*<span class=\"hljs-number\">180.0</span>/pi\n\n\n<span class=\"hljs-comment\">-- Complementary filter, uses the scanl pattern.</span>\n<span class=\"hljs-title\">compFilt</span> :: (<span class=\"hljs-type\">RealFloat</span> a) =&gt; [a] -&gt; [a] -&gt; a -&gt; a -&gt; [a]\n<span class=\"hljs-title\">compFilt</span> ωs θ_accs α δt = scanl (\\θ (ω, θ_acc) -&gt; α*(θ + ω*δt) + (<span class=\"hljs-number\">1</span>-α)*θ_acc) \n                                (head θ_accs)\n                                (zip ωs θ_accs)\n\n<span class=\"hljs-comment\">-- Calculate tilts</span>\n<span class=\"hljs-title\">calcTilt</span> :: (<span class=\"hljs-type\">RealFloat</span> a) =&gt; [(a, a, a)] -&gt; [(a, a, a)] -&gt; a -&gt; a -&gt; [a]\n<span class=\"hljs-title\">calcTilt</span> accel gyro α δt = compFilt (map getX gyro) (map accelTiltAngle accel) α δt\n\n<span class=\"hljs-title\">main</span> = <span class=\"hljs-keyword\">do</span>\n    <span class=\"hljs-keyword\">let</span> accels = map getAccel testData\n    <span class=\"hljs-keyword\">let</span> gyros  = map getGyro testData\n    <span class=\"hljs-keyword\">let</span> tilts = calcTilt accels gyros <span class=\"hljs-number\">0.95</span> <span class=\"hljs-number\">0.01</span>\n    print tilts"
    }
  },
  "contributors": [
    {
      "name": "Ashwin Narayan",
      "email": "ashwinnarayan1994@gmail.com",
      "commits": 1
    },
    {
      "name": "Artur Parowicz",
      "email": "arturparowicz@gmail,com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
