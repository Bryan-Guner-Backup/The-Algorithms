{
  "slug": "sentinel-linear-search",
  "name": "Sentinel Linear Search",
  "categories": ["searches"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "searches/sentinel_linear_search.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/searches/sentinel_linear_search.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nThis is pure Python implementation of sentinel linear search algorithm\n\nFor doctests run following command:\npython -m doctest -v sentinel_linear_search.py\nor\npython3 -m doctest -v sentinel_linear_search.py\n\nFor manual testing run:\npython sentinel_linear_search.py\n&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">sentinel_linear_search</span>(<span class=\"hljs-params\">sequence, target</span>):\n    <span class=\"hljs-string\">&quot;&quot;&quot;Pure implementation of sentinel linear search algorithm in Python\n\n    :param sequence: some sequence with comparable items\n    :param target: item value to search\n    :return: index of found item or None if item is not found\n\n    Examples:\n    &gt;&gt;&gt; sentinel_linear_search([0, 5, 7, 10, 15], 0)\n    0\n\n    &gt;&gt;&gt; sentinel_linear_search([0, 5, 7, 10, 15], 15)\n    4\n\n    &gt;&gt;&gt; sentinel_linear_search([0, 5, 7, 10, 15], 5)\n    1\n\n    &gt;&gt;&gt; sentinel_linear_search([0, 5, 7, 10, 15], 6)\n\n    &quot;&quot;&quot;</span>\n    sequence.append(target)\n\n    index = <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">while</span> sequence[index] != target:\n        index += <span class=\"hljs-number\">1</span>\n\n    sequence.pop()\n\n    <span class=\"hljs-keyword\">if</span> index == <span class=\"hljs-built_in\">len</span>(sequence):\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">None</span>\n\n    <span class=\"hljs-keyword\">return</span> index\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    user_input = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter numbers separated by comma:\\n&quot;</span>).strip()\n    sequence = [<span class=\"hljs-built_in\">int</span>(item) <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> user_input.split(<span class=\"hljs-string\">&quot;,&quot;</span>)]\n\n    target_input = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter a single number to be found in the list:\\n&quot;</span>)\n    target = <span class=\"hljs-built_in\">int</span>(target_input)\n    result = sentinel_linear_search(sequence, target)\n    <span class=\"hljs-keyword\">if</span> result <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">None</span>:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{target}</span> found at positions: <span class=\"hljs-subst\">{result}</span>&quot;</span>)\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Not found&quot;</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "matkosoric",
      "email": "soric.matko@gmail.com",
      "commits": 1
    },
    {
      "name": "GeorgeChambi",
      "email": "charalambous99@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Kelvin Salton do Prado",
      "email": "kelvinpfw@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
