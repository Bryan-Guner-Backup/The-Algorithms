{
  "slug": "power",
  "name": "Power",
  "categories": ["divideandconquer"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "divide_and_conquer/power.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/divide_and_conquer/power.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">actual_power</span>(<span class=\"hljs-params\">a: <span class=\"hljs-built_in\">int</span>, b: <span class=\"hljs-built_in\">int</span></span>):\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Function using divide and conquer to calculate a^b.\n    It only works for integer a,b.\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> b == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">if</span> (b % <span class=\"hljs-number\">2</span>) == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> actual_power(a, <span class=\"hljs-built_in\">int</span>(b / <span class=\"hljs-number\">2</span>)) * actual_power(a, <span class=\"hljs-built_in\">int</span>(b / <span class=\"hljs-number\">2</span>))\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-keyword\">return</span> a * actual_power(a, <span class=\"hljs-built_in\">int</span>(b / <span class=\"hljs-number\">2</span>)) * actual_power(a, <span class=\"hljs-built_in\">int</span>(b / <span class=\"hljs-number\">2</span>))\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">power</span>(<span class=\"hljs-params\">a: <span class=\"hljs-built_in\">int</span>, b: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; power(4,6)\n    4096\n    &gt;&gt;&gt; power(2,3)\n    8\n    &gt;&gt;&gt; power(-2,3)\n    -8\n    &gt;&gt;&gt; power(2,-3)\n    0.125\n    &gt;&gt;&gt; power(-2,-3)\n    -0.125\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> b &lt; <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> / actual_power(a, b)\n    <span class=\"hljs-keyword\">return</span> actual_power(a, b)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-built_in\">print</span>(power(-<span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">3</span>))\n"
    },
    "f-sharp": {
      "dir": "Algorithms/Math/Power.fs",
      "url": "https://github.com/TheAlgorithms/f-sharp/tree/master/Algorithms/Math/Power.fs",
      "code": "ï»¿<span class=\"hljs-keyword\">namespace</span> Algorithms.Math\n\n<span class=\"hljs-keyword\">module</span> Power =\n    <span class=\"hljs-keyword\">let</span> Pow x powerOf =\n        [<span class=\"hljs-number\">1.</span>.powerOf] |&gt; Seq.fold (<span class=\"hljs-keyword\">fun</span> acc _ -&gt; acc * x) <span class=\"hljs-number\">1</span>"
    }
  },
  "contributors": [
    {
      "name": "Liam Di Dato",
      "email": "liamdidato@gmail.com",
      "commits": 1
    },
    {
      "name": "AlexLeka98",
      "email": "32596824+AlexLeka98@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
