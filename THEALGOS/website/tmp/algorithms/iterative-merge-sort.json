{
  "slug": "iterative-merge-sort",
  "name": "Iterative Merge Sort",
  "categories": ["sorts"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts/iterative_merge_sort.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts/iterative_merge_sort.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nImplementation of iterative merge sort in Python\nAuthor: Aman Gupta\n\nFor doctests run following command:\npython3 -m doctest -v iterative_merge_sort.py\n\nFor manual testing run:\npython3 iterative_merge_sort.py\n&quot;&quot;&quot;</span>\n\n<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">merge</span>(<span class=\"hljs-params\">input_list: <span class=\"hljs-built_in\">list</span>, low: <span class=\"hljs-built_in\">int</span>, mid: <span class=\"hljs-built_in\">int</span>, high: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">list</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    sorting left-half and right-half individually\n    then merging them into result\n    &quot;&quot;&quot;</span>\n    result = []\n    left, right = input_list[low:mid], input_list[mid : high + <span class=\"hljs-number\">1</span>]\n    <span class=\"hljs-keyword\">while</span> left <span class=\"hljs-keyword\">and</span> right:\n        result.append((left <span class=\"hljs-keyword\">if</span> left[<span class=\"hljs-number\">0</span>] &lt;= right[<span class=\"hljs-number\">0</span>] <span class=\"hljs-keyword\">else</span> right).pop(<span class=\"hljs-number\">0</span>))\n    input_list[low : high + <span class=\"hljs-number\">1</span>] = result + left + right\n    <span class=\"hljs-keyword\">return</span> input_list\n\n\n<span class=\"hljs-comment\"># iteration over the unsorted list</span>\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">iter_merge_sort</span>(<span class=\"hljs-params\">input_list: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">list</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Return a sorted copy of the input list\n\n    &gt;&gt;&gt; iter_merge_sort([5, 9, 8, 7, 1, 2, 7])\n    [1, 2, 5, 7, 7, 8, 9]\n    &gt;&gt;&gt; iter_merge_sort([6])\n    [6]\n    &gt;&gt;&gt; iter_merge_sort([])\n    []\n    &gt;&gt;&gt; iter_merge_sort([-2, -9, -1, -4])\n    [-9, -4, -2, -1]\n    &gt;&gt;&gt; iter_merge_sort([1.1, 1, 0.0, -1, -1.1])\n    [-1.1, -1, 0.0, 1, 1.1]\n    &gt;&gt;&gt; iter_merge_sort([&#x27;c&#x27;, &#x27;b&#x27;, &#x27;a&#x27;])\n    [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]\n    &gt;&gt;&gt; iter_merge_sort(&#x27;cba&#x27;)\n    [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(input_list) &lt;= <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">return</span> input_list\n    input_list = <span class=\"hljs-built_in\">list</span>(input_list)\n\n    <span class=\"hljs-comment\"># iteration for two-way merging</span>\n    p = <span class=\"hljs-number\">2</span>\n    <span class=\"hljs-keyword\">while</span> p &lt; <span class=\"hljs-built_in\">len</span>(input_list):\n        <span class=\"hljs-comment\"># getting low, high and middle value for merge-sort of single list</span>\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(input_list), p):\n            low = i\n            high = i + p - <span class=\"hljs-number\">1</span>\n            mid = (low + high + <span class=\"hljs-number\">1</span>) // <span class=\"hljs-number\">2</span>\n            input_list = merge(input_list, low, mid, high)\n        <span class=\"hljs-comment\"># final merge of last two parts</span>\n        <span class=\"hljs-keyword\">if</span> p * <span class=\"hljs-number\">2</span> &gt;= <span class=\"hljs-built_in\">len</span>(input_list):\n            mid = i\n            input_list = merge(input_list, <span class=\"hljs-number\">0</span>, mid, <span class=\"hljs-built_in\">len</span>(input_list) - <span class=\"hljs-number\">1</span>)\n        p *= <span class=\"hljs-number\">2</span>\n\n    <span class=\"hljs-keyword\">return</span> input_list\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    user_input = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter numbers separated by a comma:\\n&quot;</span>).strip()\n    unsorted = [<span class=\"hljs-built_in\">int</span>(item.strip()) <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> user_input.split(<span class=\"hljs-string\">&quot;,&quot;</span>)]\n    <span class=\"hljs-built_in\">print</span>(iter_merge_sort(unsorted))\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Aman Gupta",
      "email": "53354515+amangupta0709@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
