{
  "slug": "factorialrecursion",
  "name": "FactorialRecursion",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "java": {
      "dir": "Maths/FactorialRecursion.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/Maths/FactorialRecursion.java",
      "code": "<span class=\"hljs-keyword\">package</span> Maths;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">FactorialRecursion</span> {\n\n  <span class=\"hljs-comment\">/* Driver Code */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">factorial</span><span class=\"hljs-params\">(<span class=\"hljs-number\">0</span>)</span> == <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">factorial</span><span class=\"hljs-params\">(<span class=\"hljs-number\">1</span>)</span> == <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">factorial</span><span class=\"hljs-params\">(<span class=\"hljs-number\">2</span>)</span> == <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">factorial</span><span class=\"hljs-params\">(<span class=\"hljs-number\">3</span>)</span> == <span class=\"hljs-number\">6</span>;\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">factorial</span><span class=\"hljs-params\">(<span class=\"hljs-number\">5</span>)</span> == <span class=\"hljs-number\">120</span>;\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Recursive FactorialRecursion Method\n   *\n   * <span class=\"hljs-doctag\">@param</span> n The number to factorial\n   * <span class=\"hljs-doctag\">@return</span> The factorial of the number\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">long</span> <span class=\"hljs-title function_\">factorial</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> n)</span> {\n    <span class=\"hljs-keyword\">if</span> (n &lt; <span class=\"hljs-number\">0</span>) {\n      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">IllegalArgumentException</span>(<span class=\"hljs-string\">&quot;number is negative&quot;</span>);\n    }\n    <span class=\"hljs-type\">return</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span>= <span class=\"hljs-number\">0</span> || n == <span class=\"hljs-number\">1</span> ? <span class=\"hljs-number\">1</span> : n * factorial(n - <span class=\"hljs-number\">1</span>);\n  }\n}\n"
    },
    "dart": {
      "dir": "maths/factorial_recursion.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/maths/factorial_recursion.dart",
      "code": "<span class=\"hljs-keyword\">void</span> main() {\n  <span class=\"hljs-keyword\">var</span> n = <span class=\"hljs-number\">5</span>;\n  <span class=\"hljs-keyword\">var</span> fac = factorial(n);\n  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$n</span>! = <span class=\"hljs-subst\">$fac</span>&quot;</span>); <span class=\"hljs-comment\">/* output: 5! = 120 */</span>\n}\n\n<span class=\"hljs-comment\">/* calculate factorial of n*/</span>\n<span class=\"hljs-built_in\">int</span> factorial(<span class=\"hljs-keyword\">var</span> n) =&gt; n == <span class=\"hljs-number\">0</span> || n == <span class=\"hljs-number\">1</span> ? <span class=\"hljs-number\">1</span> : n * factorial(n - <span class=\"hljs-number\">1</span>);\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
