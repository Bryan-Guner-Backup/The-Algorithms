{
  "slug": "euler-method-for-the-cauchy-problem",
  "name": "Euler Method for the Cauchy Problem",
  "categories": ["numericalmethods"],
  "body": {
    "en": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><p>In mathematics and computational science, the Euler method (also called forward Euler method) is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It is the most basic explicit method for numerical integration of ordinary differential equations and is the simplest Runge–Kutta method. The Euler method is named after Leonhard Euler, who treated it in his book Institutionum calculi integralis (published 1768–1870).</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> matplotlib.pyplot <span class=\"hljs-keyword\">as</span> plt           \n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n<span class=\"hljs-keyword\">import</span> math\n<span class=\"hljs-keyword\">from</span> math <span class=\"hljs-keyword\">import</span> tan</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">Euler</span>(<span class=\"hljs-params\">x,x1,y,n</span>):\n    h=(x1-x)/n\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,n+<span class=\"hljs-number\">1</span>):\n        F1=F(x,y)\n        y+=F1*h\n        x+=h\n        Xlist.append(<span class=\"hljs-built_in\">float</span>(x))\n        Ylist.append(y) \n        <span class=\"hljs-built_in\">print</span>(i,<span class=\"hljs-string\">\" \"</span>,x,<span class=\"hljs-string\">\" \"</span>,i,<span class=\"hljs-string\">\" \"</span>,y,<span class=\"hljs-string\">\" \"</span>,(tan(x)-x))</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#simple example for checking, how this method work</span>\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">F</span>(<span class=\"hljs-params\">X,Y</span>):\n    <span class=\"hljs-comment\">#return X**2 - Y*2#</span>\n    <span class=\"hljs-keyword\">return</span> Y + (math.e**X)/X\nXlist =[]\nYlist =[]\nx=<span class=\"hljs-number\">1.</span>\nx1=<span class=\"hljs-number\">2.</span>\nn=<span class=\"hljs-number\">10</span>\ny=<span class=\"hljs-number\">1</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Euler method\"</span>)\nEuler(x,x1,y,n)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-stdout\"><span class=\"hljs-attribute\">Euler</span> method\n<span class=\"hljs-attribute\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3718281828459045</span>   <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8647596572486522</span>\n<span class=\"hljs-attribute\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">2000000000000002</span>   <span class=\"hljs-number\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7821170033074434</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">37215162212632</span>\n<span class=\"hljs-attribute\">3</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3000000000000003</span>   <span class=\"hljs-number\">3</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">2370051138662332</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3021024479679815</span>\n<span class=\"hljs-attribute\">4</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">4000000000000004</span>   <span class=\"hljs-number\">4</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">7429592150697215</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">397883715482902</span>\n<span class=\"hljs-attribute\">5</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">5000000000000004</span>   <span class=\"hljs-number\">5</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">306912277065599</span>   <span class=\"hljs-number\">12</span>.<span class=\"hljs-number\">601419947171808</span>\n<span class=\"hljs-attribute\">6</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">6000000000000005</span>   <span class=\"hljs-number\">6</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">93638277612803</span>   -<span class=\"hljs-number\">35</span>.<span class=\"hljs-number\">832532735556796</span>\n<span class=\"hljs-attribute\">7</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7000000000000006</span>   <span class=\"hljs-number\">7</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">6395855802655275</span>   -<span class=\"hljs-number\">9</span>.<span class=\"hljs-number\">396602139459121</span>\n<span class=\"hljs-attribute\">8</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8000000000000007</span>   <span class=\"hljs-number\">8</span>   <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">425541043687798</span>   -<span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">086261674628051</span>\n<span class=\"hljs-attribute\">9</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">9000000000000008</span>   <span class=\"hljs-number\">9</span>   <span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">304186673857298</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8270975146777655</span>\n<span class=\"hljs-attribute\">10</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">000000000000001</span>   <span class=\"hljs-number\">10</span>   <span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">28649452241562</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">185039863261515</span>\n</pre></div></div></div></div>",
    "de": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><p>In mathematics and computational science, the Euler method (also called forward Euler method) is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It is the most basic explicit method for numerical integration of ordinary differential equations and is the simplest Runge–Kutta method. The Euler method is named after Leonhard Euler, who treated it in his book Institutionum calculi integralis (published 1768–1870).</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> matplotlib.pyplot <span class=\"hljs-keyword\">as</span> plt           \n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n<span class=\"hljs-keyword\">import</span> math\n<span class=\"hljs-keyword\">from</span> math <span class=\"hljs-keyword\">import</span> tan</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">Euler</span>(<span class=\"hljs-params\">x,x1,y,n</span>):\n    h=(x1-x)/n\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,n+<span class=\"hljs-number\">1</span>):\n        F1=F(x,y)\n        y+=F1*h\n        x+=h\n        Xlist.append(<span class=\"hljs-built_in\">float</span>(x))\n        Ylist.append(y) \n        <span class=\"hljs-built_in\">print</span>(i,<span class=\"hljs-string\">\" \"</span>,x,<span class=\"hljs-string\">\" \"</span>,i,<span class=\"hljs-string\">\" \"</span>,y,<span class=\"hljs-string\">\" \"</span>,(tan(x)-x))</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#simple example for checking, how this method work</span>\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">F</span>(<span class=\"hljs-params\">X,Y</span>):\n    <span class=\"hljs-comment\">#return X**2 - Y*2#</span>\n    <span class=\"hljs-keyword\">return</span> Y + (math.e**X)/X\nXlist =[]\nYlist =[]\nx=<span class=\"hljs-number\">1.</span>\nx1=<span class=\"hljs-number\">2.</span>\nn=<span class=\"hljs-number\">10</span>\ny=<span class=\"hljs-number\">1</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Euler method\"</span>)\nEuler(x,x1,y,n)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-stdout\"><span class=\"hljs-attribute\">Euler</span> method\n<span class=\"hljs-attribute\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3718281828459045</span>   <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8647596572486522</span>\n<span class=\"hljs-attribute\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">2000000000000002</span>   <span class=\"hljs-number\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7821170033074434</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">37215162212632</span>\n<span class=\"hljs-attribute\">3</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3000000000000003</span>   <span class=\"hljs-number\">3</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">2370051138662332</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3021024479679815</span>\n<span class=\"hljs-attribute\">4</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">4000000000000004</span>   <span class=\"hljs-number\">4</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">7429592150697215</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">397883715482902</span>\n<span class=\"hljs-attribute\">5</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">5000000000000004</span>   <span class=\"hljs-number\">5</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">306912277065599</span>   <span class=\"hljs-number\">12</span>.<span class=\"hljs-number\">601419947171808</span>\n<span class=\"hljs-attribute\">6</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">6000000000000005</span>   <span class=\"hljs-number\">6</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">93638277612803</span>   -<span class=\"hljs-number\">35</span>.<span class=\"hljs-number\">832532735556796</span>\n<span class=\"hljs-attribute\">7</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7000000000000006</span>   <span class=\"hljs-number\">7</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">6395855802655275</span>   -<span class=\"hljs-number\">9</span>.<span class=\"hljs-number\">396602139459121</span>\n<span class=\"hljs-attribute\">8</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8000000000000007</span>   <span class=\"hljs-number\">8</span>   <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">425541043687798</span>   -<span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">086261674628051</span>\n<span class=\"hljs-attribute\">9</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">9000000000000008</span>   <span class=\"hljs-number\">9</span>   <span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">304186673857298</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8270975146777655</span>\n<span class=\"hljs-attribute\">10</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">000000000000001</span>   <span class=\"hljs-number\">10</span>   <span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">28649452241562</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">185039863261515</span>\n</pre></div></div></div></div>",
    "es": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><p>In mathematics and computational science, the Euler method (also called forward Euler method) is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It is the most basic explicit method for numerical integration of ordinary differential equations and is the simplest Runge–Kutta method. The Euler method is named after Leonhard Euler, who treated it in his book Institutionum calculi integralis (published 1768–1870).</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> matplotlib.pyplot <span class=\"hljs-keyword\">as</span> plt           \n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n<span class=\"hljs-keyword\">import</span> math\n<span class=\"hljs-keyword\">from</span> math <span class=\"hljs-keyword\">import</span> tan</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">Euler</span>(<span class=\"hljs-params\">x,x1,y,n</span>):\n    h=(x1-x)/n\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,n+<span class=\"hljs-number\">1</span>):\n        F1=F(x,y)\n        y+=F1*h\n        x+=h\n        Xlist.append(<span class=\"hljs-built_in\">float</span>(x))\n        Ylist.append(y) \n        <span class=\"hljs-built_in\">print</span>(i,<span class=\"hljs-string\">\" \"</span>,x,<span class=\"hljs-string\">\" \"</span>,i,<span class=\"hljs-string\">\" \"</span>,y,<span class=\"hljs-string\">\" \"</span>,(tan(x)-x))</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#simple example for checking, how this method work</span>\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">F</span>(<span class=\"hljs-params\">X,Y</span>):\n    <span class=\"hljs-comment\">#return X**2 - Y*2#</span>\n    <span class=\"hljs-keyword\">return</span> Y + (math.e**X)/X\nXlist =[]\nYlist =[]\nx=<span class=\"hljs-number\">1.</span>\nx1=<span class=\"hljs-number\">2.</span>\nn=<span class=\"hljs-number\">10</span>\ny=<span class=\"hljs-number\">1</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Euler method\"</span>)\nEuler(x,x1,y,n)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-stdout\"><span class=\"hljs-attribute\">Euler</span> method\n<span class=\"hljs-attribute\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3718281828459045</span>   <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8647596572486522</span>\n<span class=\"hljs-attribute\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">2000000000000002</span>   <span class=\"hljs-number\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7821170033074434</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">37215162212632</span>\n<span class=\"hljs-attribute\">3</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3000000000000003</span>   <span class=\"hljs-number\">3</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">2370051138662332</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3021024479679815</span>\n<span class=\"hljs-attribute\">4</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">4000000000000004</span>   <span class=\"hljs-number\">4</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">7429592150697215</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">397883715482902</span>\n<span class=\"hljs-attribute\">5</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">5000000000000004</span>   <span class=\"hljs-number\">5</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">306912277065599</span>   <span class=\"hljs-number\">12</span>.<span class=\"hljs-number\">601419947171808</span>\n<span class=\"hljs-attribute\">6</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">6000000000000005</span>   <span class=\"hljs-number\">6</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">93638277612803</span>   -<span class=\"hljs-number\">35</span>.<span class=\"hljs-number\">832532735556796</span>\n<span class=\"hljs-attribute\">7</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7000000000000006</span>   <span class=\"hljs-number\">7</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">6395855802655275</span>   -<span class=\"hljs-number\">9</span>.<span class=\"hljs-number\">396602139459121</span>\n<span class=\"hljs-attribute\">8</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8000000000000007</span>   <span class=\"hljs-number\">8</span>   <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">425541043687798</span>   -<span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">086261674628051</span>\n<span class=\"hljs-attribute\">9</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">9000000000000008</span>   <span class=\"hljs-number\">9</span>   <span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">304186673857298</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8270975146777655</span>\n<span class=\"hljs-attribute\">10</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">000000000000001</span>   <span class=\"hljs-number\">10</span>   <span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">28649452241562</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">185039863261515</span>\n</pre></div></div></div></div>",
    "eo": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><p>In mathematics and computational science, the Euler method (also called forward Euler method) is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It is the most basic explicit method for numerical integration of ordinary differential equations and is the simplest Runge–Kutta method. The Euler method is named after Leonhard Euler, who treated it in his book Institutionum calculi integralis (published 1768–1870).</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> matplotlib.pyplot <span class=\"hljs-keyword\">as</span> plt           \n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n<span class=\"hljs-keyword\">import</span> math\n<span class=\"hljs-keyword\">from</span> math <span class=\"hljs-keyword\">import</span> tan</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">Euler</span>(<span class=\"hljs-params\">x,x1,y,n</span>):\n    h=(x1-x)/n\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,n+<span class=\"hljs-number\">1</span>):\n        F1=F(x,y)\n        y+=F1*h\n        x+=h\n        Xlist.append(<span class=\"hljs-built_in\">float</span>(x))\n        Ylist.append(y) \n        <span class=\"hljs-built_in\">print</span>(i,<span class=\"hljs-string\">\" \"</span>,x,<span class=\"hljs-string\">\" \"</span>,i,<span class=\"hljs-string\">\" \"</span>,y,<span class=\"hljs-string\">\" \"</span>,(tan(x)-x))</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#simple example for checking, how this method work</span>\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">F</span>(<span class=\"hljs-params\">X,Y</span>):\n    <span class=\"hljs-comment\">#return X**2 - Y*2#</span>\n    <span class=\"hljs-keyword\">return</span> Y + (math.e**X)/X\nXlist =[]\nYlist =[]\nx=<span class=\"hljs-number\">1.</span>\nx1=<span class=\"hljs-number\">2.</span>\nn=<span class=\"hljs-number\">10</span>\ny=<span class=\"hljs-number\">1</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Euler method\"</span>)\nEuler(x,x1,y,n)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-stdout\"><span class=\"hljs-attribute\">Euler</span> method\n<span class=\"hljs-attribute\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3718281828459045</span>   <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8647596572486522</span>\n<span class=\"hljs-attribute\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">2000000000000002</span>   <span class=\"hljs-number\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7821170033074434</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">37215162212632</span>\n<span class=\"hljs-attribute\">3</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3000000000000003</span>   <span class=\"hljs-number\">3</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">2370051138662332</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3021024479679815</span>\n<span class=\"hljs-attribute\">4</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">4000000000000004</span>   <span class=\"hljs-number\">4</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">7429592150697215</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">397883715482902</span>\n<span class=\"hljs-attribute\">5</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">5000000000000004</span>   <span class=\"hljs-number\">5</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">306912277065599</span>   <span class=\"hljs-number\">12</span>.<span class=\"hljs-number\">601419947171808</span>\n<span class=\"hljs-attribute\">6</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">6000000000000005</span>   <span class=\"hljs-number\">6</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">93638277612803</span>   -<span class=\"hljs-number\">35</span>.<span class=\"hljs-number\">832532735556796</span>\n<span class=\"hljs-attribute\">7</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7000000000000006</span>   <span class=\"hljs-number\">7</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">6395855802655275</span>   -<span class=\"hljs-number\">9</span>.<span class=\"hljs-number\">396602139459121</span>\n<span class=\"hljs-attribute\">8</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8000000000000007</span>   <span class=\"hljs-number\">8</span>   <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">425541043687798</span>   -<span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">086261674628051</span>\n<span class=\"hljs-attribute\">9</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">9000000000000008</span>   <span class=\"hljs-number\">9</span>   <span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">304186673857298</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8270975146777655</span>\n<span class=\"hljs-attribute\">10</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">000000000000001</span>   <span class=\"hljs-number\">10</span>   <span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">28649452241562</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">185039863261515</span>\n</pre></div></div></div></div>",
    "uk": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><p>In mathematics and computational science, the Euler method (also called forward Euler method) is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It is the most basic explicit method for numerical integration of ordinary differential equations and is the simplest Runge–Kutta method. The Euler method is named after Leonhard Euler, who treated it in his book Institutionum calculi integralis (published 1768–1870).</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> matplotlib.pyplot <span class=\"hljs-keyword\">as</span> plt           \n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n<span class=\"hljs-keyword\">import</span> math\n<span class=\"hljs-keyword\">from</span> math <span class=\"hljs-keyword\">import</span> tan</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">Euler</span>(<span class=\"hljs-params\">x,x1,y,n</span>):\n    h=(x1-x)/n\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,n+<span class=\"hljs-number\">1</span>):\n        F1=F(x,y)\n        y+=F1*h\n        x+=h\n        Xlist.append(<span class=\"hljs-built_in\">float</span>(x))\n        Ylist.append(y) \n        <span class=\"hljs-built_in\">print</span>(i,<span class=\"hljs-string\">\" \"</span>,x,<span class=\"hljs-string\">\" \"</span>,i,<span class=\"hljs-string\">\" \"</span>,y,<span class=\"hljs-string\">\" \"</span>,(tan(x)-x))</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#simple example for checking, how this method work</span>\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">F</span>(<span class=\"hljs-params\">X,Y</span>):\n    <span class=\"hljs-comment\">#return X**2 - Y*2#</span>\n    <span class=\"hljs-keyword\">return</span> Y + (math.e**X)/X\nXlist =[]\nYlist =[]\nx=<span class=\"hljs-number\">1.</span>\nx1=<span class=\"hljs-number\">2.</span>\nn=<span class=\"hljs-number\">10</span>\ny=<span class=\"hljs-number\">1</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Euler method\"</span>)\nEuler(x,x1,y,n)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-stdout\"><span class=\"hljs-attribute\">Euler</span> method\n<span class=\"hljs-attribute\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3718281828459045</span>   <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8647596572486522</span>\n<span class=\"hljs-attribute\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">2000000000000002</span>   <span class=\"hljs-number\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7821170033074434</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">37215162212632</span>\n<span class=\"hljs-attribute\">3</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3000000000000003</span>   <span class=\"hljs-number\">3</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">2370051138662332</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3021024479679815</span>\n<span class=\"hljs-attribute\">4</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">4000000000000004</span>   <span class=\"hljs-number\">4</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">7429592150697215</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">397883715482902</span>\n<span class=\"hljs-attribute\">5</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">5000000000000004</span>   <span class=\"hljs-number\">5</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">306912277065599</span>   <span class=\"hljs-number\">12</span>.<span class=\"hljs-number\">601419947171808</span>\n<span class=\"hljs-attribute\">6</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">6000000000000005</span>   <span class=\"hljs-number\">6</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">93638277612803</span>   -<span class=\"hljs-number\">35</span>.<span class=\"hljs-number\">832532735556796</span>\n<span class=\"hljs-attribute\">7</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7000000000000006</span>   <span class=\"hljs-number\">7</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">6395855802655275</span>   -<span class=\"hljs-number\">9</span>.<span class=\"hljs-number\">396602139459121</span>\n<span class=\"hljs-attribute\">8</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8000000000000007</span>   <span class=\"hljs-number\">8</span>   <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">425541043687798</span>   -<span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">086261674628051</span>\n<span class=\"hljs-attribute\">9</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">9000000000000008</span>   <span class=\"hljs-number\">9</span>   <span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">304186673857298</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8270975146777655</span>\n<span class=\"hljs-attribute\">10</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">000000000000001</span>   <span class=\"hljs-number\">10</span>   <span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">28649452241562</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">185039863261515</span>\n</pre></div></div></div></div>",
    "hr": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><p>In mathematics and computational science, the Euler method (also called forward Euler method) is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It is the most basic explicit method for numerical integration of ordinary differential equations and is the simplest Runge–Kutta method. The Euler method is named after Leonhard Euler, who treated it in his book Institutionum calculi integralis (published 1768–1870).</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> matplotlib.pyplot <span class=\"hljs-keyword\">as</span> plt           \n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n<span class=\"hljs-keyword\">import</span> math\n<span class=\"hljs-keyword\">from</span> math <span class=\"hljs-keyword\">import</span> tan</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">Euler</span>(<span class=\"hljs-params\">x,x1,y,n</span>):\n    h=(x1-x)/n\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,n+<span class=\"hljs-number\">1</span>):\n        F1=F(x,y)\n        y+=F1*h\n        x+=h\n        Xlist.append(<span class=\"hljs-built_in\">float</span>(x))\n        Ylist.append(y) \n        <span class=\"hljs-built_in\">print</span>(i,<span class=\"hljs-string\">\" \"</span>,x,<span class=\"hljs-string\">\" \"</span>,i,<span class=\"hljs-string\">\" \"</span>,y,<span class=\"hljs-string\">\" \"</span>,(tan(x)-x))</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#simple example for checking, how this method work</span>\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">F</span>(<span class=\"hljs-params\">X,Y</span>):\n    <span class=\"hljs-comment\">#return X**2 - Y*2#</span>\n    <span class=\"hljs-keyword\">return</span> Y + (math.e**X)/X\nXlist =[]\nYlist =[]\nx=<span class=\"hljs-number\">1.</span>\nx1=<span class=\"hljs-number\">2.</span>\nn=<span class=\"hljs-number\">10</span>\ny=<span class=\"hljs-number\">1</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Euler method\"</span>)\nEuler(x,x1,y,n)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-stdout\"><span class=\"hljs-attribute\">Euler</span> method\n<span class=\"hljs-attribute\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3718281828459045</span>   <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8647596572486522</span>\n<span class=\"hljs-attribute\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">2000000000000002</span>   <span class=\"hljs-number\">2</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7821170033074434</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">37215162212632</span>\n<span class=\"hljs-attribute\">3</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">3000000000000003</span>   <span class=\"hljs-number\">3</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">2370051138662332</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3021024479679815</span>\n<span class=\"hljs-attribute\">4</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">4000000000000004</span>   <span class=\"hljs-number\">4</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">7429592150697215</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">397883715482902</span>\n<span class=\"hljs-attribute\">5</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">5000000000000004</span>   <span class=\"hljs-number\">5</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">306912277065599</span>   <span class=\"hljs-number\">12</span>.<span class=\"hljs-number\">601419947171808</span>\n<span class=\"hljs-attribute\">6</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">6000000000000005</span>   <span class=\"hljs-number\">6</span>   <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">93638277612803</span>   -<span class=\"hljs-number\">35</span>.<span class=\"hljs-number\">832532735556796</span>\n<span class=\"hljs-attribute\">7</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">7000000000000006</span>   <span class=\"hljs-number\">7</span>   <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">6395855802655275</span>   -<span class=\"hljs-number\">9</span>.<span class=\"hljs-number\">396602139459121</span>\n<span class=\"hljs-attribute\">8</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8000000000000007</span>   <span class=\"hljs-number\">8</span>   <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">425541043687798</span>   -<span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">086261674628051</span>\n<span class=\"hljs-attribute\">9</span>   <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">9000000000000008</span>   <span class=\"hljs-number\">9</span>   <span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">304186673857298</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8270975146777655</span>\n<span class=\"hljs-attribute\">10</span>   <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">000000000000001</span>   <span class=\"hljs-number\">10</span>   <span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">28649452241562</span>   -<span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">185039863261515</span>\n</pre></div></div></div></div>"
  },
  "implementations": {
    "jupyter": {
      "dir": "numerical_methods/euler_method_for_the_Cauchy_problem.ipynb",
      "url": "https://github.com/TheAlgorithms/jupyter/tree/master/numerical_methods/euler_method_for_the_Cauchy_problem.ipynb",
      "code": "<span class=\"hljs-punctuation\">{</span>\n <span class=\"hljs-attr\">&quot;cells&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;In mathematics and computational science, the Euler method (also called forward Euler method) is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It is the most basic explicit method for numerical integration of ordinary differential equations and is the simplest Runge–Kutta method. The Euler method is named after Leonhard Euler, who treated it in his book Institutionum calculi integralis (published 1768–1870).&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;import matplotlib.pyplot as plt           \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;import numpy as np\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;import math\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;from math import tan&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;def Euler(x,x1,y,n):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    h=(x1-x)/n\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for i in range(1,n+1):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        F1=F(x,y)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        y+=F1*h\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        x+=h\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        Xlist.append(float(x))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        Ylist.append(y) \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        print(i,\\&quot; \\&quot;,x,\\&quot; \\&quot;,i,\\&quot; \\&quot;,y,\\&quot; \\&quot;,(tan(x)-x))&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-punctuation\">{</span>\n     <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stdout&quot;</span><span class=\"hljs-punctuation\">,</span>\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stream&quot;</span><span class=\"hljs-punctuation\">,</span>\n     <span class=\"hljs-attr\">&quot;text&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n      <span class=\"hljs-string\">&quot;Euler method\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;1   1.1   1   1.3718281828459045   0.8647596572486522\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;2   1.2000000000000002   2   1.7821170033074434   1.37215162212632\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;3   1.3000000000000003   3   2.2370051138662332   2.3021024479679815\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;4   1.4000000000000004   4   2.7429592150697215   4.397883715482902\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;5   1.5000000000000004   5   3.306912277065599   12.601419947171808\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;6   1.6000000000000005   6   3.93638277612803   -35.832532735556796\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;7   1.7000000000000006   7   4.6395855802655275   -9.396602139459121\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;8   1.8000000000000007   8   5.425541043687798   -6.086261674628051\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;9   1.9000000000000008   9   6.304186673857298   -4.8270975146777655\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;10   2.000000000000001   10   7.28649452241562   -4.185039863261515\\n&quot;</span>\n     <span class=\"hljs-punctuation\">]</span>\n    <span class=\"hljs-punctuation\">}</span>\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;#simple example for checking, how this method work\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;def F(X,Y):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    #return X**2 - Y*2#\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    return Y + (math.e**X)/X\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Xlist =[]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Ylist =[]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;x=1.\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;x1=2.\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;n=10\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;y=1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Euler method\\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Euler(x,x1,y,n)&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span>\n <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;kernelspec&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;display_name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Python 3&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;language&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python3&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;language_info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;codemirror_mode&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ipython&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;version&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span>\n   <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;file_extension&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.py&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;mimetype&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;text/x-python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;nbconvert_exporter&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;pygments_lexer&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ipython3&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;version&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;3.7.6&quot;</span>\n  <span class=\"hljs-punctuation\">}</span>\n <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n <span class=\"hljs-attr\">&quot;nbformat&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span>\n <span class=\"hljs-attr\">&quot;nbformat_minor&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span>\n<span class=\"hljs-punctuation\">}</span>\n"
    }
  },
  "contributors": [
    {
      "name": "CheshirLvova",
      "email": "ksoovnaila@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
