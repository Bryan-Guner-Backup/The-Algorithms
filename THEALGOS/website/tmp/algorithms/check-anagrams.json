{
  "slug": "check-anagrams",
  "name": "Check Anagrams",
  "categories": ["strings"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "strings/check_anagrams.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/strings/check_anagrams.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nwiki: https://en.wikipedia.org/wiki/Anagram\r\n&quot;&quot;&quot;</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">check_anagrams</span>(<span class=\"hljs-params\">first_str: <span class=\"hljs-built_in\">str</span>, second_str: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Two strings are anagrams if they are made of the same letters\r\n    arranged differently (ignoring the case).\r\n    &gt;&gt;&gt; check_anagrams(&#x27;Silent&#x27;, &#x27;Listen&#x27;)\r\n    True\r\n    &gt;&gt;&gt; check_anagrams(&#x27;This is a string&#x27;, &#x27;Is this a string&#x27;)\r\n    True\r\n    &gt;&gt;&gt; check_anagrams(&#x27;This is    a      string&#x27;, &#x27;Is     this a string&#x27;)\r\n    True\r\n    &gt;&gt;&gt; check_anagrams(&#x27;There&#x27;, &#x27;Their&#x27;)\r\n    False\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">return</span> (\r\n        <span class=\"hljs-string\">&quot;&quot;</span>.join(<span class=\"hljs-built_in\">sorted</span>(first_str.lower())).strip()\r\n        == <span class=\"hljs-string\">&quot;&quot;</span>.join(<span class=\"hljs-built_in\">sorted</span>(second_str.lower())).strip()\r\n    )\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">from</span> doctest <span class=\"hljs-keyword\">import</span> testmod\r\n\r\n    testmod()\r\n    input_A = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter the first string &quot;</span>).strip()\r\n    input_B = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter the second string &quot;</span>).strip()\r\n\r\n    status = check_anagrams(input_A, input_B)\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{input_A}</span> and <span class=\"hljs-subst\">{input_B}</span> are <span class=\"hljs-subst\">{<span class=\"hljs-string\">&#x27;&#x27;</span> <span class=\"hljs-keyword\">if</span> status <span class=\"hljs-keyword\">else</span> <span class=\"hljs-string\">&#x27;not &#x27;</span>}</span>anagrams.&quot;</span>)\r\n"
    },
    "java": {
      "dir": "strings/CheckAnagrams.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/strings/CheckAnagrams.java",
      "code": "<span class=\"hljs-keyword\">package</span> strings;\n\n<span class=\"hljs-keyword\">import</span> java.util.HashMap;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * Two strings are anagrams if they are made of the same letters arranged differently (ignoring the\n * case).\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">CheckAnagrams</span> {\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isAnagrams</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;Silent&quot;</span>, <span class=\"hljs-string\">&quot;Listen&quot;</span>)</span>;\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isAnagrams</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;This is a string&quot;</span>, <span class=\"hljs-string\">&quot;Is this a string&quot;</span>)</span>;\n    <span class=\"hljs-keyword\">assert</span> !isAnagrams(<span class=\"hljs-string\">&quot;There&quot;</span>, <span class=\"hljs-string\">&quot;Their&quot;</span>);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Check if two strings are anagrams or not\n   *\n   * <span class=\"hljs-doctag\">@param</span> s1 the first string\n   * <span class=\"hljs-doctag\">@param</span> s2 the second string\n   * <span class=\"hljs-doctag\">@return</span> {<span class=\"hljs-doctag\">@code</span> true} if two string are anagrams, otherwise {<span class=\"hljs-doctag\">@code</span> false}\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">isAnagrams</span><span class=\"hljs-params\">(String s1, String s2)</span> {\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">l1</span> <span class=\"hljs-operator\">=</span> s1.length();\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">l2</span> <span class=\"hljs-operator\">=</span> s2.length();\n    s1 = s1.toLowerCase();\n    s2 = s2.toLowerCase();\n    Map&lt;Character, Integer&gt; charAppearances = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;&gt;();\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; l1; i++) {\n      <span class=\"hljs-type\">char</span> <span class=\"hljs-variable\">c</span> <span class=\"hljs-operator\">=</span> s1.charAt(i);\n      <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">numOfAppearances</span> <span class=\"hljs-operator\">=</span> charAppearances.getOrDefault(c, <span class=\"hljs-number\">0</span>);\n      charAppearances.put(c, numOfAppearances + <span class=\"hljs-number\">1</span>);\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; l2; i++) {\n      <span class=\"hljs-type\">char</span> <span class=\"hljs-variable\">c</span> <span class=\"hljs-operator\">=</span> s2.charAt(i);\n      <span class=\"hljs-keyword\">if</span> (!charAppearances.containsKey(c)) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n      }\n      charAppearances.put(c, charAppearances.get(c) - <span class=\"hljs-number\">1</span>);\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> cnt : charAppearances.values()) {\n      <span class=\"hljs-keyword\">if</span> (cnt != <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n      }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n  }\n}\n"
    },
    "f-sharp": {
      "dir": "Algorithms/Strings/CheckAnagrams.fs",
      "url": "https://github.com/TheAlgorithms/f-sharp/tree/master/Algorithms/Strings/CheckAnagrams.fs",
      "code": "ï»¿<span class=\"hljs-keyword\">namespace</span> Algorithms.Strings\n\n<span class=\"hljs-comment\">/// wiki: https://en.wikipedia.org/wiki/Anagram</span>\n<span class=\"hljs-keyword\">module</span> CheckAnagrams =\n    <span class=\"hljs-comment\">/// &lt;summary&gt;</span>\n    <span class=\"hljs-comment\">/// Two strings are anagrams if they are made of the same letters</span>\n    <span class=\"hljs-comment\">/// arranged differently (ignoring the case).</span>\n    <span class=\"hljs-comment\">/// &lt;/summary&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;example&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;code&gt;</span>\n    <span class=\"hljs-comment\">/// check_anagrams(&#x27;Silent&#x27;, &#x27;Listen&#x27;)</span>\n    <span class=\"hljs-comment\">/// True</span>\n    <span class=\"hljs-comment\">///</span>\n    <span class=\"hljs-comment\">/// check_anagrams(&#x27;This is a string&#x27;, &#x27;Is this a string&#x27;)</span>\n    <span class=\"hljs-comment\">/// True</span>\n    <span class=\"hljs-comment\">///</span>\n    <span class=\"hljs-comment\">/// check_anagrams(&#x27;This is    a      string&#x27;, &#x27;Is     this a string&#x27;)</span>\n    <span class=\"hljs-comment\">/// True</span>\n    <span class=\"hljs-comment\">///</span>\n    <span class=\"hljs-comment\">/// check_anagrams(&#x27;There&#x27;, &#x27;Their&#x27;)</span>\n    <span class=\"hljs-comment\">/// False</span>\n    <span class=\"hljs-comment\">/// &lt;/code&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;/example&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;param name=&quot;string1&quot;&gt;First string&lt;/param&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;param name=&quot;string2&quot;&gt;Second string&lt;/param&gt;</span>\n    <span class=\"hljs-comment\">/// &lt;returns&gt;Boolean&lt;/returns&gt;</span>\n    <span class=\"hljs-keyword\">let</span> isAnagram (string1: string, string2: string): bool =\n        <span class=\"hljs-keyword\">let</span> a =\n            string1.ToLower().ToCharArray()\n            |&gt; Array.filter (<span class=\"hljs-keyword\">fun</span> chars -&gt; chars &lt;&gt; &#x27; &#x27;)\n            |&gt; Array.sort\n            |&gt; System.String.Concat\n\n        <span class=\"hljs-keyword\">let</span> b =\n            string2.ToLower().ToCharArray()\n            |&gt; Array.filter (<span class=\"hljs-keyword\">fun</span> chars -&gt; chars &lt;&gt; &#x27; &#x27;)\n            |&gt; Array.sort\n            |&gt; System.String.Concat\n\n        a = b\n"
    }
  },
  "contributors": [
    {
      "name": "ITAY VENTURA",
      "email": "39849952+Itayventura@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Kushagra Bansal",
      "email": "kushagrabansalajmer@gmail.com",
      "commits": 1
    },
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 3
    },
    {
      "name": "Allister Isaiah Harvey",
      "email": "41553768+powpow58@users.noreply.github.com",
      "commits": 5
    }
  ],
  "explanationUrl": {}
}
