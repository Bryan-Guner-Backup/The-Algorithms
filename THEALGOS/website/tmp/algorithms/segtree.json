{
  "slug": "segtree",
  "name": "Segtree",
  "categories": ["rangequeries"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "range_queries/segtree.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/range_queries/segtree.cpp",
      "code": "<span class=\"hljs-comment\">//#include &lt;bits/stdc++.h&gt;</span>\n<span class=\"hljs-meta\">#incldue <span class=\"hljs-string\">&lt; iostream &gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> MAX 4000000</span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;\n<span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> ll;\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">ConsTree</span><span class=\"hljs-params\">(ll arr[], ll segtree[], ll low, ll high, ll pos)</span> </span>{\n    <span class=\"hljs-keyword\">if</span> (low == high) {\n        segtree[pos] = arr[low];\n        <span class=\"hljs-keyword\">return</span>;\n    }\n    ll mid = (low + high) / <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-built_in\">ConsTree</span>(arr, segtree, low, mid, <span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-built_in\">ConsTree</span>(arr, segtree, mid + <span class=\"hljs-number\">1</span>, high, <span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">2</span>);\n    segtree[pos] = segtree[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">1</span>] + segtree[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">2</span>];\n}\n<span class=\"hljs-function\">ll <span class=\"hljs-title\">query</span><span class=\"hljs-params\">(ll segtree[], ll lazy[], ll qlow, ll qhigh, ll low, ll high, ll pos)</span> </span>{\n    <span class=\"hljs-keyword\">if</span> (low &gt; high)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span> (qlow &gt; high || qhigh &lt; low)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span> (lazy[pos] != <span class=\"hljs-number\">0</span>) {\n        segtree[pos] += lazy[pos] * (high - low + <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">if</span> (low != high) {\n            lazy[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">1</span>] += lazy[pos];\n            lazy[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">2</span>] += lazy[pos];\n        }\n        lazy[pos] = <span class=\"hljs-number\">0</span>;\n    }\n    <span class=\"hljs-keyword\">if</span> (qlow &lt;= low &amp;&amp; qhigh &gt;= high)\n        <span class=\"hljs-keyword\">return</span> segtree[pos];\n    ll mid = (low + high) / <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">query</span>(segtree, lazy, qlow, qhigh, low, mid, <span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">1</span>) +\n           <span class=\"hljs-built_in\">query</span>(segtree, lazy, qlow, qhigh, mid + <span class=\"hljs-number\">1</span>, high, <span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">2</span>);\n}\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">update</span><span class=\"hljs-params\">(ll segtree[], ll lazy[], ll start, ll end, ll delta, ll low,\n            ll high, ll pos)</span> </span>{\n    <span class=\"hljs-keyword\">if</span> (low &gt; high)\n        <span class=\"hljs-keyword\">return</span>;\n    <span class=\"hljs-keyword\">if</span> (lazy[pos] != <span class=\"hljs-number\">0</span>) {\n        segtree[pos] += lazy[pos] * (high - low + <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">if</span> (low != high) {\n            lazy[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">1</span>] += lazy[pos];\n            lazy[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">2</span>] += lazy[pos];\n        }\n        lazy[pos] = <span class=\"hljs-number\">0</span>;\n    }\n    <span class=\"hljs-keyword\">if</span> (start &gt; high || end &lt; low)\n        <span class=\"hljs-keyword\">return</span>;\n    <span class=\"hljs-keyword\">if</span> (start &lt;= low &amp;&amp; end &gt;= high) {\n        segtree[pos] += delta * (high - low + <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">if</span> (low != high) {\n            lazy[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">1</span>] += delta;\n            lazy[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">2</span>] += delta;\n        }\n        <span class=\"hljs-keyword\">return</span>;\n    }\n    ll mid = (low + high) / <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-built_in\">update</span>(segtree, lazy, start, end, delta, low, mid, <span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-built_in\">update</span>(segtree, lazy, start, end, delta, mid + <span class=\"hljs-number\">1</span>, high, <span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">2</span>);\n    segtree[pos] = segtree[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">1</span>] + segtree[<span class=\"hljs-number\">2</span> * pos + <span class=\"hljs-number\">2</span>];\n}\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    ll n, c;\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%lld %lld&quot;</span>, &amp;n, &amp;c);\n    ll arr[n] = {<span class=\"hljs-number\">0</span>}, p, q, v, choice;\n    ll segtree[MAX], lazy[MAX] = {<span class=\"hljs-number\">0</span>};\n    <span class=\"hljs-built_in\">ConsTree</span>(arr, segtree, <span class=\"hljs-number\">0</span>, n - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-keyword\">while</span> (c--) {\n        <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%lld&quot;</span>, &amp;choice);\n        <span class=\"hljs-keyword\">if</span> (choice == <span class=\"hljs-number\">0</span>) {\n            <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%lld %lld %lld&quot;</span>, &amp;p, &amp;q, &amp;v);\n            <span class=\"hljs-built_in\">update</span>(segtree, lazy, p - <span class=\"hljs-number\">1</span>, q - <span class=\"hljs-number\">1</span>, v, <span class=\"hljs-number\">0</span>, n - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%lld %lld&quot;</span>, &amp;p, &amp;q);\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%lld\\n&quot;</span>, <span class=\"hljs-built_in\">query</span>(segtree, lazy, p - <span class=\"hljs-number\">1</span>, q - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, n - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>));\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "stepfencurryxiao",
      "email": "stepfencurryxiao@gmail.com",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Madhav",
      "email": "madhavgaba2@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
