{
  "slug": "secant",
  "name": "Secant",
  "categories": ["numericalanalysis"],
  "body": {},
  "implementations": {
    "matlab-octave": {
      "dir": "algorithms/arithmetic_analysis/secant.m",
      "url": "https://github.com/TheAlgorithms/matlab-octave/tree/master/algorithms/arithmetic_analysis/secant.m",
      "code": "<span class=\"hljs-comment\">%Extremely similar to the false position method. The main difference is</span>\r\n<span class=\"hljs-comment\">%that the secant method does not actually have a defined interval where</span>\r\n<span class=\"hljs-comment\">%the root lies on. It converges faster than the false position method,</span>\r\n<span class=\"hljs-comment\">%but it is not always guaranteed to converge.</span>\r\n\r\n<span class=\"hljs-comment\">%INPUTS:</span>\r\n<span class=\"hljs-comment\">%Function handle f</span>\r\n<span class=\"hljs-comment\">%x1 = a</span>\r\n<span class=\"hljs-comment\">%x2 = b</span>\r\n<span class=\"hljs-comment\">%maximum tolerated error</span>\r\n\r\n<span class=\"hljs-comment\">%OUTPUTS:</span>\r\n<span class=\"hljs-comment\">%An approximated value for the root of f.</span>\r\n\r\n<span class=\"hljs-comment\">%Written by MatteoRaso</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">y</span> = <span class=\"hljs-title\">secant</span><span class=\"hljs-params\">(f, a, b, error)</span></span>\r\n  x = [a, b];\r\n  n = <span class=\"hljs-number\">2</span>;\r\n  <span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">abs</span>(f(x(n))) &gt; error\r\n    x(n + <span class=\"hljs-number\">1</span>) = -f(x(n)) * (x(n) - x(n - <span class=\"hljs-number\">1</span>)) / (f(x(n)) - f(x(n - <span class=\"hljs-number\">1</span>))) + x(n);\r\n    n = n + <span class=\"hljs-number\">1</span>;\r\n    <span class=\"hljs-built_in\">disp</span>(f(x(n)))\r\n  endwhile     \r\n  A = [<span class=\"hljs-string\">&quot;The root is approximately &quot;</span>, num2str(x(n))];\r\n  <span class=\"hljs-built_in\">disp</span>(A)\r\n  y = x(n);\r\nendfunction\r\n"
    }
  },
  "contributors": [
    {
      "name": "MatteoRaso",
      "email": "33975162+MatteoRaso@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
