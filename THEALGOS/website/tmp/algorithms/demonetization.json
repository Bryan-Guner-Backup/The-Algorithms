{
  "slug": "demonetization",
  "name": "Demonetization",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "misc/demonetization.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/misc/demonetization.c",
      "code": "<span class=\"hljs-comment\">// Recursion problem</span>\n<span class=\"hljs-comment\">// Given the denominations of currencies available in a system, find the number</span>\n<span class=\"hljs-comment\">// of ways an ATM machine can generate notes for an entered amount N.</span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdlib.h&gt;</span></span>\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">ways</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> n, <span class=\"hljs-type\">int</span> *a, <span class=\"hljs-type\">int</span> k)</span>\n{\n    <span class=\"hljs-keyword\">if</span> (n &lt; <span class=\"hljs-number\">0</span> || k &lt; <span class=\"hljs-number\">0</span>)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span> (n == <span class=\"hljs-number\">0</span>)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">if</span> (k == <span class=\"hljs-number\">0</span>)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">return</span> ways(n, a, k - <span class=\"hljs-number\">1</span>) + ways(n - a[k - <span class=\"hljs-number\">1</span>], a, k);\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-type\">int</span> m;\n    <span class=\"hljs-type\">int</span> t;\n    <span class=\"hljs-type\">int</span> n;\n\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Number of coins? &quot;</span>);\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;m);\n    <span class=\"hljs-type\">int</span> *coin = (<span class=\"hljs-type\">int</span> *)<span class=\"hljs-built_in\">malloc</span>(m * <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">int</span>)), i;\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; m; i++)\n    {\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;coin? &quot;</span>);\n        <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;coin[i]);\n    }\n\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;---- your requests --- \\n&quot;</span>);\n    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>)\n    {\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;amount? exit(0) &quot;</span>);\n        <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;n);\n        <span class=\"hljs-keyword\">if</span> (!n)\n        {\n            <span class=\"hljs-keyword\">break</span>;\n        }\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d\\n&quot;</span>, ways(n, coin, m));\n    }\n\n    <span class=\"hljs-built_in\">free</span>(coin);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
