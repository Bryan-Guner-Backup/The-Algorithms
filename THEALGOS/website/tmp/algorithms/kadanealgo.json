{
  "slug": "kadanealgo",
  "name": "KadaneAlgo",
  "categories": ["dynamicprogramming"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Dynamic-Programming/KadaneAlgo.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Dynamic-Programming/KadaneAlgo.js",
      "code": "<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">KadaneAlgo</span> (array) {\n  <span class=\"hljs-keyword\">let</span> cummulativeSum = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> maxSum = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; array.<span class=\"hljs-property\">length</span>; i++) {\n    cummulativeSum = cummulativeSum + array[i]\n    <span class=\"hljs-keyword\">if</span> (cummulativeSum &lt; <span class=\"hljs-number\">0</span>) {\n      cummulativeSum = <span class=\"hljs-number\">0</span>\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (maxSum &lt; cummulativeSum) {\n      maxSum = cummulativeSum\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> maxSum\n  <span class=\"hljs-comment\">// This function returns largest sum contigous sum in a array</span>\n}\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">main</span> () {\n  <span class=\"hljs-keyword\">const</span> myArray = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, -<span class=\"hljs-number\">6</span>]\n  <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-title class_\">KadaneAlgo</span>(myArray)\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result)\n}\n<span class=\"hljs-title function_\">main</span>()\n"
    },
    "dart": {
      "dir": "other/kadaneAlgo.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/other/kadaneAlgo.dart",
      "code": "<span class=\"hljs-comment\">// Program to find the Maximum contiguous sum (Kadane&#x27;s Algorithm)</span>\n<span class=\"hljs-comment\">// Function to Calculate Maximum of Two Number</span>\n<span class=\"hljs-built_in\">int</span> max(<span class=\"hljs-built_in\">int</span> a, <span class=\"hljs-built_in\">int</span> b) {\n  <span class=\"hljs-keyword\">if</span> (a &gt; b)\n    <span class=\"hljs-keyword\">return</span> a;\n  <span class=\"hljs-keyword\">else</span>\n    <span class=\"hljs-keyword\">return</span> b;\n}\n\n<span class=\"hljs-comment\">// Function to find the Maximum contiguous Sum in the array</span>\n<span class=\"hljs-built_in\">int</span> maxSubArraySum(<span class=\"hljs-built_in\">List</span> a, <span class=\"hljs-built_in\">int</span> size) {\n  <span class=\"hljs-built_in\">int</span> max_so_far = a[<span class=\"hljs-number\">0</span>];\n  <span class=\"hljs-built_in\">int</span> curr_max = a[<span class=\"hljs-number\">0</span>];\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; size; i++) {\n    curr_max = max(a[i], curr_max + a[i]);\n    max_so_far = max(max_so_far, curr_max);\n  }\n  <span class=\"hljs-keyword\">return</span> max_so_far;\n}\n\n<span class=\"hljs-comment\">// main function for validation of the above</span>\n<span class=\"hljs-built_in\">int</span> main() {\n  <span class=\"hljs-built_in\">List</span> a = [<span class=\"hljs-number\">-2</span>, <span class=\"hljs-number\">-3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">-2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">-3</span>];\n  <span class=\"hljs-built_in\">int</span> n = a.length;\n  <span class=\"hljs-built_in\">int</span> max_sum = maxSubArraySum(a, n);\n  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Maximum contiguous sum is &quot;</span> + max_sum.toString());\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "KAUSHAL DEVRARI",
      "email": "71590645+KaushalDevrari@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Rak Laptudirm",
      "email": "68542775+raklaptudirm@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Kulkarni Shravan kashyap",
      "email": "kskashyap94@gmail.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    },
    {
      "name": "lakshyabatman",
      "email": "lakshya.khera@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
