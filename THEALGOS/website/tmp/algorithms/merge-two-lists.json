{
  "slug": "merge-two-lists",
  "name": "Merge Two Lists",
  "categories": ["datastructures", "linkedlist"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "data_structures/linked_list/merge_two_lists.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/data_structures/linked_list/merge_two_lists.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nAlgorithm that merges two sorted linked lists into one sorted linked list.\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\n\n<span class=\"hljs-keyword\">from</span> collections.abc <span class=\"hljs-keyword\">import</span> Iterable, Iterator\n<span class=\"hljs-keyword\">from</span> dataclasses <span class=\"hljs-keyword\">import</span> data<span class=\"hljs-keyword\">class</span>\n<span class=\"hljs-title class_\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">Optional</span>\n\ntest_data_odd = (<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">9</span>, -<span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">1</span>)\ntest_data_even = (<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">3</span>, -<span class=\"hljs-number\">2</span>)\n\n\n<span class=\"hljs-meta\">@dataclass</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Node</span>:\n    data: <span class=\"hljs-built_in\">int</span>\n    <span class=\"hljs-built_in\">next</span>: <span class=\"hljs-type\">Optional</span>[Node]\n\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SortedLinkedList</span>:\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self, ints: Iterable[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-literal\">None</span>:\n        self.head: <span class=\"hljs-type\">Optional</span>[Node] = <span class=\"hljs-literal\">None</span>\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">reversed</span>(<span class=\"hljs-built_in\">sorted</span>(ints)):\n            self.head = Node(i, self.head)\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__iter__</span>(<span class=\"hljs-params\">self</span>) -&gt; Iterator[<span class=\"hljs-built_in\">int</span>]:\n        <span class=\"hljs-string\">&quot;&quot;&quot;\n        &gt;&gt;&gt; tuple(SortedLinkedList(test_data_odd)) == tuple(sorted(test_data_odd))\n        True\n        &gt;&gt;&gt; tuple(SortedLinkedList(test_data_even)) == tuple(sorted(test_data_even))\n        True\n        &quot;&quot;&quot;</span>\n        node = self.head\n        <span class=\"hljs-keyword\">while</span> node:\n            <span class=\"hljs-keyword\">yield</span> node.data\n            node = node.<span class=\"hljs-built_in\">next</span>\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__len__</span>(<span class=\"hljs-params\">self</span>) -&gt; <span class=\"hljs-built_in\">int</span>:\n        <span class=\"hljs-string\">&quot;&quot;&quot;\n        &gt;&gt;&gt; for i in range(3):\n        ...     len(SortedLinkedList(range(i))) == i\n        True\n        True\n        True\n        &gt;&gt;&gt; len(SortedLinkedList(test_data_odd))\n        8\n        &quot;&quot;&quot;</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">len</span>(<span class=\"hljs-built_in\">tuple</span>(<span class=\"hljs-built_in\">iter</span>(self)))\n\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__str__</span>(<span class=\"hljs-params\">self</span>) -&gt; <span class=\"hljs-built_in\">str</span>:\n        <span class=\"hljs-string\">&quot;&quot;&quot;\n        &gt;&gt;&gt; str(SortedLinkedList([]))\n        &#x27;&#x27;\n        &gt;&gt;&gt; str(SortedLinkedList(test_data_odd))\n        &#x27;-11 -&gt; -1 -&gt; 0 -&gt; 1 -&gt; 3 -&gt; 5 -&gt; 7 -&gt; 9&#x27;\n        &gt;&gt;&gt; str(SortedLinkedList(test_data_even))\n        &#x27;-2 -&gt; 0 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 6 -&gt; 8 -&gt; 10&#x27;\n        &quot;&quot;&quot;</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot; -&gt; &quot;</span>.join([<span class=\"hljs-built_in\">str</span>(node) <span class=\"hljs-keyword\">for</span> node <span class=\"hljs-keyword\">in</span> self])\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">merge_lists</span>(<span class=\"hljs-params\">\n    sll_one: SortedLinkedList, sll_two: SortedLinkedList\n</span>) -&gt; SortedLinkedList:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; SSL = SortedLinkedList\n    &gt;&gt;&gt; merged = merge_lists(SSL(test_data_odd), SSL(test_data_even))\n    &gt;&gt;&gt; len(merged)\n    16\n    &gt;&gt;&gt; str(merged)\n    &#x27;-11 -&gt; -2 -&gt; -1 -&gt; 0 -&gt; 0 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7 -&gt; 8 -&gt; 9 -&gt; 10&#x27;\n    &gt;&gt;&gt; list(merged) == list(sorted(test_data_odd + test_data_even))\n    True\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">return</span> SortedLinkedList(<span class=\"hljs-built_in\">list</span>(sll_one) + <span class=\"hljs-built_in\">list</span>(sll_two))\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n    SSL = SortedLinkedList\n    <span class=\"hljs-built_in\">print</span>(merge_lists(SSL(test_data_odd), SSL(test_data_even)))\n"
    }
  },
  "contributors": [
    {
      "name": "Maliha",
      "email": "maliha_786@hotmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
