{
  "slug": "strong-number",
  "name": "Strong Number",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "misc/strong_number.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/misc/strong_number.c",
      "code": "<span class=\"hljs-comment\">/**\n * @file\n * @brief Strong number is a number whose sum of all digitsâ€™ factorial is equal\n * to the number n For example: 145 = 1!(1) + 4!(24) + 5!(120)\n */</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;assert.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdbool.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n\n<span class=\"hljs-comment\">/**\n * Check if given number is strong number or not\n * @param number\n * @return `true` if given number is strong number, otherwise `false`\n */</span>\n<span class=\"hljs-type\">bool</span> <span class=\"hljs-title function_\">isStrong</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> number)</span>\n{\n    <span class=\"hljs-keyword\">if</span> (number &lt; <span class=\"hljs-number\">0</span>)\n    {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n    }\n    <span class=\"hljs-type\">int</span> sum = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-type\">int</span> originalNumber = number;\n    <span class=\"hljs-keyword\">while</span> (originalNumber != <span class=\"hljs-number\">0</span>)\n    {\n        <span class=\"hljs-type\">int</span> remainder = originalNumber % <span class=\"hljs-number\">10</span>;\n        <span class=\"hljs-type\">int</span> factorial = remainder == <span class=\"hljs-number\">0</span> ? <span class=\"hljs-number\">0</span> : <span class=\"hljs-number\">1</span>; <span class=\"hljs-comment\">/* 0! == 1 */</span>\n\n        <span class=\"hljs-comment\">/* calculate factorial of n */</span>\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= remainder; factorial *= i, i++)\n        {\n            ;\n        }\n        sum += factorial;\n        originalNumber /= <span class=\"hljs-number\">10</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> number == sum;\n}\n\n<span class=\"hljs-comment\">/**\n * Test function\n * @return void\n */</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span>\n{\n    assert(isStrong(<span class=\"hljs-number\">145</span>));  <span class=\"hljs-comment\">/* 145 = 1! + 4! + 5! */</span>\n    assert(!isStrong(<span class=\"hljs-number\">543</span>)); <span class=\"hljs-comment\">/* 543 != 5!+ 4! + 3! */</span>\n}\n\n<span class=\"hljs-comment\">/**\n * Driver Code\n * @return None\n */</span>\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\n{\n    test();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
