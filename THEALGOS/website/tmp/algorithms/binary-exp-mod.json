{
  "slug": "binary-exp-mod",
  "name": "Binary Exp Mod",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/binary_exp_mod.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/binary_exp_mod.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">bin_exp_mod</span>(<span class=\"hljs-params\">a, n, b</span>):\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; bin_exp_mod(3, 4, 5)\n    1\n    &gt;&gt;&gt; bin_exp_mod(7, 13, 10)\n    7\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-comment\"># mod b</span>\n    <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-keyword\">not</span> (b == <span class=\"hljs-number\">0</span>), <span class=\"hljs-string\">&quot;This cannot accept modulo that is == 0&quot;</span>\n    <span class=\"hljs-keyword\">if</span> n == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n\n    <span class=\"hljs-keyword\">if</span> n % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">return</span> (bin_exp_mod(a, n - <span class=\"hljs-number\">1</span>, b) * a) % b\n\n    r = bin_exp_mod(a, n / <span class=\"hljs-number\">2</span>, b)\n    <span class=\"hljs-keyword\">return</span> (r * r) % b\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">try</span>:\n        BASE = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter Base : &quot;</span>).strip())\n        POWER = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter Power : &quot;</span>).strip())\n        MODULO = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter Modulo : &quot;</span>).strip())\n    <span class=\"hljs-keyword\">except</span> ValueError:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Invalid literal for integer&quot;</span>)\n\n    <span class=\"hljs-built_in\">print</span>(bin_exp_mod(BASE, POWER, MODULO))\n"
    }
  },
  "contributors": [
    {
      "name": "Anzo Teh",
      "email": "anzoteh@hotmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
