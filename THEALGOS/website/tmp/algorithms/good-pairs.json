{
  "slug": "good-pairs",
  "name": "Good Pairs",
  "categories": ["datastructures", "array"],
  "body": {},
  "implementations": {
    "ruby": {
      "dir": "data_structures/hash_table/good_pairs.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/data_structures/hash_table/good_pairs.rb",
      "code": "<span class=\"hljs-comment\"># Challenge name: Number of good pairs</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Given an array of integers nums.</span>\n<span class=\"hljs-comment\"># A pair (i,j) is called good if nums[i] == nums[j] and i &lt; j.</span>\n<span class=\"hljs-comment\"># Return the number of good pairs.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># <span class=\"hljs-doctag\">@param</span> {Integer[]} nums</span>\n<span class=\"hljs-comment\"># <span class=\"hljs-doctag\">@return</span> {Integer}</span>\n<span class=\"hljs-comment\">#</span>\n\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Approach 1: Hash</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Time Complexity: O(n)</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">num_identical_pairs</span><span class=\"hljs-params\">(nums)</span></span>\n  hash = Hash.new(<span class=\"hljs-number\">0</span>)\n\n  nums.each <span class=\"hljs-keyword\">do</span> <span class=\"hljs-params\">|num|</span>\n    hash[num] = hash[num] + <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">end</span>\n\n  counter = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-comment\"># Count how many times each number appears.</span>\n  <span class=\"hljs-comment\"># If a number appears n times, then n * (n â€“ 1) / 2 good pairs</span>\n  <span class=\"hljs-comment\"># can be made with this number.</span>\n  hash.values.each <span class=\"hljs-keyword\">do</span> <span class=\"hljs-params\">|val|</span>\n    counter += (val * (val - <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">2</span>)\n  <span class=\"hljs-keyword\">end</span>\n\n  counter\n<span class=\"hljs-keyword\">end</span>\n\nnums = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>]\nputs(num_identical_pairs(nums))\n<span class=\"hljs-comment\"># Output: 4</span>\n\nnums = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>]\nputs(num_identical_pairs(nums))\n<span class=\"hljs-comment\"># Output: 6</span>\n\nnums = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]\nputs(num_identical_pairs(nums))\n<span class=\"hljs-comment\"># Output: 0</span>"
    }
  },
  "contributors": [
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 1
    },
    {
      "name": "Jessica Kwok",
      "email": "jessicatckwok@gmail.com",
      "commits": 5
    }
  ],
  "explanationUrl": {}
}
