{
  "slug": "fermats-little-theorem",
  "name": "Fermats Little Theorem",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "dart": {
      "dir": "maths/fermats_little_theorem.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/maths/fermats_little_theorem.dart",
      "code": "<span class=\"hljs-meta\">@Skip</span>(<span class=\"hljs-string\">&#x27;currently failing (see issue #86)&#x27;</span>)\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:test/test.dart&#x27;</span>;\n\n<span class=\"hljs-comment\">/*\n Fermat&#x27;s little Theorem\n Translated from TheAlgorithms/Python\n*/</span>\nbinary_exponentiation(a, n, mod) {\n  <span class=\"hljs-keyword\">if</span> (n == <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (n % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">1</span>) {\n    <span class=\"hljs-keyword\">return</span> (binary_exponentiation(a, n - <span class=\"hljs-number\">1</span>, mod) * a) % mod;\n  }\n  <span class=\"hljs-built_in\">int</span> b = binary_exponentiation(a, n / <span class=\"hljs-number\">2</span>, mod);\n\n  <span class=\"hljs-keyword\">return</span> (b * b) % mod;\n}\n\n<span class=\"hljs-keyword\">void</span> main() {\n  <span class=\"hljs-comment\">// a prime number</span>\n  <span class=\"hljs-built_in\">int</span> p = <span class=\"hljs-number\">701</span>;\n\n  <span class=\"hljs-built_in\">double</span> a = <span class=\"hljs-number\">1000000000</span>;\n  <span class=\"hljs-built_in\">int</span> b = <span class=\"hljs-number\">10</span>;\n\n  <span class=\"hljs-comment\">// using binary exponentiation function, O(log(p)):</span>\n  <span class=\"hljs-built_in\">print</span>((a / b) % p == (a * binary_exponentiation(b, p - <span class=\"hljs-number\">2</span>, p)) % p);\n\n  <span class=\"hljs-comment\">// using Python operators:</span>\n  <span class=\"hljs-built_in\">print</span>((a / b) % p == (a * b ^ (p - <span class=\"hljs-number\">2</span>)) % p);\n}\n"
    }
  },
  "contributors": [
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "Parowicz",
      "email": "arturparowicz@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
