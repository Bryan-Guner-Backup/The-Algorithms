{
  "slug": "y-combinator",
  "name": "Y Combinator",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "aarch64_assembly": {
      "dir": "misc/y_combinator.s",
      "url": "https://github.com/TheAlgorithms/aarch64_assembly/tree/master/misc/y_combinator.s",
      "code": "<span class=\"hljs-comment\">/* ARM assembly AARCH64 Raspberry PI 3B */</span>\n<span class=\"hljs-comment\">/*  program Ycombi64.s   */</span>\n \n<span class=\"hljs-comment\">/*******************************************/</span>\n<span class=\"hljs-comment\">/* Constantes file                         */</span>\n<span class=\"hljs-comment\">/*******************************************/</span>\n<span class=\"hljs-comment\">/* for this file see task include a file in language AArch64 assembly*/</span>\n<span class=\"hljs-symbol\">.include</span> <span class=\"hljs-string\">&quot;../includeConstantesARM64.inc&quot;</span>\n \n<span class=\"hljs-comment\">/*******************************************/</span>\n<span class=\"hljs-comment\">/* Structures                               */</span>\n<span class=\"hljs-comment\">/********************************************/</span>\n<span class=\"hljs-comment\">/* structure function*/</span>\n    .struct  <span class=\"hljs-number\">0</span>\n<span class=\"hljs-symbol\">func_fn:</span>                    <span class=\"hljs-comment\">// next element</span>\n    .struct  func_fn + <span class=\"hljs-number\">8</span> \n<span class=\"hljs-symbol\">func_f_:</span>                    <span class=\"hljs-comment\">// next element</span>\n    .struct  func_f_ + <span class=\"hljs-number\">8</span> \n<span class=\"hljs-symbol\">func_num:</span>\n    .struct  func_num + <span class=\"hljs-number\">8</span> \n<span class=\"hljs-symbol\">func_fin:</span>\n \n<span class=\"hljs-comment\">/* Initialized data */</span>\n<span class=\"hljs-symbol\">.data</span>\n<span class=\"hljs-symbol\">szMessStartPgm:</span>            <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Program start \\n&quot;</span>\n<span class=\"hljs-symbol\">szMessEndPgm:</span>              <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Program normal end.\\n&quot;</span>\n<span class=\"hljs-symbol\">szMessError:</span>               <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;\\033[31mError Allocation !!!\\n&quot;</span>\n \n<span class=\"hljs-symbol\">szFactorielle:</span>             <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Function factorielle : \\n&quot;</span>\n<span class=\"hljs-symbol\">szFibonacci:</span>               <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;Function Fibonacci : \\n&quot;</span>\n<span class=\"hljs-symbol\">szCarriageReturn:</span>          <span class=\"hljs-meta\">.asciz</span> <span class=\"hljs-string\">&quot;\\n&quot;</span>\n \n<span class=\"hljs-comment\">/* datas message display */</span>\n<span class=\"hljs-symbol\">szMessResult:</span>            <span class=\"hljs-meta\">.ascii</span> <span class=\"hljs-string\">&quot;Result value : @ \\n&quot;</span>\n \n<span class=\"hljs-comment\">/* UnInitialized data */</span>\n<span class=\"hljs-symbol\">.bss</span> \n<span class=\"hljs-symbol\">sZoneConv:</span>                <span class=\"hljs-meta\">.skip</span> <span class=\"hljs-number\">100</span>\n<span class=\"hljs-comment\">/*  code section */</span>\n<span class=\"hljs-symbol\">.text</span>\n<span class=\"hljs-symbol\">.global</span> main \n<span class=\"hljs-symbol\">main:</span>                                           <span class=\"hljs-comment\">// program start</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszMessStartPgm                   <span class=\"hljs-comment\">// display start message</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n    <span class=\"hljs-keyword\">adr</span> x0,facFunc                              <span class=\"hljs-comment\">// function factorielle address</span>\n    <span class=\"hljs-keyword\">bl</span> YFunc                                    <span class=\"hljs-comment\">// create Ycombinator</span>\n    <span class=\"hljs-keyword\">mov</span> x19,x0                                   <span class=\"hljs-comment\">// save Ycombinator</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszFactorielle                    <span class=\"hljs-comment\">// display message</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n    <span class=\"hljs-keyword\">mov</span> x20,<span class=\"hljs-number\">#1</span>                                   <span class=\"hljs-comment\">// loop counter</span>\n<span class=\"hljs-number\">1</span>:  <span class=\"hljs-comment\">// start loop</span>\n    <span class=\"hljs-keyword\">mov</span> x0,x20\n    <span class=\"hljs-keyword\">bl</span> numFunc                                  <span class=\"hljs-comment\">// create number structure</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,#-<span class=\"hljs-number\">1</span>                                  <span class=\"hljs-comment\">// allocation error ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">99</span>f\n    <span class=\"hljs-keyword\">mov</span> x1,x0                                   <span class=\"hljs-comment\">// structure number address</span>\n    <span class=\"hljs-keyword\">mov</span> x0,x19                                  <span class=\"hljs-comment\">// Ycombinator address</span>\n    <span class=\"hljs-keyword\">bl</span> callFunc                                 <span class=\"hljs-comment\">// call </span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x0,<span class=\"hljs-symbol\">#func_num</span>]                       <span class=\"hljs-comment\">// load result</span>\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv                        <span class=\"hljs-comment\">// and convert ascii string</span>\n    <span class=\"hljs-keyword\">bl</span> conversion10S                            <span class=\"hljs-comment\">// decimal conversion</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszMessResult\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv\n    <span class=\"hljs-keyword\">bl</span> strInsertAtCharInc                       <span class=\"hljs-comment\">// insert result at @ character</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess                            <span class=\"hljs-comment\">// display message final</span>\n \n    <span class=\"hljs-keyword\">add</span> x20,x20,<span class=\"hljs-number\">#1</span>                              <span class=\"hljs-comment\">// increment loop counter</span>\n    <span class=\"hljs-keyword\">cmp</span> x20,<span class=\"hljs-number\">#10</span>                                 <span class=\"hljs-comment\">// end ?</span>\n    <span class=\"hljs-keyword\">ble</span> <span class=\"hljs-number\">1</span>b                                      <span class=\"hljs-comment\">// no -&gt; loop</span>\n<span class=\"hljs-comment\">/*********Fibonacci  *************/</span>\n    <span class=\"hljs-keyword\">adr</span> x0,fibFunc                              <span class=\"hljs-comment\">// function fibonacci address</span>\n    <span class=\"hljs-keyword\">bl</span> YFunc                                    <span class=\"hljs-comment\">// create Ycombinator</span>\n    <span class=\"hljs-keyword\">mov</span> x19,x0                                  <span class=\"hljs-comment\">// save Ycombinator</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszFibonacci                      <span class=\"hljs-comment\">// display message</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n    <span class=\"hljs-keyword\">mov</span> x20,<span class=\"hljs-number\">#1</span>                                  <span class=\"hljs-comment\">// loop counter</span>\n<span class=\"hljs-number\">2</span>:  <span class=\"hljs-comment\">// start loop</span>\n    <span class=\"hljs-keyword\">mov</span> x0,x20\n    <span class=\"hljs-keyword\">bl</span> numFunc                                  <span class=\"hljs-comment\">// create number structure</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,#-<span class=\"hljs-number\">1</span>                                  <span class=\"hljs-comment\">// allocation error ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">99</span>f\n    <span class=\"hljs-keyword\">mov</span> x1,x0                                   <span class=\"hljs-comment\">// structure number address</span>\n    <span class=\"hljs-keyword\">mov</span> x0,x19                                   <span class=\"hljs-comment\">// Ycombinator address</span>\n    <span class=\"hljs-keyword\">bl</span> callFunc                                 <span class=\"hljs-comment\">// call </span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x0,<span class=\"hljs-symbol\">#func_num</span>]                       <span class=\"hljs-comment\">// load result</span>\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv                        <span class=\"hljs-comment\">// and convert ascii string</span>\n    <span class=\"hljs-keyword\">bl</span> conversion10S\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszMessResult\n    <span class=\"hljs-keyword\">ldr</span> x1,qAdrsZoneConv\n    <span class=\"hljs-keyword\">bl</span> strInsertAtCharInc                       <span class=\"hljs-comment\">// insert result at @ character</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n    <span class=\"hljs-keyword\">add</span> x20,x20,<span class=\"hljs-number\">#1</span>                                   <span class=\"hljs-comment\">// increment loop counter</span>\n    <span class=\"hljs-keyword\">cmp</span> x20,<span class=\"hljs-number\">#10</span>                                  <span class=\"hljs-comment\">// end ?</span>\n    <span class=\"hljs-keyword\">ble</span> <span class=\"hljs-number\">2</span>b                                      <span class=\"hljs-comment\">// no -&gt; loop</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszMessEndPgm                     <span class=\"hljs-comment\">// display end message</span>\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n<span class=\"hljs-number\">99</span>:                                             <span class=\"hljs-comment\">// display error message </span>\n    <span class=\"hljs-keyword\">ldr</span> x0,qAdrszMessError\n    <span class=\"hljs-keyword\">bl</span> affichageMess\n<span class=\"hljs-number\">100</span>:                                            <span class=\"hljs-comment\">// standard end of the program</span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">0</span>                                    <span class=\"hljs-comment\">// return code</span>\n    <span class=\"hljs-keyword\">mov</span> x8,EXIT                                 <span class=\"hljs-comment\">// request to exit program</span>\n    <span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">0</span>                                       <span class=\"hljs-comment\">// perform system call</span>\n<span class=\"hljs-symbol\">qAdrszMessStartPgm:</span>        .quad szMessStartPgm\n<span class=\"hljs-symbol\">qAdrszMessEndPgm:</span>          .quad szMessEndPgm\n<span class=\"hljs-symbol\">qAdrszFactorielle:</span>         .quad szFactorielle\n<span class=\"hljs-symbol\">qAdrszFibonacci:</span>           .quad szFibonacci\n<span class=\"hljs-symbol\">qAdrszMessError:</span>           .quad szMessError\n<span class=\"hljs-symbol\">qAdrszCarriageReturn:</span>      .quad szCarriageReturn\n<span class=\"hljs-symbol\">qAdrszMessResult:</span>          .quad szMessResult\n<span class=\"hljs-symbol\">qAdrsZoneConv:</span>             .quad sZoneConv\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     factorielle function                         */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the Y combinator address  */</span>\n<span class=\"hljs-comment\">/* x1 contains the number structure  */</span>\n<span class=\"hljs-symbol\">facFunc:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    stp x2,x3,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x2,x0                   <span class=\"hljs-comment\">// save Y combinator address</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x1,<span class=\"hljs-symbol\">#func_num</span>]       <span class=\"hljs-comment\">// load number</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,<span class=\"hljs-number\">#1</span>                   <span class=\"hljs-comment\">// &gt; 1 ?</span>\n    <span class=\"hljs-keyword\">bgt</span> <span class=\"hljs-number\">1</span>f                      <span class=\"hljs-comment\">// yes</span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">#1</span>                   <span class=\"hljs-comment\">// create structure number value 1</span>\n    <span class=\"hljs-keyword\">bl</span> numFunc\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n<span class=\"hljs-number\">1</span>:\n    <span class=\"hljs-keyword\">mov</span> x3,x0                   <span class=\"hljs-comment\">// save number</span>\n    <span class=\"hljs-keyword\">sub</span> x0,x0,<span class=\"hljs-number\">#1</span>                   <span class=\"hljs-comment\">// decrement number</span>\n    <span class=\"hljs-keyword\">bl</span> numFunc                  <span class=\"hljs-comment\">// and create new structure number</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,#-<span class=\"hljs-number\">1</span>                  <span class=\"hljs-comment\">// allocation error ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">100</span>f\n    <span class=\"hljs-keyword\">mov</span> x1,x0                   <span class=\"hljs-comment\">// new structure number -&gt; param 1</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x2,<span class=\"hljs-symbol\">#func_f_</span>]        <span class=\"hljs-comment\">// load function address to execute</span>\n    <span class=\"hljs-keyword\">bl</span> callFunc                 <span class=\"hljs-comment\">// call</span>\n    <span class=\"hljs-keyword\">ldr</span> x1,[x0,<span class=\"hljs-symbol\">#func_num</span>]       <span class=\"hljs-comment\">// load new result</span>\n    <span class=\"hljs-keyword\">mul</span> x0,x1,x3                <span class=\"hljs-comment\">// and multiply by precedent</span>\n    <span class=\"hljs-keyword\">bl</span> numFunc                  <span class=\"hljs-comment\">// and create new structure number</span>\n                                <span class=\"hljs-comment\">// and return her address in x0</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x2,x3,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                            <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     fibonacci function                         */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the Y combinator address  */</span>\n<span class=\"hljs-comment\">/* x1 contains the number structure  */</span>\n<span class=\"hljs-symbol\">fibFunc:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    stp x2,x3,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    stp x4,x5,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x2,x0                   <span class=\"hljs-comment\">// save Y combinator address</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x1,<span class=\"hljs-symbol\">#func_num</span>]       <span class=\"hljs-comment\">// load number</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,<span class=\"hljs-number\">#1</span>                   <span class=\"hljs-comment\">// &gt; 1 ?</span>\n    <span class=\"hljs-keyword\">bgt</span> <span class=\"hljs-number\">1</span>f                      <span class=\"hljs-comment\">// yes</span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">#1</span>                   <span class=\"hljs-comment\">// create structure number value 1</span>\n    <span class=\"hljs-keyword\">bl</span> numFunc\n    <span class=\"hljs-keyword\">b</span> <span class=\"hljs-number\">100</span>f\n<span class=\"hljs-number\">1</span>:\n    <span class=\"hljs-keyword\">mov</span> x3,x0                   <span class=\"hljs-comment\">// save number</span>\n    <span class=\"hljs-keyword\">sub</span> x0,x0,<span class=\"hljs-number\">#1</span>                <span class=\"hljs-comment\">// decrement number</span>\n    <span class=\"hljs-keyword\">bl</span> numFunc                  <span class=\"hljs-comment\">// and create new structure number</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,#-<span class=\"hljs-number\">1</span>                  <span class=\"hljs-comment\">// allocation error ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">100</span>f\n    <span class=\"hljs-keyword\">mov</span> x1,x0                   <span class=\"hljs-comment\">// new structure number -&gt; param 1</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x2,<span class=\"hljs-symbol\">#func_f_</span>]        <span class=\"hljs-comment\">// load function address to execute</span>\n    <span class=\"hljs-keyword\">bl</span> callFunc                 <span class=\"hljs-comment\">// call</span>\n    <span class=\"hljs-keyword\">ldr</span> x4,[x0,<span class=\"hljs-symbol\">#func_num</span>]       <span class=\"hljs-comment\">// load new result</span>\n    <span class=\"hljs-keyword\">sub</span> x0,x3,<span class=\"hljs-number\">#2</span>                <span class=\"hljs-comment\">// new number - 2</span>\n    <span class=\"hljs-keyword\">bl</span> numFunc                  <span class=\"hljs-comment\">// and create new structure number</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,#-<span class=\"hljs-number\">1</span>                  <span class=\"hljs-comment\">// allocation error ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">100</span>f\n    <span class=\"hljs-keyword\">mov</span> x1,x0                   <span class=\"hljs-comment\">// new structure number -&gt; param 1</span>\n    <span class=\"hljs-keyword\">ldr</span> x0,[x2,<span class=\"hljs-symbol\">#func_f_</span>]        <span class=\"hljs-comment\">// load function address to execute</span>\n    <span class=\"hljs-keyword\">bl</span> callFunc                 <span class=\"hljs-comment\">// call</span>\n    <span class=\"hljs-keyword\">ldr</span> x1,[x0,<span class=\"hljs-symbol\">#func_num</span>]       <span class=\"hljs-comment\">// load new result</span>\n    <span class=\"hljs-keyword\">add</span> x0,x1,x4                <span class=\"hljs-comment\">// add two results</span>\n    <span class=\"hljs-keyword\">bl</span> numFunc                  <span class=\"hljs-comment\">// and create new structure number</span>\n                                <span class=\"hljs-comment\">// and return her address in x0</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x4,x5,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x2,x3,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                            <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     call function                         */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of the function  */</span>\n<span class=\"hljs-comment\">/* x1 contains the address of the function 1 */</span>\n<span class=\"hljs-symbol\">callFunc:</span>\n    stp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">ldr</span> x2,[x0,<span class=\"hljs-symbol\">#func_fn</span>]           <span class=\"hljs-comment\">// load function address to execute</span>\n    <span class=\"hljs-keyword\">blr</span> x2                         <span class=\"hljs-comment\">// and call it</span>\n    ldp x2,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                            <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     create Y combinator function                         */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the address of the function  */</span>\n<span class=\"hljs-symbol\">YFunc:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x1,<span class=\"hljs-number\">#0</span>\n    <span class=\"hljs-keyword\">bl</span> newFunc\n    <span class=\"hljs-keyword\">cmp</span> x0,#-<span class=\"hljs-number\">1</span>                     <span class=\"hljs-comment\">// allocation error ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">100</span>f\n    <span class=\"hljs-keyword\">str</span> x0,[x0,<span class=\"hljs-symbol\">#func_f_</span>]           <span class=\"hljs-comment\">// store function and return in x0</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                            <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     create structure number function                         */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the number  */</span>\n<span class=\"hljs-symbol\">numFunc:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    stp x2,x3,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x2,x0                      <span class=\"hljs-comment\">// save number</span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">#0</span>                      <span class=\"hljs-comment\">// function null</span>\n    <span class=\"hljs-keyword\">mov</span> x1,<span class=\"hljs-number\">#0</span>                      <span class=\"hljs-comment\">// function null</span>\n    <span class=\"hljs-keyword\">bl</span> newFunc\n    <span class=\"hljs-keyword\">cmp</span> x0,#-<span class=\"hljs-number\">1</span>                     <span class=\"hljs-comment\">// allocation error ?</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">100</span>f\n    <span class=\"hljs-keyword\">str</span> x2,[x0,<span class=\"hljs-symbol\">#func_num</span>]          <span class=\"hljs-comment\">// store number in new structure</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x2,x3,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                            <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/*     new function                                               */</span> \n<span class=\"hljs-comment\">/******************************************************************/</span>\n<span class=\"hljs-comment\">/* x0 contains the function address   */</span>\n<span class=\"hljs-comment\">/* x1 contains the function address 1   */</span>\n<span class=\"hljs-symbol\">newFunc:</span>\n    stp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    stp x3,x4,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    stp x5,x8,[<span class=\"hljs-built_in\">sp</span>,-<span class=\"hljs-number\">16</span>]!            <span class=\"hljs-comment\">// save  registers</span>\n    <span class=\"hljs-keyword\">mov</span> x4,x0                      <span class=\"hljs-comment\">// save address</span>\n    <span class=\"hljs-keyword\">mov</span> x5,x1                      <span class=\"hljs-comment\">// save adresse 1</span>\n                                   <span class=\"hljs-comment\">// allocation place on the heap</span>\n    <span class=\"hljs-keyword\">mov</span> x0,<span class=\"hljs-number\">#0</span>                      <span class=\"hljs-comment\">// allocation place heap</span>\n    <span class=\"hljs-keyword\">mov</span> x8,BRK                     <span class=\"hljs-comment\">// call system &#x27;brk&#x27;</span>\n    <span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">#0</span>\n    <span class=\"hljs-keyword\">mov</span> x6,x0                      <span class=\"hljs-comment\">// save address heap for output string</span>\n    <span class=\"hljs-keyword\">add</span> x0,x0,<span class=\"hljs-symbol\">#func_fin</span>            <span class=\"hljs-comment\">// reservation place one element</span>\n    <span class=\"hljs-keyword\">mov</span> x8,BRK                     <span class=\"hljs-comment\">// call system &#x27;brk&#x27;</span>\n    <span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">#0</span>\n    <span class=\"hljs-keyword\">cmp</span> x0,#-<span class=\"hljs-number\">1</span>                     <span class=\"hljs-comment\">// allocation error</span>\n    <span class=\"hljs-keyword\">beq</span> <span class=\"hljs-number\">100</span>f\n    <span class=\"hljs-keyword\">mov</span> x0,x6\n    <span class=\"hljs-keyword\">str</span> x4,[x0,<span class=\"hljs-symbol\">#func_fn</span>]           <span class=\"hljs-comment\">// store address</span>\n    <span class=\"hljs-keyword\">str</span> x5,[x0,<span class=\"hljs-symbol\">#func_f_</span>]\n    <span class=\"hljs-keyword\">str</span> xzr,[x0,<span class=\"hljs-symbol\">#func_num</span>]         <span class=\"hljs-comment\">// store zero to number</span>\n<span class=\"hljs-number\">100</span>:\n    ldp x5,x8,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x3,x4,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ldp x1,<span class=\"hljs-built_in\">lr</span>,[<span class=\"hljs-built_in\">sp</span>],<span class=\"hljs-number\">16</span>              <span class=\"hljs-comment\">// restaur  2 registers</span>\n    ret                            <span class=\"hljs-comment\">// return to address lr x30</span>\n<span class=\"hljs-comment\">/********************************************************/</span>\n<span class=\"hljs-comment\">/*        File Include fonctions                        */</span>\n<span class=\"hljs-comment\">/********************************************************/</span>\n<span class=\"hljs-comment\">/* for this file see task include a file in language AArch64 assembly */</span>\n<span class=\"hljs-symbol\">.include</span> <span class=\"hljs-string\">&quot;../includeARM64.inc&quot;</span>\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
