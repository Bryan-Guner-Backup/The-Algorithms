{
  "slug": "permutationandcombination",
  "name": "PermutationAndCombination",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths/PermutationAndCombination.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/PermutationAndCombination.js",
      "code": "<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@details</span> Calculates the number of permutations and combinations.\n * <span class=\"hljs-doctag\">@external</span>_link (Permutation And Combinations)[https://www.geeksforgeeks.org/permutation-and-combination/]\n */</span>\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@brief</span> Calculates the factorial of the given number.\n * <span class=\"hljs-doctag\">@param</span> num: integer\n * <span class=\"hljs-doctag\">@details</span> Factorial of n = n * (n - 1) * (n - 2) * ... * 1\n * <span class=\"hljs-doctag\">@returns</span> integer: Factorial of the number.\n            NaN: if negative number is provided.\n */</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">factorial</span> = (<span class=\"hljs-params\">n</span>) =&gt; {\n  <span class=\"hljs-keyword\">if</span> (n &gt;= <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">if</span> (n === <span class=\"hljs-number\">0</span>) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">return</span> n * <span class=\"hljs-title function_\">factorial</span>(n - <span class=\"hljs-number\">1</span>)\n    }\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Na</span>N\n  }\n}\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@brief</span> Calculates the number of Permutations from the given data.\n * <span class=\"hljs-doctag\">@param</span>\n * n: integer -&gt; number of items.\n * r: integer -&gt; number of times n is taken.\n * <span class=\"hljs-doctag\">@returns</span> integer: The number of permutations.\n            NaN: if negative number is provided.\n */</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">permutation</span> = (<span class=\"hljs-params\">n, r</span>) =&gt; {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">factorial</span>(n) / <span class=\"hljs-title function_\">factorial</span>(n - r)\n}\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@brief</span> Calculates the number of Combinations from the given data.\n * <span class=\"hljs-doctag\">@param</span>\n * n -&gt; number of items.\n * r -&gt; number of times n is taken.\n * <span class=\"hljs-doctag\">@returns</span> integer: The number of combinations.\n            NaN: if negative number is provided.\n */</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">combination</span> = (<span class=\"hljs-params\">n, r</span>) =&gt; {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">factorial</span>(n) / (<span class=\"hljs-title function_\">factorial</span>(r) * <span class=\"hljs-title function_\">factorial</span>(n - r))\n}\n\n<span class=\"hljs-comment\">// Exports the functions to be used in other files.</span>\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span>.<span class=\"hljs-property\">factorial</span> = factorial\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span>.<span class=\"hljs-property\">permutation</span> = permutation\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span>.<span class=\"hljs-property\">combination</span> = combination\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@example</span>\n\n   const funcs = require(&quot;./PermutationAndCombination.js&quot;);\n\n   console.log(funcs.factorial(5));\n   console.log(funcs.permutation(5, 2));\n   console.log(funcs.combination(5, 2));\n\n * <span class=\"hljs-doctag\">@output</span>\n   120\n   20\n   10\n */</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Shreyas Sable",
      "email": "72278840+Shreyas-OwO@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
