{
  "slug": "matrixexponentiationrecursive",
  "name": "MatrixExponentiationRecursive",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths/MatrixExponentiationRecursive.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/MatrixExponentiationRecursive.js",
      "code": "<span class=\"hljs-comment\">/*\n  Source:\n    https://en.wikipedia.org/wiki/Exponentiation_by_squaring\n\n  Complexity:\n    O(d^3 log n)\n    where: d is the dimension of the square matrix\n           n is the power the matrix is raised to\n*/</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">Identity</span> = (<span class=\"hljs-params\">n</span>) =&gt; {\n  <span class=\"hljs-comment\">// Input: n: int</span>\n  <span class=\"hljs-comment\">// Output: res: Identity matrix of size n x n</span>\n  <span class=\"hljs-comment\">// Complexity: O(n^2)</span>\n  <span class=\"hljs-keyword\">const</span> res = []\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n    res[i] = []\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j++) {\n      res[i][j] = i === j ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">0</span>\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> res\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">MatMult</span> = (<span class=\"hljs-params\">matA, matB</span>) =&gt; {\n  <span class=\"hljs-comment\">// Input: matA: 2D Array of Numbers of size n x n</span>\n  <span class=\"hljs-comment\">//        matB: 2D Array of Numbers of size n x n</span>\n  <span class=\"hljs-comment\">// Output: matA x matB: 2D Array of Numbers of size n x n</span>\n  <span class=\"hljs-comment\">// Complexity: O(n^3)</span>\n  <span class=\"hljs-keyword\">const</span> n = matA.<span class=\"hljs-property\">length</span>\n  <span class=\"hljs-keyword\">const</span> matC = []\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n    matC[i] = []\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j++) {\n      matC[i][j] = <span class=\"hljs-number\">0</span>\n    }\n  }\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j++) {\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> k = <span class=\"hljs-number\">0</span>; k &lt; n; k++) {\n        matC[i][j] += matA[i][k] * matB[k][j]\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> matC\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">MatrixExponentiationRecursive</span> = (<span class=\"hljs-params\">mat, m</span>) =&gt; {\n  <span class=\"hljs-comment\">// Input: mat: 2D Array of Numbers of size n x n</span>\n  <span class=\"hljs-comment\">// Output: mat^n: 2D Array of Numbers of size n x n</span>\n  <span class=\"hljs-comment\">// Complexity: O(n^3 log m)</span>\n  <span class=\"hljs-keyword\">if</span> (m === <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-comment\">// return identity matrix of size n x n</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Identity</span>(mat.<span class=\"hljs-property\">length</span>)\n  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (m % <span class=\"hljs-number\">2</span> === <span class=\"hljs-number\">1</span>) {\n    <span class=\"hljs-comment\">// tmp = mat ^ m-1</span>\n    <span class=\"hljs-keyword\">const</span> tmp = <span class=\"hljs-title class_\">MatrixExponentiationRecursive</span>(mat, m - <span class=\"hljs-number\">1</span>)\n    <span class=\"hljs-comment\">/// return tmp * mat = (mat ^ m-1) * mat = mat ^ m</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">MatMult</span>(tmp, mat)\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// tmp = mat ^ m/2</span>\n    <span class=\"hljs-keyword\">const</span> tmp = <span class=\"hljs-title class_\">MatrixExponentiationRecursive</span>(mat, m &gt;&gt; <span class=\"hljs-number\">1</span>)\n    <span class=\"hljs-comment\">// return tmp * tmp = (mat ^ m/2) ^ 2 = mat ^ m</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">MatMult</span>(tmp, tmp)\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">main</span> = (<span class=\"hljs-params\"></span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> mat = [[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>], [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>], [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>]]\n\n  <span class=\"hljs-comment\">// mat ^ 0 = [ [ 1, 0, 0 ], [ 0, 1, 0 ], [ 0, 0, 1 ] ]</span>\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">MatrixExponentiationRecursive</span>(mat, <span class=\"hljs-number\">0</span>))\n\n  <span class=\"hljs-comment\">// mat ^ 1 = [ [ 1, 0, 2 ], [ 2, 1, 0 ], [ 0, 2, 1 ] ]</span>\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">MatrixExponentiationRecursive</span>(mat, <span class=\"hljs-number\">1</span>))\n\n  <span class=\"hljs-comment\">// mat ^ 2 = [ [ 1, 4, 4 ], [ 4, 1, 4 ], [ 4, 4, 1 ] ]</span>\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">MatrixExponentiationRecursive</span>(mat, <span class=\"hljs-number\">2</span>))\n\n  <span class=\"hljs-comment\">// mat ^ 5 = [ [ 1, 4, 4 ], [ 4, 1, 4 ], [ 4, 4, 1 ] ]</span>\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">MatrixExponentiationRecursive</span>(mat, <span class=\"hljs-number\">5</span>))\n}\n\n<span class=\"hljs-title function_\">main</span>()\n"
    }
  },
  "contributors": [
    {
      "name": "utkarsh",
      "email": "ucponia@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
