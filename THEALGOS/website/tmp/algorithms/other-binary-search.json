{
  "slug": "other-binary-search",
  "name": "Other Binary Search",
  "categories": ["searches"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "searching/other_binary_search.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/searching/other_binary_search.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdlib.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> len 5</span>\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">binarySearch</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> <span class=\"hljs-built_in\">array</span>[], <span class=\"hljs-type\">int</span> leng, <span class=\"hljs-type\">int</span> searchX)</span>\n{\n    <span class=\"hljs-type\">int</span> pos = <span class=\"hljs-number\">-1</span>, right, left, i = <span class=\"hljs-number\">0</span>;\n\n    left = <span class=\"hljs-number\">0</span>;\n    right = leng - <span class=\"hljs-number\">1</span>;\n\n    <span class=\"hljs-keyword\">while</span> (left &lt;= right)\n    {\n        pos = left + (right - left) / <span class=\"hljs-number\">2</span>;\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">array</span>[pos] == searchX)\n        {\n            <span class=\"hljs-keyword\">return</span> pos;\n        }\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">array</span>[pos] &gt; searchX)\n        {\n            right = pos - <span class=\"hljs-number\">1</span>;\n        }\n        <span class=\"hljs-keyword\">else</span>\n        {\n            left = pos + <span class=\"hljs-number\">1</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">/* not found */</span>\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> argc, <span class=\"hljs-type\">char</span> *argv[])</span>\n{\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-built_in\">array</span>[len] = {<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">16</span>};\n\n    <span class=\"hljs-type\">int</span> position;\n    position = binarySearch(<span class=\"hljs-built_in\">array</span>, len, <span class=\"hljs-number\">5</span>);\n\n    <span class=\"hljs-keyword\">if</span> (position &lt; <span class=\"hljs-number\">0</span>)\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;The number %d doesnt exist in array\\n&quot;</span>, <span class=\"hljs-number\">5</span>);\n    <span class=\"hljs-keyword\">else</span>\n    {\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;The number %d exist in array at position : %d \\n&quot;</span>, <span class=\"hljs-number\">5</span>, position);\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "krishna.vedala@ieee.org",
      "commits": 1
    },
    {
      "name": "koseokkyu",
      "email": "dighrh@naver.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
