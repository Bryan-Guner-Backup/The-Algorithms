{
  "slug": "happy-number",
  "name": "Happy Number",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "others/happy_number.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/others/happy_number.cpp",
      "code": "<span class=\"hljs-comment\">/**\n * @file\n * @brief A happy number is a number whose sum of digits is calculated until the\n * sum is a single digit, and this sum turns out to be 1\n */</span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-comment\">/**\n * Checks if a decimal number is a happy number\n * \\returns true if happy else false\n */</span>\n<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n<span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">is_happy</span><span class=\"hljs-params\">(T n)</span> </span>{\n    T s = <span class=\"hljs-number\">0</span>;              <span class=\"hljs-comment\">// stores sum of digits</span>\n    <span class=\"hljs-keyword\">while</span> (n &gt; <span class=\"hljs-number\">9</span>) {       <span class=\"hljs-comment\">// while number is &gt; 9, there are more than 1 digit</span>\n        <span class=\"hljs-keyword\">while</span> (n != <span class=\"hljs-number\">0</span>) {  <span class=\"hljs-comment\">// get digit</span>\n            T d = n % <span class=\"hljs-number\">10</span>;\n            s += d;\n            n /= <span class=\"hljs-number\">10</span>;\n        }\n        n = s;\n        s = <span class=\"hljs-number\">0</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> (n == <span class=\"hljs-number\">1</span>) ? <span class=\"hljs-literal\">true</span> : <span class=\"hljs-literal\">false</span>;  <span class=\"hljs-comment\">// true if k == 1</span>\n}\n\n<span class=\"hljs-comment\">/** Main function */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-type\">int</span> n;\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter a number:&quot;</span>;\n    std::cin &gt;&gt; n;\n\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">is_happy</span>(n))\n        std::cout &lt;&lt; n &lt;&lt; <span class=\"hljs-string\">&quot; is a happy number&quot;</span> &lt;&lt; std::endl;\n    <span class=\"hljs-keyword\">else</span>\n        std::cout &lt;&lt; n &lt;&lt; <span class=\"hljs-string\">&quot; is not a happy number&quot;</span> &lt;&lt; std::endl;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
