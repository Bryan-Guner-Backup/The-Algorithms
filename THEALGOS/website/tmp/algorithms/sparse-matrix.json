{
  "slug": "sparse-matrix",
  "name": "Sparse Matrix",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "others/sparse_matrix.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/others/sparse_matrix.cpp",
      "code": "<span class=\"hljs-comment\">/** @file\n * A sparse matrix is a matrix which has number of zeroes greater than\n * \\f$\\frac{m\\times n}{2}\\f$, where m and n are the dimensions of the matrix.\n */</span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-comment\">/** main function */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-type\">int</span> m, n;\n    <span class=\"hljs-type\">int</span> counterZeros = <span class=\"hljs-number\">0</span>;\n\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter dimensions of matrix (seperated with space): &quot;</span>;\n    std::cin &gt;&gt; m;\n    std::cin &gt;&gt; n;\n\n    <span class=\"hljs-type\">int</span> **a = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">int</span> *[m];\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i++) a[i] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">int</span>[n];\n\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter matrix elements:&quot;</span>;\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;\\n&quot;</span>;\n\n    <span class=\"hljs-comment\">// reads the matrix from stdin</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i++) {\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j++) {\n            std::cout &lt;&lt; <span class=\"hljs-string\">&quot;element? &quot;</span>;\n            std::cin &gt;&gt; a[i][j];\n        }\n    }\n\n    <span class=\"hljs-comment\">// counts the zero&#x27;s</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i++) {\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j++) {\n            <span class=\"hljs-keyword\">if</span> (a[i][j] == <span class=\"hljs-number\">0</span>)\n                counterZeros++;  <span class=\"hljs-comment\">// Counting number of zeroes</span>\n        }\n    }\n\n    <span class=\"hljs-comment\">// makes sure the matrix is a sparse matrix</span>\n    <span class=\"hljs-keyword\">if</span> (counterZeros &gt; ((m * n) / <span class=\"hljs-number\">2</span>))  <span class=\"hljs-comment\">// Checking for sparse matrix</span>\n        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Sparse matrix&quot;</span>;\n    <span class=\"hljs-keyword\">else</span>\n        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Not a sparse matrix&quot;</span>;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i++) <span class=\"hljs-keyword\">delete</span>[] a[i];\n    <span class=\"hljs-keyword\">delete</span>[] a;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
