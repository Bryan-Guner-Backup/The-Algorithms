{
  "slug": "netflix-scrapper",
  "name": "Netflix Scrapper",
  "categories": ["automaton"],
  "body": {
    "en": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h3 id=\"netflix-scrapper\">Netflix Scrapper</h3>\n<p>The purpose of the code is to get details of all the Categories on Netflix and then to gather information about Sub-Categories and movies under each Sub-Category.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\n<span class=\"hljs-keyword\">import</span> requests\n<span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">make_soup</span>(<span class=\"hljs-params\">url</span>):\n    <span class=\"hljs-keyword\">return</span> BeautifulSoup(requests.get(url).text, <span class=\"hljs-string\">'html.parser'</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">browseCategory</span>(<span class=\"hljs-params\">category, data</span>):\n    category_url = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">2</span>]\n    category = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>]\n    subCategory_details = []\n    count = <span class=\"hljs-number\">1</span>\n    subCategories = []\n    soup = make_soup(category_url)\n    cards_list = soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    <span class=\"hljs-keyword\">for</span> card <span class=\"hljs-keyword\">in</span> cards_list:\n        <span class=\"hljs-keyword\">try</span>:\n            subCategory = card.find(<span class=\"hljs-string\">'h1'</span>).text\n            movie_list = []\n            movies = card.find_all(<span class=\"hljs-string\">'li'</span>)\n            movie_count = <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">for</span> movie <span class=\"hljs-keyword\">in</span> movies:\n                <span class=\"hljs-keyword\">try</span>:\n                    movie_title = movie.find(<span class=\"hljs-string\">'span'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-title-name'</span>}).text\n                    movie_link = movie.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n                    movie_list.append([movie_count, movie_title , movie_link])\n                    movie_count += <span class=\"hljs-number\">1</span>\n                <span class=\"hljs-keyword\">except</span> AttributeError:\n                    <span class=\"hljs-keyword\">pass</span>\n            subCategories.append(subCategory)\n            subCategory_details.append(movie_list)\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-keyword\">return</span> subCategories, subCategory_details, count-<span class=\"hljs-number\">1</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">getCategories</span>(<span class=\"hljs-params\">base_url</span>):\n    category_soup = make_soup(base_url)\n    categories = category_soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    result=[]\n    count = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">for</span> category <span class=\"hljs-keyword\">in</span> categories:\n        <span class=\"hljs-keyword\">try</span>:\n            Title = category.find(<span class=\"hljs-string\">'span'</span>, {<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row-name'</span>}).text\n            url = category.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n            result.append([count, Title, url])\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-comment\">#print(result)</span>\n    <span class=\"hljs-keyword\">return</span> result</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    netflix_url = <span class=\"hljs-string\">\"https://www.netflix.com/in/browse/genre/839338\"</span>\n    categories = getCategories(netflix_url)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Please select one of the category\"</span>)\n    df = pd.DataFrame(np.array(categories), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n    <span class=\"hljs-built_in\">print</span>(df.to_string(index=<span class=\"hljs-literal\">False</span>))\n    choice = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">'\\n\\n Please Enter your Choice: \\n'</span>))\n    subCategories, movieList, count = browseCategory(choice, categories)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, count):\n        <span class=\"hljs-built_in\">print</span>(subCategories[i],<span class=\"hljs-string\">'\\n\\n'</span>)\n        subCategory_df = pd.DataFrame(np.array(movieList[i]), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n        <span class=\"hljs-built_in\">print</span>(subCategory_df.to_string(index=<span class=\"hljs-literal\">False</span>))\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"\\n\\n\\n\"</span>)\n    \n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">'__main__'</span>:\n    main()</code></pre></div></div></div></div>",
    "de": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h3 id=\"netflix-scrapper\">Netflix Scrapper</h3>\n<p>The purpose of the code is to get details of all the Categories on Netflix and then to gather information about Sub-Categories and movies under each Sub-Category.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\n<span class=\"hljs-keyword\">import</span> requests\n<span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">make_soup</span>(<span class=\"hljs-params\">url</span>):\n    <span class=\"hljs-keyword\">return</span> BeautifulSoup(requests.get(url).text, <span class=\"hljs-string\">'html.parser'</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">browseCategory</span>(<span class=\"hljs-params\">category, data</span>):\n    category_url = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">2</span>]\n    category = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>]\n    subCategory_details = []\n    count = <span class=\"hljs-number\">1</span>\n    subCategories = []\n    soup = make_soup(category_url)\n    cards_list = soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    <span class=\"hljs-keyword\">for</span> card <span class=\"hljs-keyword\">in</span> cards_list:\n        <span class=\"hljs-keyword\">try</span>:\n            subCategory = card.find(<span class=\"hljs-string\">'h1'</span>).text\n            movie_list = []\n            movies = card.find_all(<span class=\"hljs-string\">'li'</span>)\n            movie_count = <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">for</span> movie <span class=\"hljs-keyword\">in</span> movies:\n                <span class=\"hljs-keyword\">try</span>:\n                    movie_title = movie.find(<span class=\"hljs-string\">'span'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-title-name'</span>}).text\n                    movie_link = movie.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n                    movie_list.append([movie_count, movie_title , movie_link])\n                    movie_count += <span class=\"hljs-number\">1</span>\n                <span class=\"hljs-keyword\">except</span> AttributeError:\n                    <span class=\"hljs-keyword\">pass</span>\n            subCategories.append(subCategory)\n            subCategory_details.append(movie_list)\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-keyword\">return</span> subCategories, subCategory_details, count-<span class=\"hljs-number\">1</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">getCategories</span>(<span class=\"hljs-params\">base_url</span>):\n    category_soup = make_soup(base_url)\n    categories = category_soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    result=[]\n    count = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">for</span> category <span class=\"hljs-keyword\">in</span> categories:\n        <span class=\"hljs-keyword\">try</span>:\n            Title = category.find(<span class=\"hljs-string\">'span'</span>, {<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row-name'</span>}).text\n            url = category.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n            result.append([count, Title, url])\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-comment\">#print(result)</span>\n    <span class=\"hljs-keyword\">return</span> result</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    netflix_url = <span class=\"hljs-string\">\"https://www.netflix.com/in/browse/genre/839338\"</span>\n    categories = getCategories(netflix_url)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Please select one of the category\"</span>)\n    df = pd.DataFrame(np.array(categories), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n    <span class=\"hljs-built_in\">print</span>(df.to_string(index=<span class=\"hljs-literal\">False</span>))\n    choice = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">'\\n\\n Please Enter your Choice: \\n'</span>))\n    subCategories, movieList, count = browseCategory(choice, categories)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, count):\n        <span class=\"hljs-built_in\">print</span>(subCategories[i],<span class=\"hljs-string\">'\\n\\n'</span>)\n        subCategory_df = pd.DataFrame(np.array(movieList[i]), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n        <span class=\"hljs-built_in\">print</span>(subCategory_df.to_string(index=<span class=\"hljs-literal\">False</span>))\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"\\n\\n\\n\"</span>)\n    \n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">'__main__'</span>:\n    main()</code></pre></div></div></div></div>",
    "es": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h3 id=\"netflix-scrapper\">Netflix Scrapper</h3>\n<p>The purpose of the code is to get details of all the Categories on Netflix and then to gather information about Sub-Categories and movies under each Sub-Category.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\n<span class=\"hljs-keyword\">import</span> requests\n<span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">make_soup</span>(<span class=\"hljs-params\">url</span>):\n    <span class=\"hljs-keyword\">return</span> BeautifulSoup(requests.get(url).text, <span class=\"hljs-string\">'html.parser'</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">browseCategory</span>(<span class=\"hljs-params\">category, data</span>):\n    category_url = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">2</span>]\n    category = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>]\n    subCategory_details = []\n    count = <span class=\"hljs-number\">1</span>\n    subCategories = []\n    soup = make_soup(category_url)\n    cards_list = soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    <span class=\"hljs-keyword\">for</span> card <span class=\"hljs-keyword\">in</span> cards_list:\n        <span class=\"hljs-keyword\">try</span>:\n            subCategory = card.find(<span class=\"hljs-string\">'h1'</span>).text\n            movie_list = []\n            movies = card.find_all(<span class=\"hljs-string\">'li'</span>)\n            movie_count = <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">for</span> movie <span class=\"hljs-keyword\">in</span> movies:\n                <span class=\"hljs-keyword\">try</span>:\n                    movie_title = movie.find(<span class=\"hljs-string\">'span'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-title-name'</span>}).text\n                    movie_link = movie.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n                    movie_list.append([movie_count, movie_title , movie_link])\n                    movie_count += <span class=\"hljs-number\">1</span>\n                <span class=\"hljs-keyword\">except</span> AttributeError:\n                    <span class=\"hljs-keyword\">pass</span>\n            subCategories.append(subCategory)\n            subCategory_details.append(movie_list)\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-keyword\">return</span> subCategories, subCategory_details, count-<span class=\"hljs-number\">1</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">getCategories</span>(<span class=\"hljs-params\">base_url</span>):\n    category_soup = make_soup(base_url)\n    categories = category_soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    result=[]\n    count = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">for</span> category <span class=\"hljs-keyword\">in</span> categories:\n        <span class=\"hljs-keyword\">try</span>:\n            Title = category.find(<span class=\"hljs-string\">'span'</span>, {<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row-name'</span>}).text\n            url = category.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n            result.append([count, Title, url])\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-comment\">#print(result)</span>\n    <span class=\"hljs-keyword\">return</span> result</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    netflix_url = <span class=\"hljs-string\">\"https://www.netflix.com/in/browse/genre/839338\"</span>\n    categories = getCategories(netflix_url)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Please select one of the category\"</span>)\n    df = pd.DataFrame(np.array(categories), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n    <span class=\"hljs-built_in\">print</span>(df.to_string(index=<span class=\"hljs-literal\">False</span>))\n    choice = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">'\\n\\n Please Enter your Choice: \\n'</span>))\n    subCategories, movieList, count = browseCategory(choice, categories)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, count):\n        <span class=\"hljs-built_in\">print</span>(subCategories[i],<span class=\"hljs-string\">'\\n\\n'</span>)\n        subCategory_df = pd.DataFrame(np.array(movieList[i]), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n        <span class=\"hljs-built_in\">print</span>(subCategory_df.to_string(index=<span class=\"hljs-literal\">False</span>))\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"\\n\\n\\n\"</span>)\n    \n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">'__main__'</span>:\n    main()</code></pre></div></div></div></div>",
    "eo": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h3 id=\"netflix-scrapper\">Netflix Scrapper</h3>\n<p>The purpose of the code is to get details of all the Categories on Netflix and then to gather information about Sub-Categories and movies under each Sub-Category.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\n<span class=\"hljs-keyword\">import</span> requests\n<span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">make_soup</span>(<span class=\"hljs-params\">url</span>):\n    <span class=\"hljs-keyword\">return</span> BeautifulSoup(requests.get(url).text, <span class=\"hljs-string\">'html.parser'</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">browseCategory</span>(<span class=\"hljs-params\">category, data</span>):\n    category_url = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">2</span>]\n    category = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>]\n    subCategory_details = []\n    count = <span class=\"hljs-number\">1</span>\n    subCategories = []\n    soup = make_soup(category_url)\n    cards_list = soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    <span class=\"hljs-keyword\">for</span> card <span class=\"hljs-keyword\">in</span> cards_list:\n        <span class=\"hljs-keyword\">try</span>:\n            subCategory = card.find(<span class=\"hljs-string\">'h1'</span>).text\n            movie_list = []\n            movies = card.find_all(<span class=\"hljs-string\">'li'</span>)\n            movie_count = <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">for</span> movie <span class=\"hljs-keyword\">in</span> movies:\n                <span class=\"hljs-keyword\">try</span>:\n                    movie_title = movie.find(<span class=\"hljs-string\">'span'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-title-name'</span>}).text\n                    movie_link = movie.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n                    movie_list.append([movie_count, movie_title , movie_link])\n                    movie_count += <span class=\"hljs-number\">1</span>\n                <span class=\"hljs-keyword\">except</span> AttributeError:\n                    <span class=\"hljs-keyword\">pass</span>\n            subCategories.append(subCategory)\n            subCategory_details.append(movie_list)\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-keyword\">return</span> subCategories, subCategory_details, count-<span class=\"hljs-number\">1</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">getCategories</span>(<span class=\"hljs-params\">base_url</span>):\n    category_soup = make_soup(base_url)\n    categories = category_soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    result=[]\n    count = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">for</span> category <span class=\"hljs-keyword\">in</span> categories:\n        <span class=\"hljs-keyword\">try</span>:\n            Title = category.find(<span class=\"hljs-string\">'span'</span>, {<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row-name'</span>}).text\n            url = category.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n            result.append([count, Title, url])\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-comment\">#print(result)</span>\n    <span class=\"hljs-keyword\">return</span> result</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    netflix_url = <span class=\"hljs-string\">\"https://www.netflix.com/in/browse/genre/839338\"</span>\n    categories = getCategories(netflix_url)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Please select one of the category\"</span>)\n    df = pd.DataFrame(np.array(categories), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n    <span class=\"hljs-built_in\">print</span>(df.to_string(index=<span class=\"hljs-literal\">False</span>))\n    choice = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">'\\n\\n Please Enter your Choice: \\n'</span>))\n    subCategories, movieList, count = browseCategory(choice, categories)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, count):\n        <span class=\"hljs-built_in\">print</span>(subCategories[i],<span class=\"hljs-string\">'\\n\\n'</span>)\n        subCategory_df = pd.DataFrame(np.array(movieList[i]), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n        <span class=\"hljs-built_in\">print</span>(subCategory_df.to_string(index=<span class=\"hljs-literal\">False</span>))\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"\\n\\n\\n\"</span>)\n    \n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">'__main__'</span>:\n    main()</code></pre></div></div></div></div>",
    "uk": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h3 id=\"netflix-scrapper\">Netflix Scrapper</h3>\n<p>The purpose of the code is to get details of all the Categories on Netflix and then to gather information about Sub-Categories and movies under each Sub-Category.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\n<span class=\"hljs-keyword\">import</span> requests\n<span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">make_soup</span>(<span class=\"hljs-params\">url</span>):\n    <span class=\"hljs-keyword\">return</span> BeautifulSoup(requests.get(url).text, <span class=\"hljs-string\">'html.parser'</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">browseCategory</span>(<span class=\"hljs-params\">category, data</span>):\n    category_url = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">2</span>]\n    category = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>]\n    subCategory_details = []\n    count = <span class=\"hljs-number\">1</span>\n    subCategories = []\n    soup = make_soup(category_url)\n    cards_list = soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    <span class=\"hljs-keyword\">for</span> card <span class=\"hljs-keyword\">in</span> cards_list:\n        <span class=\"hljs-keyword\">try</span>:\n            subCategory = card.find(<span class=\"hljs-string\">'h1'</span>).text\n            movie_list = []\n            movies = card.find_all(<span class=\"hljs-string\">'li'</span>)\n            movie_count = <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">for</span> movie <span class=\"hljs-keyword\">in</span> movies:\n                <span class=\"hljs-keyword\">try</span>:\n                    movie_title = movie.find(<span class=\"hljs-string\">'span'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-title-name'</span>}).text\n                    movie_link = movie.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n                    movie_list.append([movie_count, movie_title , movie_link])\n                    movie_count += <span class=\"hljs-number\">1</span>\n                <span class=\"hljs-keyword\">except</span> AttributeError:\n                    <span class=\"hljs-keyword\">pass</span>\n            subCategories.append(subCategory)\n            subCategory_details.append(movie_list)\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-keyword\">return</span> subCategories, subCategory_details, count-<span class=\"hljs-number\">1</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">getCategories</span>(<span class=\"hljs-params\">base_url</span>):\n    category_soup = make_soup(base_url)\n    categories = category_soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    result=[]\n    count = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">for</span> category <span class=\"hljs-keyword\">in</span> categories:\n        <span class=\"hljs-keyword\">try</span>:\n            Title = category.find(<span class=\"hljs-string\">'span'</span>, {<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row-name'</span>}).text\n            url = category.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n            result.append([count, Title, url])\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-comment\">#print(result)</span>\n    <span class=\"hljs-keyword\">return</span> result</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    netflix_url = <span class=\"hljs-string\">\"https://www.netflix.com/in/browse/genre/839338\"</span>\n    categories = getCategories(netflix_url)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Please select one of the category\"</span>)\n    df = pd.DataFrame(np.array(categories), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n    <span class=\"hljs-built_in\">print</span>(df.to_string(index=<span class=\"hljs-literal\">False</span>))\n    choice = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">'\\n\\n Please Enter your Choice: \\n'</span>))\n    subCategories, movieList, count = browseCategory(choice, categories)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, count):\n        <span class=\"hljs-built_in\">print</span>(subCategories[i],<span class=\"hljs-string\">'\\n\\n'</span>)\n        subCategory_df = pd.DataFrame(np.array(movieList[i]), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n        <span class=\"hljs-built_in\">print</span>(subCategory_df.to_string(index=<span class=\"hljs-literal\">False</span>))\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"\\n\\n\\n\"</span>)\n    \n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">'__main__'</span>:\n    main()</code></pre></div></div></div></div>",
    "hr": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h3 id=\"netflix-scrapper\">Netflix Scrapper</h3>\n<p>The purpose of the code is to get details of all the Categories on Netflix and then to gather information about Sub-Categories and movies under each Sub-Category.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\n<span class=\"hljs-keyword\">import</span> requests\n<span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">make_soup</span>(<span class=\"hljs-params\">url</span>):\n    <span class=\"hljs-keyword\">return</span> BeautifulSoup(requests.get(url).text, <span class=\"hljs-string\">'html.parser'</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">browseCategory</span>(<span class=\"hljs-params\">category, data</span>):\n    category_url = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">2</span>]\n    category = data[category-<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>]\n    subCategory_details = []\n    count = <span class=\"hljs-number\">1</span>\n    subCategories = []\n    soup = make_soup(category_url)\n    cards_list = soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    <span class=\"hljs-keyword\">for</span> card <span class=\"hljs-keyword\">in</span> cards_list:\n        <span class=\"hljs-keyword\">try</span>:\n            subCategory = card.find(<span class=\"hljs-string\">'h1'</span>).text\n            movie_list = []\n            movies = card.find_all(<span class=\"hljs-string\">'li'</span>)\n            movie_count = <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">for</span> movie <span class=\"hljs-keyword\">in</span> movies:\n                <span class=\"hljs-keyword\">try</span>:\n                    movie_title = movie.find(<span class=\"hljs-string\">'span'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-title-name'</span>}).text\n                    movie_link = movie.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n                    movie_list.append([movie_count, movie_title , movie_link])\n                    movie_count += <span class=\"hljs-number\">1</span>\n                <span class=\"hljs-keyword\">except</span> AttributeError:\n                    <span class=\"hljs-keyword\">pass</span>\n            subCategories.append(subCategory)\n            subCategory_details.append(movie_list)\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-keyword\">return</span> subCategories, subCategory_details, count-<span class=\"hljs-number\">1</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">getCategories</span>(<span class=\"hljs-params\">base_url</span>):\n    category_soup = make_soup(base_url)\n    categories = category_soup.find_all(<span class=\"hljs-string\">'section'</span>,{<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row'</span>})\n    result=[]\n    count = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">for</span> category <span class=\"hljs-keyword\">in</span> categories:\n        <span class=\"hljs-keyword\">try</span>:\n            Title = category.find(<span class=\"hljs-string\">'span'</span>, {<span class=\"hljs-string\">'class'</span>:<span class=\"hljs-string\">'nm-collections-row-name'</span>}).text\n            url = category.find(<span class=\"hljs-string\">'a'</span>).get(<span class=\"hljs-string\">'href'</span>)\n            result.append([count, Title, url])\n            count += <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">except</span> AttributeError:\n            <span class=\"hljs-keyword\">pass</span>\n    <span class=\"hljs-comment\">#print(result)</span>\n    <span class=\"hljs-keyword\">return</span> result</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    netflix_url = <span class=\"hljs-string\">\"https://www.netflix.com/in/browse/genre/839338\"</span>\n    categories = getCategories(netflix_url)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Please select one of the category\"</span>)\n    df = pd.DataFrame(np.array(categories), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n    <span class=\"hljs-built_in\">print</span>(df.to_string(index=<span class=\"hljs-literal\">False</span>))\n    choice = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">'\\n\\n Please Enter your Choice: \\n'</span>))\n    subCategories, movieList, count = browseCategory(choice, categories)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, count):\n        <span class=\"hljs-built_in\">print</span>(subCategories[i],<span class=\"hljs-string\">'\\n\\n'</span>)\n        subCategory_df = pd.DataFrame(np.array(movieList[i]), columns=[<span class=\"hljs-string\">'Sr.No'</span>, <span class=\"hljs-string\">'Title'</span>, <span class=\"hljs-string\">'link'</span>])\n        <span class=\"hljs-built_in\">print</span>(subCategory_df.to_string(index=<span class=\"hljs-literal\">False</span>))\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"\\n\\n\\n\"</span>)\n    \n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">'__main__'</span>:\n    main()</code></pre></div></div></div></div>"
  },
  "implementations": {
    "jupyter": {
      "dir": "Automaton/Netflix_Scrapper.ipynb",
      "url": "https://github.com/TheAlgorithms/jupyter/tree/master/Automaton/Netflix_Scrapper.ipynb",
      "code": "<span class=\"hljs-punctuation\">{</span>\n <span class=\"hljs-attr\">&quot;cells&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;### Netflix Scrapper\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;The purpose of the code is to get details of all the Categories on Netflix and then to gather information about Sub-Categories and movies under each Sub-Category.&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">null</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;from bs4 import BeautifulSoup\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;import requests\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;import pandas as pd\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;import numpy as np&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">null</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;def make_soup(url):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    return BeautifulSoup(requests.get(url).text, &#x27;html.parser&#x27;)&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">null</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;def browseCategory(category, data):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    category_url = data[category-1][2]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    category = data[category-1][1]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    subCategory_details = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    count = 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    subCategories = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    soup = make_soup(category_url)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    cards_list = soup.find_all(&#x27;section&#x27;,{&#x27;class&#x27;:&#x27;nm-collections-row&#x27;})\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for card in cards_list:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        try:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            subCategory = card.find(&#x27;h1&#x27;).text\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            movie_list = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            movies = card.find_all(&#x27;li&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            movie_count = 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            for movie in movies:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;                try:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;                    movie_title = movie.find(&#x27;span&#x27;,{&#x27;class&#x27;:&#x27;nm-collections-title-name&#x27;}).text\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;                    movie_link = movie.find(&#x27;a&#x27;).get(&#x27;href&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;                    movie_list.append([movie_count, movie_title , movie_link])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;                    movie_count += 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;                except AttributeError:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;                    pass\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            subCategories.append(subCategory)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            subCategory_details.append(movie_list)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            count += 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        except AttributeError:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            pass\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    return subCategories, subCategory_details, count-1&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">null</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;def getCategories(base_url):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    category_soup = make_soup(base_url)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    categories = category_soup.find_all(&#x27;section&#x27;,{&#x27;class&#x27;:&#x27;nm-collections-row&#x27;})\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    result=[]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    count = 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for category in categories:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        try:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            Title = category.find(&#x27;span&#x27;, {&#x27;class&#x27;:&#x27;nm-collections-row-name&#x27;}).text\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            url = category.find(&#x27;a&#x27;).get(&#x27;href&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            result.append([count, Title, url])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            count += 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        except AttributeError:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            pass\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    #print(result)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    return result&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">null</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;def main():\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    netflix_url = \\&quot;https://www.netflix.com/in/browse/genre/839338\\&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    categories = getCategories(netflix_url)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(\\&quot;Please select one of the category\\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    df = pd.DataFrame(np.array(categories), columns=[&#x27;Sr.No&#x27;, &#x27;Title&#x27;, &#x27;link&#x27;])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(df.to_string(index=False))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    choice = int(input(&#x27;\\\\n\\\\n Please Enter your Choice: \\\\n&#x27;))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    subCategories, movieList, count = browseCategory(choice, categories)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for i in range(0, count):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        print(subCategories[i],&#x27;\\\\n\\\\n&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        subCategory_df = pd.DataFrame(np.array(movieList[i]), columns=[&#x27;Sr.No&#x27;, &#x27;Title&#x27;, &#x27;link&#x27;])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        print(subCategory_df.to_string(index=False))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        print(\\&quot;\\\\n\\\\n\\\\n\\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;if __name__ == &#x27;__main__&#x27;:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    main()&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span>\n <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;kernelspec&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;display_name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Python 3&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;language&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python3&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;language_info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;codemirror_mode&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ipython&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;version&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span>\n   <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;file_extension&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.py&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;mimetype&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;text/x-python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;nbconvert_exporter&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;pygments_lexer&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ipython3&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;version&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;3.7.4&quot;</span>\n  <span class=\"hljs-punctuation\">}</span>\n <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n <span class=\"hljs-attr\">&quot;nbformat&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span>\n <span class=\"hljs-attr\">&quot;nbformat_minor&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span>\n<span class=\"hljs-punctuation\">}</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Gaurav-ECE-SVNIT",
      "email": "gk74533@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
