{
  "slug": "decimaltoanybase",
  "name": "DecimalToAnyBase",
  "categories": ["conversions"],
  "body": {},
  "implementations": {
    "java": {
      "dir": "Conversions/DecimalToAnyBase.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/Conversions/DecimalToAnyBase.java",
      "code": "<span class=\"hljs-keyword\">package</span> Conversions;\n\n<span class=\"hljs-keyword\">import</span> java.io.BufferedReader;\n<span class=\"hljs-keyword\">import</span> java.io.InputStreamReader;\n<span class=\"hljs-keyword\">import</span> java.util.ArrayList;\n\n<span class=\"hljs-comment\">/** <span class=\"hljs-doctag\">@author</span> Varun Upadhyay (https://github.com/varunu28) */</span>\n\n<span class=\"hljs-comment\">// Driver Program</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">DecimalToAnyBase</span> {\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> <span class=\"hljs-keyword\">throws</span> Exception {\n    <span class=\"hljs-type\">BufferedReader</span> <span class=\"hljs-variable\">br</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BufferedReader</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">InputStreamReader</span>(System.in));\n    System.out.println(<span class=\"hljs-string\">&quot;Enter the decimal input below: &quot;</span>);\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">decInput</span> <span class=\"hljs-operator\">=</span> Integer.parseInt(br.readLine());\n    System.out.println();\n\n    System.out.println(<span class=\"hljs-string\">&quot;Enter the base below: &quot;</span>);\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">base</span> <span class=\"hljs-operator\">=</span> Integer.parseInt(br.readLine());\n    System.out.println();\n\n    System.out.println(<span class=\"hljs-string\">&quot;Decimal Input&quot;</span> + <span class=\"hljs-string\">&quot; is: &quot;</span> + decInput);\n    System.out.println(\n        <span class=\"hljs-string\">&quot;Value of &quot;</span> + decInput + <span class=\"hljs-string\">&quot; in base &quot;</span> + base + <span class=\"hljs-string\">&quot; is: &quot;</span> + convertToAnyBase(decInput, base));\n\n    br.close();\n  }\n\n  <span class=\"hljs-comment\">/**\n   * This method produces a String value of any given input decimal in any base\n   *\n   * <span class=\"hljs-doctag\">@param</span> inp Decimal of which we need the value in base in String format\n   * <span class=\"hljs-doctag\">@return</span> string format of the converted value in the given base\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">convertToAnyBase</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> inp, <span class=\"hljs-type\">int</span> base)</span> {\n    ArrayList&lt;Character&gt; charArr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();\n\n    <span class=\"hljs-keyword\">while</span> (inp &gt; <span class=\"hljs-number\">0</span>) {\n      charArr.add(reVal(inp % base));\n      inp /= base;\n    }\n\n    <span class=\"hljs-type\">StringBuilder</span> <span class=\"hljs-variable\">str</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuilder</span>(charArr.size());\n\n    <span class=\"hljs-keyword\">for</span> (Character ch : charArr) {\n      str.append(ch);\n    }\n\n    <span class=\"hljs-keyword\">return</span> str.reverse().toString();\n  }\n\n  <span class=\"hljs-comment\">/**\n   * This method produces character value of the input integer and returns it\n   *\n   * <span class=\"hljs-doctag\">@param</span> num integer of which we need the character value of\n   * <span class=\"hljs-doctag\">@return</span> character value of input integer\n   */</span>\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">char</span> <span class=\"hljs-title function_\">reVal</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> num)</span> {\n    <span class=\"hljs-keyword\">if</span> (num &gt;= <span class=\"hljs-number\">0</span> &amp;&amp; num &lt;= <span class=\"hljs-number\">9</span>) <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-type\">char</span>) (num + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-type\">char</span>) (num - <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;A&#x27;</span>);\n  }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Varun Upadhyay",
      "email": "varun.u28@gmail.com",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
