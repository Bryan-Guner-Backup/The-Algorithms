{
  "slug": "circular-queue-using-linked-list",
  "name": "Circular Queue Using Linked List",
  "categories": ["datastructures"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "data_structures/circular_queue_using_linked_list.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/data_structures/circular_queue_using_linked_list.cpp",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">node</span> {\n    <span class=\"hljs-type\">int</span> data;\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">node</span>* next;\n};\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Queue</span> {\n    node* front=<span class=\"hljs-literal\">nullptr</span>;\n    node* rear=<span class=\"hljs-literal\">nullptr</span>;\n\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-built_in\">Queue</span>() = <span class=\"hljs-keyword\">default</span>; \n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">createNode</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> val)</span> </span>{\n        <span class=\"hljs-keyword\">auto</span>* nn = <span class=\"hljs-keyword\">new</span> node;\n        nn-&gt;data = val;\n        nn-&gt;next = <span class=\"hljs-literal\">nullptr</span>;\n        front = nn;\n        rear = nn;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">enqueue</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> val)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (front == <span class=\"hljs-literal\">nullptr</span> || rear == <span class=\"hljs-literal\">nullptr</span>) {\n            <span class=\"hljs-built_in\">createNode</span>(val);\n        }\n        <span class=\"hljs-keyword\">else</span> {\n            node* nn;\n            nn = <span class=\"hljs-keyword\">new</span> node;\n            nn-&gt;data = val;\n            rear-&gt;next = nn;\n            nn-&gt;next = front;\n            rear = nn;\n        }\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">dequeue</span><span class=\"hljs-params\">()</span> </span>{\n        node* n;\n        n = front;\n        <span class=\"hljs-keyword\">if</span> (n) {\n            front = front-&gt;next;\n            <span class=\"hljs-keyword\">delete</span> n;\n        }\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">traverse</span><span class=\"hljs-params\">()</span> </span>{\n        node* ptr;\n        ptr = front;\n        <span class=\"hljs-keyword\">if</span> (ptr) {\n            <span class=\"hljs-keyword\">do</span> {\n                std::cout &lt;&lt; ptr-&gt;data &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span>;\n                ptr = ptr-&gt;next;\n            } <span class=\"hljs-keyword\">while</span> (ptr != rear-&gt;next);\n            std::cout &lt;&lt; front-&gt;data &lt;&lt; std::endl;\n        }\n    }\n};\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-type\">void</span>)</span> </span>{\n    Queue q;\n    q.<span class=\"hljs-built_in\">enqueue</span>(<span class=\"hljs-number\">10</span>);\n    q.<span class=\"hljs-built_in\">enqueue</span>(<span class=\"hljs-number\">20</span>);\n    q.<span class=\"hljs-built_in\">enqueue</span>(<span class=\"hljs-number\">30</span>);\n    q.<span class=\"hljs-built_in\">enqueue</span>(<span class=\"hljs-number\">40</span>);\n    q.<span class=\"hljs-built_in\">enqueue</span>(<span class=\"hljs-number\">50</span>);\n    q.<span class=\"hljs-built_in\">enqueue</span>(<span class=\"hljs-number\">60</span>);\n    q.<span class=\"hljs-built_in\">enqueue</span>(<span class=\"hljs-number\">70</span>);\n    q.<span class=\"hljs-built_in\">traverse</span>();\n    q.<span class=\"hljs-built_in\">dequeue</span>();\n    q.<span class=\"hljs-built_in\">traverse</span>();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}"
    }
  },
  "contributors": [
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "GeorgianaK",
      "email": "52410645+GeorgianaK@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
