{
  "slug": "prime-factorial",
  "name": "Prime Factorial",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "matlab-octave": {
      "dir": "algorithms/maths/prime_factorial.m",
      "url": "https://github.com/TheAlgorithms/matlab-octave/tree/master/algorithms/maths/prime_factorial.m",
      "code": "clear all\nclc\n\n<span class=\"hljs-comment\">%% Prime Factors</span>\n<span class=\"hljs-comment\">% This code gets user input number, calculates and displays its prime factors.</span>\n<span class=\"hljs-comment\">% For this, first it determines prime numbers which are less than or equal to</span>\n<span class=\"hljs-comment\">% user input number. Then if the input is dividable by that prime number,</span>\n<span class=\"hljs-comment\">% it becomes one of input&#x27;s prime factors.</span>\n\n<span class=\"hljs-comment\">%% Request user input</span>\nprompt = <span class=\"hljs-string\">&#x27;Input your number: &#x27;</span>;\nn = input(prompt);\n\n<span class=\"hljs-comment\">%%</span>\ncounter = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">% initialize number of prime factors</span>\n\n<span class=\"hljs-keyword\">if</span> n &lt;= <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&#x27;input must be positive integer greater than 1&#x27;</span>)\n<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">floor</span>(n)~= n \n       <span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&#x27;input must be positive integer&#x27;</span>) \n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">i</span> = <span class=\"hljs-number\">2</span>:<span class=\"hljs-number\">1</span>:n\n            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">i</span> == <span class=\"hljs-number\">2</span>\n               <span class=\"hljs-built_in\">isprime</span> = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">else</span> \n            half_i = <span class=\"hljs-built_in\">floor</span>(<span class=\"hljs-built_in\">i</span>/<span class=\"hljs-number\">2</span>)+<span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-built_in\">j</span> = <span class=\"hljs-number\">2</span>;\n            <span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">j</span> &lt;= half_i         <span class=\"hljs-comment\">%lines 16 to 30 check if i is prime or not.</span>\n                  residual = <span class=\"hljs-built_in\">mod</span>(<span class=\"hljs-built_in\">i</span>,<span class=\"hljs-built_in\">j</span>); \n                 <span class=\"hljs-keyword\">if</span> residual == <span class=\"hljs-number\">0</span>\n                    <span class=\"hljs-built_in\">isprime</span> = <span class=\"hljs-number\">0</span>;\n                    <span class=\"hljs-keyword\">break</span>\n                 <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">j</span> == half_i\n                         <span class=\"hljs-built_in\">isprime</span> = <span class=\"hljs-number\">1</span>;\n                         <span class=\"hljs-keyword\">break</span>\n                     <span class=\"hljs-keyword\">else</span>\n                         <span class=\"hljs-built_in\">j</span>=<span class=\"hljs-built_in\">j</span>+<span class=\"hljs-number\">1</span>;\n                     <span class=\"hljs-keyword\">end</span>\n                 <span class=\"hljs-keyword\">end</span>\n            <span class=\"hljs-keyword\">end</span>\n            <span class=\"hljs-keyword\">end</span>\n            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">isprime</span> == <span class=\"hljs-number\">1</span> &amp;&amp; <span class=\"hljs-built_in\">mod</span>(n,<span class=\"hljs-built_in\">i</span>) == <span class=\"hljs-number\">0</span>\n                   counter=counter+<span class=\"hljs-number\">1</span>;\n                   f(counter) = <span class=\"hljs-built_in\">i</span>;         <span class=\"hljs-comment\">% prime factors of n will be storing </span>\n            <span class=\"hljs-keyword\">end</span>\n        <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-built_in\">disp</span>(<span class=\"hljs-string\">&#x27;Prime factors of input number are: &#x27;</span>)\n<span class=\"hljs-built_in\">disp</span>(f)\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
