{
  "slug": "geometric-mean",
  "name": "Geometric Mean",
  "categories": ["math", "series"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/series/geometric_mean.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/series/geometric_mean.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nGEOMETRIC MEAN :  https://en.wikipedia.org/wiki/Geometric_mean\n&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">is_geometric_series</span>(<span class=\"hljs-params\">series: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    checking whether the input series is geometric series or not\n\n    &gt;&gt;&gt; is_geometric_series([2, 4, 8])\n    True\n    &gt;&gt;&gt; is_geometric_series([3, 6, 12, 24])\n    True\n    &gt;&gt;&gt; is_geometric_series([1, 2, 3])\n    False\n    &gt;&gt;&gt; is_geometric_series([0, 0, 3])\n    False\n\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(series) == <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\n    <span class=\"hljs-keyword\">try</span>:\n        common_ratio = series[<span class=\"hljs-number\">1</span>] / series[<span class=\"hljs-number\">0</span>]\n        <span class=\"hljs-keyword\">for</span> index <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(series) - <span class=\"hljs-number\">1</span>):\n            <span class=\"hljs-keyword\">if</span> series[index + <span class=\"hljs-number\">1</span>] / series[index] != common_ratio:\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span>\n    <span class=\"hljs-keyword\">except</span> ZeroDivisionError:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">geometric_mean</span>(<span class=\"hljs-params\">series: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    return the geometric mean of series\n\n    &gt;&gt;&gt; geometric_mean([2, 4, 8])\n    3.9999999999999996\n    &gt;&gt;&gt; geometric_mean([3, 6, 12, 24])\n    8.48528137423857\n    &gt;&gt;&gt; geometric_mean([4, 8, 16])\n    7.999999999999999\n    &gt;&gt;&gt; geometric_mean(4)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input series is not valid, valid series - [2, 4, 8]\n    &gt;&gt;&gt; geometric_mean([1, 2, 3])\n    Traceback (most recent call last):\n        ...\n    ValueError: Input list is not a geometric series\n    &gt;&gt;&gt; geometric_mean([0, 2, 3])\n    Traceback (most recent call last):\n        ...\n    ValueError: Input list is not a geometric series\n    &gt;&gt;&gt; geometric_mean([])\n    Traceback (most recent call last):\n        ...\n    ValueError: Input list must be a non empty list\n\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(series, <span class=\"hljs-built_in\">list</span>):\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input series is not valid, valid series - [2, 4, 8]&quot;</span>)\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(series) == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input list must be a non empty list&quot;</span>)\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> is_geometric_series(series):\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input list is not a geometric series&quot;</span>)\n    answer = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">for</span> value <span class=\"hljs-keyword\">in</span> series:\n        answer *= value\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">pow</span>(answer, <span class=\"hljs-number\">1</span> / <span class=\"hljs-built_in\">len</span>(series))\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    }
  },
  "contributors": [
    {
      "name": "Ayush Bisht",
      "email": "61404154+ayushbisht2001@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
