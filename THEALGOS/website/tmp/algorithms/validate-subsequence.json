{
  "slug": "validate-subsequence",
  "name": "Validate Subsequence",
  "categories": ["array"],
  "body": {},
  "implementations": {
    "dart": {
      "dir": "array/validate_subsequence.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/array/validate_subsequence.dart",
      "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:test/test.dart&#x27;</span>;\n\n<span class=\"hljs-built_in\">bool</span> checkIsSubSequence(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; array, <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; sequence) {\n  <span class=\"hljs-keyword\">if</span> (array.isEmpty) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n  }\n\n  <span class=\"hljs-keyword\">if</span> (sequence.isEmpty) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">true</span>;\n  }\n  <span class=\"hljs-built_in\">int</span> arrayIndex = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-built_in\">int</span> sequenceIndex = <span class=\"hljs-number\">0</span>;\n\n  <span class=\"hljs-keyword\">while</span> (sequenceIndex &lt; sequence.length &amp;&amp; arrayIndex &lt; array.length) {\n    <span class=\"hljs-keyword\">if</span> (sequence[sequenceIndex] == array[arrayIndex]) {\n      sequenceIndex += <span class=\"hljs-number\">1</span>;\n    }\n    arrayIndex += <span class=\"hljs-number\">1</span>;\n  }\n  <span class=\"hljs-keyword\">return</span> sequenceIndex == sequence.length;\n}\n\n<span class=\"hljs-keyword\">void</span> main() {\n  <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; array;\n  <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; sequence;\n\n  test(<span class=\"hljs-string\">&#x27;test 1&#x27;</span>, () {\n    array = [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">22</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">10</span>];\n    sequence = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">10</span>];\n    expect(checkIsSubSequence(array, sequence), isTrue);\n  });\n\n  test(<span class=\"hljs-string\">&#x27;test 2&#x27;</span>, () {\n    array = [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">22</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">10</span>];\n    sequence = [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">10</span>];\n    expect(checkIsSubSequence(array, sequence), isTrue);\n  });\n\n  test(<span class=\"hljs-string\">&#x27;test 3&#x27;</span>, () {\n    array = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>];\n    sequence = [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>];\n    expect(checkIsSubSequence(array, sequence), isFalse);\n  });\n\n  test(<span class=\"hljs-string\">&#x27;test 4&#x27;</span>, () {\n    array = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">10</span>];\n    sequence = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">10</span>];\n    expect(checkIsSubSequence(array, sequence), isTrue);\n  });\n\n  test(<span class=\"hljs-string\">&#x27;test 5&#x27;</span>, () {\n    array = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">1</span>];\n    sequence = [<span class=\"hljs-number\">0</span>];\n    expect(checkIsSubSequence(array, sequence), isFalse);\n  });\n\n  test(<span class=\"hljs-string\">&#x27;test 6&#x27;</span>, () {\n    array = [];\n    sequence = [<span class=\"hljs-number\">0</span>];\n    expect(checkIsSubSequence(array, sequence), isFalse);\n  });\n\n  test(<span class=\"hljs-string\">&#x27;test 7&#x27;</span>, () {\n    array = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">1</span>];\n    sequence = [];\n    expect(checkIsSubSequence(array, sequence), isTrue);\n  });\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Akash G Krishnan",
      "email": "krishnanag1996@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
