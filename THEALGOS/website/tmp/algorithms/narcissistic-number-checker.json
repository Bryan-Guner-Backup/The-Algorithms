{
  "slug": "narcissistic-number-checker",
  "name": "Narcissistic Number Checker",
  "categories": ["datastructures", "linkedlist"],
  "body": {},
  "implementations": {
    "c-sharp": {
      "dir": "Algorithms/Numeric/NarcissisticNumberChecker.cs",
      "url": "https://github.com/TheAlgorithms/C-Sharp/blob/master/Algorithms/Numeric/NarcissisticNumberChecker.cs",
      "code": "ï»¿<span class=\"hljs-keyword\">using</span> System;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Algorithms.Numeric</span>\n{\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     A Narcissistic number is equal to the sum of the cubes of its digits. For example, 370 is a</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Narcissistic number because 3*3*3 + 7*7*7 + 0*0*0 = 370.</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">NarcissisticNumberChecker</span>\n    {\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Checks if a number is a Narcissistic number or not.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;number&quot;&gt;</span>Number to check.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if is a Narcissistic number; False otherwise.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">IsNarcissistic</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> number</span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> sum = <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">var</span> temp = number;\n            <span class=\"hljs-keyword\">var</span> numberOfDigits = <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">while</span> (temp != <span class=\"hljs-number\">0</span>)\n            {\n                numberOfDigits++;\n                temp /= <span class=\"hljs-number\">10</span>;\n            }\n\n            temp = number;\n            <span class=\"hljs-keyword\">while</span> (number &gt; <span class=\"hljs-number\">0</span>)\n            {\n                <span class=\"hljs-keyword\">var</span> remainder = number % <span class=\"hljs-number\">10</span>;\n                <span class=\"hljs-keyword\">var</span> power = (<span class=\"hljs-built_in\">int</span>)Math.Pow(remainder, numberOfDigits);\n\n                sum += power;\n                number /= <span class=\"hljs-number\">10</span>;\n            }\n\n            <span class=\"hljs-keyword\">return</span> sum == temp;\n        }\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Andrii Siriak",
      "email": "siryaka@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
