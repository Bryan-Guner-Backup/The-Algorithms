{
  "slug": "conways-game-of-life",
  "name": "Conways Game of Life",
  "categories": ["cellularautomata"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "cellular_automata/conways_game_of_life.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/cellular_automata/conways_game_of_life.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nConway&#x27;s Game of Life implemented in Python.\nhttps://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\n&quot;&quot;&quot;</span>\n\n<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\n\n<span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">List</span>\n\n<span class=\"hljs-keyword\">from</span> PIL <span class=\"hljs-keyword\">import</span> Image\n\n<span class=\"hljs-comment\"># Define glider example</span>\nGLIDER = [\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n    [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n]\n\n<span class=\"hljs-comment\"># Define blinker example</span>\nBLINKER = [[<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>], [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>], [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>]]\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">new_generation</span>(<span class=\"hljs-params\">cells: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]]</span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]]:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Generates the next generation for a given state of Conway&#x27;s Game of Life.\n    &gt;&gt;&gt; new_generation(BLINKER)\n    [[0, 0, 0], [1, 1, 1], [0, 0, 0]]\n    &quot;&quot;&quot;</span>\n    next_generation = []\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(cells)):\n        next_generation_row = []\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(cells[i])):\n            <span class=\"hljs-comment\"># Get the number of live neighbours</span>\n            neighbour_count = <span class=\"hljs-number\">0</span>\n            <span class=\"hljs-keyword\">if</span> i &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">and</span> j &gt; <span class=\"hljs-number\">0</span>:\n                neighbour_count += cells[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>]\n            <span class=\"hljs-keyword\">if</span> i &gt; <span class=\"hljs-number\">0</span>:\n                neighbour_count += cells[i - <span class=\"hljs-number\">1</span>][j]\n            <span class=\"hljs-keyword\">if</span> i &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">and</span> j &lt; <span class=\"hljs-built_in\">len</span>(cells[i]) - <span class=\"hljs-number\">1</span>:\n                neighbour_count += cells[i - <span class=\"hljs-number\">1</span>][j + <span class=\"hljs-number\">1</span>]\n            <span class=\"hljs-keyword\">if</span> j &gt; <span class=\"hljs-number\">0</span>:\n                neighbour_count += cells[i][j - <span class=\"hljs-number\">1</span>]\n            <span class=\"hljs-keyword\">if</span> j &lt; <span class=\"hljs-built_in\">len</span>(cells[i]) - <span class=\"hljs-number\">1</span>:\n                neighbour_count += cells[i][j + <span class=\"hljs-number\">1</span>]\n            <span class=\"hljs-keyword\">if</span> i &lt; <span class=\"hljs-built_in\">len</span>(cells) - <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> j &gt; <span class=\"hljs-number\">0</span>:\n                neighbour_count += cells[i + <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>]\n            <span class=\"hljs-keyword\">if</span> i &lt; <span class=\"hljs-built_in\">len</span>(cells) - <span class=\"hljs-number\">1</span>:\n                neighbour_count += cells[i + <span class=\"hljs-number\">1</span>][j]\n            <span class=\"hljs-keyword\">if</span> i &lt; <span class=\"hljs-built_in\">len</span>(cells) - <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> j &lt; <span class=\"hljs-built_in\">len</span>(cells[i]) - <span class=\"hljs-number\">1</span>:\n                neighbour_count += cells[i + <span class=\"hljs-number\">1</span>][j + <span class=\"hljs-number\">1</span>]\n\n            <span class=\"hljs-comment\"># Rules of the game of life (excerpt from Wikipedia):</span>\n            <span class=\"hljs-comment\"># 1. Any live cell with two or three live neighbours survives.</span>\n            <span class=\"hljs-comment\"># 2. Any dead cell with three live neighbours becomes a live cell.</span>\n            <span class=\"hljs-comment\"># 3. All other live cells die in the next generation.</span>\n            <span class=\"hljs-comment\">#    Similarly, all other dead cells stay dead.</span>\n            alive = cells[i][j] == <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">if</span> (\n                (alive <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">2</span> &lt;= neighbour_count &lt;= <span class=\"hljs-number\">3</span>)\n                <span class=\"hljs-keyword\">or</span> <span class=\"hljs-keyword\">not</span> alive\n                <span class=\"hljs-keyword\">and</span> neighbour_count == <span class=\"hljs-number\">3</span>\n            ):\n                next_generation_row.append(<span class=\"hljs-number\">1</span>)\n            <span class=\"hljs-keyword\">else</span>:\n                next_generation_row.append(<span class=\"hljs-number\">0</span>)\n\n        next_generation.append(next_generation_row)\n    <span class=\"hljs-keyword\">return</span> next_generation\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">generate_images</span>(<span class=\"hljs-params\">cells: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]], frames</span>) -&gt; <span class=\"hljs-built_in\">list</span>[Image.Image]:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Generates a list of images of subsequent Game of Life states.\n    &quot;&quot;&quot;</span>\n    images = []\n    <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(frames):\n        <span class=\"hljs-comment\"># Create output image</span>\n        img = Image.new(<span class=\"hljs-string\">&quot;RGB&quot;</span>, (<span class=\"hljs-built_in\">len</span>(cells[<span class=\"hljs-number\">0</span>]), <span class=\"hljs-built_in\">len</span>(cells)))\n        pixels = img.load()\n\n        <span class=\"hljs-comment\"># Save cells to image</span>\n        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(cells)):\n            <span class=\"hljs-keyword\">for</span> y <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(cells[<span class=\"hljs-number\">0</span>])):\n                colour = <span class=\"hljs-number\">255</span> - cells[y][x] * <span class=\"hljs-number\">255</span>\n                pixels[x, y] = (colour, colour, colour)\n\n        <span class=\"hljs-comment\"># Save image</span>\n        images.append(img)\n        cells = new_generation(cells)\n    <span class=\"hljs-keyword\">return</span> images\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    images = generate_images(GLIDER, <span class=\"hljs-number\">16</span>)\n    images[<span class=\"hljs-number\">0</span>].save(<span class=\"hljs-string\">&quot;out.gif&quot;</span>, save_all=<span class=\"hljs-literal\">True</span>, append_images=images[<span class=\"hljs-number\">1</span>:])\n"
    },
    "javascript": {
      "dir": "Cellular-Automata/ConwaysGameOfLife.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Cellular-Automata/ConwaysGameOfLife.js",
      "code": "<span class=\"hljs-comment\">/*\nConway&#x27;s Game of Life\nThe Game of Life is a cellular automaton devised by the British mathematician John Horton Conway in 1970. The universe of the Game of Life is an infinite, two-dimensional orthogonal grid of square cells, each of which is in one of two possible states, live or dead, (or populated and unpopulated, respectively). Every cell interacts with its eight neighbours, which are the cells that are horizontally, vertically, or diagonally adjacent. At each step in time, the following transitions occur:\n  1. Any live cell with two or three live neighbours survives.\n  2. Any dead cell with three live neighbours becomes a live cell.\n  3. All other live cells die in the next generation. Similarly, all other dead cells stay dead.\n(description adapted from https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life )\n(example adapted from https://github.com/TheAlgorithms/Python/blob/master/cellular_automata/conways_game_of_life.py )\n*/</span>\n\n<span class=\"hljs-comment\">/*\n*  Doctests\n*\n*  &gt; newGeneration([[0, 1, 0], [0, 1, 0], [0, 1, 0]])\n*  [ [ 0, 0, 0 ], [ 1, 1, 1 ], [ 0, 0, 0 ] ]\n*/</span>\n\n<span class=\"hljs-comment\">/*\n*  Generates the next generation for a given state of Conway&#x27;s Game of Life.\n*/</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">newGeneration</span> (cells) {\n  <span class=\"hljs-keyword\">const</span> nextGeneration = []\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; cells.<span class=\"hljs-property\">length</span>; i++) {\n    <span class=\"hljs-keyword\">const</span> nextGenerationRow = []\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; cells[i].<span class=\"hljs-property\">length</span>; j++) {\n      <span class=\"hljs-comment\">// Get the number of living neighbours</span>\n      <span class=\"hljs-keyword\">let</span> neighbourCount = <span class=\"hljs-number\">0</span>\n      <span class=\"hljs-keyword\">if</span> (i &gt; <span class=\"hljs-number\">0</span> &amp;&amp; j &gt; <span class=\"hljs-number\">0</span>) neighbourCount += cells[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>]\n      <span class=\"hljs-keyword\">if</span> (i &gt; <span class=\"hljs-number\">0</span>) neighbourCount += cells[i - <span class=\"hljs-number\">1</span>][j]\n      <span class=\"hljs-keyword\">if</span> (i &gt; <span class=\"hljs-number\">0</span> &amp;&amp; j &lt; cells[i].<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>) neighbourCount += cells[i - <span class=\"hljs-number\">1</span>][j + <span class=\"hljs-number\">1</span>]\n      <span class=\"hljs-keyword\">if</span> (j &gt; <span class=\"hljs-number\">0</span>) neighbourCount += cells[i][j - <span class=\"hljs-number\">1</span>]\n      <span class=\"hljs-keyword\">if</span> (j &lt; cells[i].<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>) neighbourCount += cells[i][j + <span class=\"hljs-number\">1</span>]\n      <span class=\"hljs-keyword\">if</span> (i &lt; cells.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span> &amp;&amp; j &gt; <span class=\"hljs-number\">0</span>) neighbourCount += cells[i + <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>]\n      <span class=\"hljs-keyword\">if</span> (i &lt; cells.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>) neighbourCount += cells[i + <span class=\"hljs-number\">1</span>][j]\n      <span class=\"hljs-keyword\">if</span> (i &lt; cells.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span> &amp;&amp; j &lt; cells[i].<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>) neighbourCount += cells[i + <span class=\"hljs-number\">1</span>][j + <span class=\"hljs-number\">1</span>]\n\n      <span class=\"hljs-comment\">// Decide whether the cell is alive or dead</span>\n      <span class=\"hljs-keyword\">const</span> alive = cells[i][j] === <span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">if</span> ((alive &amp;&amp; neighbourCount &gt;= <span class=\"hljs-number\">2</span> &amp;&amp; neighbourCount &lt;= <span class=\"hljs-number\">3</span>) || (!alive &amp;&amp; neighbourCount === <span class=\"hljs-number\">3</span>)) {\n        nextGenerationRow.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-number\">1</span>)\n      } <span class=\"hljs-keyword\">else</span> {\n        nextGenerationRow.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-number\">0</span>)\n      }\n    }\n    nextGeneration.<span class=\"hljs-title function_\">push</span>(nextGenerationRow)\n  }\n  <span class=\"hljs-keyword\">return</span> nextGeneration\n}\n\n<span class=\"hljs-comment\">/*\n*  utility function to display a series of generations in the console\n*/</span>\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">animate</span> (cells, steps) {\n  <span class=\"hljs-comment\">/*\n  * utility function to print one frame\n  */</span>\n  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">printCells</span> (cells) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">clear</span>()\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; cells.<span class=\"hljs-property\">length</span>; i++) {\n      <span class=\"hljs-keyword\">let</span> line = <span class=\"hljs-string\">&#x27;&#x27;</span>\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; cells[i].<span class=\"hljs-property\">length</span>; j++) {\n        <span class=\"hljs-keyword\">if</span> (cells[i][j] === <span class=\"hljs-number\">1</span>) line += <span class=\"hljs-string\">&#x27;\\u2022&#x27;</span>\n        <span class=\"hljs-keyword\">else</span> line += <span class=\"hljs-string\">&#x27; &#x27;</span>\n      }\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(line)\n    }\n  }\n\n  <span class=\"hljs-title function_\">printCells</span>(cells)\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; steps; i++) {\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">resolve</span> =&gt;</span> <span class=\"hljs-built_in\">setTimeout</span>(resolve, <span class=\"hljs-number\">250</span>)) <span class=\"hljs-comment\">// sleep</span>\n    cells = <span class=\"hljs-title function_\">newGeneration</span>(cells)\n    <span class=\"hljs-title function_\">printCells</span>(cells)\n  }\n}\n\n<span class=\"hljs-comment\">// Define glider example</span>\n<span class=\"hljs-keyword\">const</span> glider = [\n  [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n  [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n  [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n  [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n  [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n  [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n  [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\n  [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>]\n]\n\n<span class=\"hljs-title function_\">animate</span>(glider, <span class=\"hljs-number\">16</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "Novice :)",
      "email": "72334601+noviicee@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "jenra",
      "email": "jenra.uwu@gmail.com",
      "commits": 1
    },
    {
      "name": "algobytewise",
      "email": "algobytewise@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}
