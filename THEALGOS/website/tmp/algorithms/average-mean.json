{
  "slug": "average-mean",
  "name": "Average Mean",
  "categories": ["math"],
  "body": {
    "en": "<p>Calculate the average of a list of numbers using mean.</p>\n<h2>Applications</h2>\n<p>Calculating the mean of a list of numbers is one of the most common ways to\ndetermine the average of those numbers.</p>\n<p>Calculating a mean would be useful in these situations:</p>\n<ul>\n<li>Determining the average score for all players of a video game level.</li>\n<li>Finding the average grade for tests that a student took this semester.</li>\n<li>Determining the average size of all files in a directory/folder.</li>\n</ul>\n<h2>Steps</h2>\n<ol>\n<li>Input a list of numbers.</li>\n<li>Calculate the sum of all numbers in the list.</li>\n<li>Count the numbers in the list.</li>\n<li>Divide the sum by the total count of numbers in the list.</li>\n<li>Return mean.</li>\n</ol>\n<h2>Example</h2>\n<p>Given the list <code>[2, 4, 6, 8, 20, 50, 70]</code>, let's calculate the average.</p>\n<h3>Step 1</h3>\n<p>Send <code>[2, 4, 6, 8, 20, 50, 70]</code> as input for a method/function.</p>\n<h3>Step 2</h3>\n<p>Add all the numbers together.</p>\n<p><code>2 + 4 + 6 + 8 + 20 + 50 + 70 = 160</code>, so <code>sum = 160</code>.</p>\n<h3>Step 3</h3>\n<p>Count the numbers in the list.</p>\n<p>The list has seven numbers, so <code>count = 7</code>.</p>\n<h3>Step 4</h3>\n<p>Divide the sum of all the numbers by the count of the numbers.</p>\n<pre><code class=\"hljs language-ini\"><span class=\"hljs-attr\">sum</span> = <span class=\"hljs-number\">160</span>\n<span class=\"hljs-attr\">count</span> = <span class=\"hljs-number\">7</span>\n</code></pre>\n<p>If we ignore significant digits: <code>sum / count = </code>22.857142</p>\n<p>If we properly consider significant digits: <code>sum / count = 23</code></p>\n<h3>Step 5</h3>\n<p>Return the value of 22.857142 or <code>23</code>.</p>\n<h2>Implementation</h2>\n<ul>\n<li><a href=\"https://github.com/TheAlgorithms/Python/blob/master/maths/average_mean.py\">Python</a></li>\n<li><a href=\"https://github.com/TheAlgorithms/Ruby/blob/master/maths/average_mean.rb\">Ruby</a></li>\n</ul>\n<h2>Video URL</h2>\n<ul>\n<li><a href=\"https://www.khanacademy.org/math/ap-statistics/summarizing-quantitative-data-ap/measuring-center-quantitative/v/mean-median-and-mode\">Mean on Khan Academy</a></li>\n</ul>\n<h2>Others</h2>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Mean\">Mean on Wikipedia</a></li>\n</ul>",
    "es": "<p>Calcule el promedio de una lista de números utilizando la media.</p>\n<h2>Aplicaciones</h2>\n<p>Calcular la media de una lista de números es una de las maneras más comunes de\ndeterminar el promedio de esos números.</p>\n<p>Calcular una media sería útil en estas situaciones:</p>\n<ul>\n<li>Determinar la puntuación media de todos los jugadores de un nivel de videojuego.</li>\n<li>Encontrar la nota promedio para las pruebas que un estudiante tomó este semestre.</li>\n<li>Determinar el tamaño medio de todos los archivos de un directorio/carpeta.</li>\n</ul>\n<h2>Pasos</h2>\n<ol>\n<li>Introduzca una lista de números.</li>\n<li>Calcule la suma de todos los números de la lista.</li>\n<li>Cuente los números de la lista.</li>\n<li>Divida la suma por el recuento total de números de la lista.</li>\n<li>Rentabilidad media.</li>\n</ol>\n<h2>Ejemplo</h2>\n<p>Dada la lista <code>[2, 4, 6, 8, 20, 50, 70]</code>, vamos a calcular el promedio.</p>\n<h3>Paso 1</h3>\n<p>Enviar <code>[2, 4, 6, 8, 20, 50, 70]</code> como entrada para un método/función.</p>\n<h3>Paso 2</h3>\n<p>Agregue todos los números juntos.</p>\n<p><code>2 + 4 + 6 + 8 + 20 + 50 + 70 = 160</code>, por lo que <code>suma = 160</code>.</p>\n<h3>Paso 3</h3>\n<p>Cuente los números de la lista.</p>\n<p>La lista tiene siete números, por lo que <code>count = 7</code>.</p>\n<h3>Paso 4</h3>\n<p>Divida la suma de todos los números por el recuento de los números.</p>\n<pre><code class=\"hljs language-ini\"><span class=\"hljs-attr\">suma</span> = <span class=\"hljs-number\">160</span>\n<span class=\"hljs-attr\">conteo</span> = <span class=\"hljs-number\">7</span>\n</code></pre>\n<p>Si ignoramos dígitos significativos: <code>suma / recuento = </code>22. 857142</p>\n<p>Si consideramos correctamente dígitos significativos: <code>suma / recuento = 23</code></p>\n<h3>Paso 5</h3>\n<p>Devuelva el valor de 22. 857142 o <code>23</code>.</p>\n<h2>Implementación</h2>\n<ul>\n<li><a href=\"https://github.com/TheAlgorithms/Python/blob/master/maths/average_mean.py\">Python</a></li>\n</ul>\n<h2>Video en YouTube</h2>\n<ul>\n<li><a href=\"https://www.khanacademy.org/math/ap-statistics/summarizing-quantitative-data-ap/measuring-center-quantitative/v/mean-media-and-mode\">Media en Khan Academy</a></li>\n</ul>\n<h2>Otros</h2>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Mean\">Media en Wikipedia</a></li>\n</ul>"
  },
  "implementations": {
    "python": {
      "dir": "maths/average_mean.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/average_mean.py",
      "code": "<span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">List</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">mean</span>(<span class=\"hljs-params\">nums: <span class=\"hljs-type\">List</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Find mean of a list of numbers.\n    Wiki: https://en.wikipedia.org/wiki/Mean\n\n    &gt;&gt;&gt; mean([3, 6, 9, 12, 15, 18, 21])\n    12.0\n    &gt;&gt;&gt; mean([5, 10, 15, 20, 25, 30, 35])\n    20.0\n    &gt;&gt;&gt; mean([1, 2, 3, 4, 5, 6, 7, 8])\n    4.5\n    &gt;&gt;&gt; mean([])\n    Traceback (most recent call last):\n        ...\n    ValueError: List is empty\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> nums:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;List is empty&quot;</span>)\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">sum</span>(nums) / <span class=\"hljs-built_in\">len</span>(nums)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    },
    "javascript": {
      "dir": "Maths/AverageMean.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/AverageMean.js",
      "code": "<span class=\"hljs-meta\">&#x27;use strict&#x27;</span>\n<span class=\"hljs-comment\">/*\n    author: PatOnTheBack\n    license: GPL-3.0 or later\n\n    Modified from:\n        https://github.com/TheAlgorithms/Python/blob/master/maths/average.py\n\n    This script will find the average (mean) of an array of numbers.\n\n    More about mean:\n        https://en.wikipedia.org/wiki/Mean\n*/</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">mean</span> = (<span class=\"hljs-params\">nums</span>) =&gt; {\n  <span class=\"hljs-comment\">// This is a function returns average/mean of array</span>\n  <span class=\"hljs-keyword\">let</span> sum = <span class=\"hljs-number\">0</span>\n\n  <span class=\"hljs-comment\">// This loop sums all values in the &#x27;nums&#x27; array using forEach loop</span>\n  nums.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">current</span>) {\n    sum += current\n  })\n\n  <span class=\"hljs-comment\">// Divide sum by the length of the &#x27;nums&#x27; array.</span>\n  <span class=\"hljs-keyword\">const</span> avg = sum / nums.<span class=\"hljs-property\">length</span>\n  <span class=\"hljs-keyword\">return</span> avg\n}\n\n<span class=\"hljs-keyword\">export</span> { mean }\n"
    },
    "ruby": {
      "dir": "maths/average_mean.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/maths/average_mean.rb",
      "code": "<span class=\"hljs-comment\"># A ruby program for finding average mean</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">module</span> <span class=\"hljs-title\">AverageMean</span></span>\n  <span class=\"hljs-comment\"># Average mean = sum of elements / total number of elements</span>\n  def <span class=\"hljs-keyword\">self</span>.average_mean(n, *array)\n    <span class=\"hljs-keyword\">if</span> n.instance_of? Integer\n      <span class=\"hljs-keyword\">if</span> n == array.size\n        puts <span class=\"hljs-string\">&quot;The average mean of the following elements <span class=\"hljs-subst\">#{array}</span> is <span class=\"hljs-subst\">#{array.sum/array.size}</span>.&quot;</span>\n      <span class=\"hljs-keyword\">else</span>\n        puts <span class=\"hljs-string\">&quot;Provide the required <span class=\"hljs-subst\">#{n}</span> elements properly!&quot;</span>\n      <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">else</span>\n      raise\n    <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">rescue</span>\n      puts <span class=\"hljs-string\">&quot;Error: Please provide number only!&quot;</span>\n  <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-comment\"># Valid inputs</span>\nAverageMean.average_mean(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>)\nAverageMean.average_mean(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>)\nAverageMean.average_mean(<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)\n\n<span class=\"hljs-comment\"># Invalid inputs</span>\nAverageMean.average_mean(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5</span>)\nAverageMean.average_mean(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-string\">&quot;a&quot;</span>)\nAverageMean.average_mean(<span class=\"hljs-string\">&quot;a&quot;</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>)\n"
    },
    "julia": {
      "dir": "src/math/average_mean.jl",
      "url": "https://github.com/TheAlgorithms/julia/tree/master/src/math/average_mean.jl",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\n    mean(nums)\n\nFind mean of a vector of numbers\n\n# Example\n\n```julia\nmean([3, 6, 9, 12, 15, 18, 21])      # returns 12.0\nmean([5, 10, 15, 20, 25, 30, 35])    # returns 20.0\nmean([1, 2, 3, 4, 5, 6, 7, 8])       # returns 4.5\n```\n\nContributed By:- [Ashwani Rathee](https://github.com/ashwani-rathee) and [Rratic](https://github.com/Rratic)\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">function</span> mean(nums::<span class=\"hljs-built_in\">Vector</span>{T})<span class=\"hljs-keyword\">where</span> T&lt;:<span class=\"hljs-built_in\">Number</span>\n    <span class=\"hljs-keyword\">return</span> sum(nums) / length(nums)\n<span class=\"hljs-keyword\">end</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Ashwani Rathee",
      "email": "ab669522@gmail.com",
      "commits": 1
    },
    {
      "name": "Sahil Afrid Farookhi",
      "email": "msafarookhi@gmail.com",
      "commits": 1
    },
    {
      "name": "UdhavKumar",
      "email": "61343874+UdhavKumar@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "PatOnTheBack",
      "email": "51241310+PatOnTheBack@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Grigoriy Hanin",
      "email": "43445998+haningrisha@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "moita69",
      "email": "fmj1988@gmail.com",
      "commits": 1
    },
    {
      "name": "Maram Sumanth",
      "email": "maram.sumanth@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Rratic",
      "email": "Rratic@163.com",
      "commits": 2
    },
    {
      "name": "Ephraim Atta-Duncan",
      "email": "55143799+dephraiim@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {
    "en": "https://github.com/TheAlgorithms/Algorithms-Explanation/tree/master/en/Basic Math/Average_Mean.md",
    "es": "https://github.com/TheAlgorithms/Algorithms-Explanation/tree/master/es/Matematicas Básico/Promedio.md"
  }
}
