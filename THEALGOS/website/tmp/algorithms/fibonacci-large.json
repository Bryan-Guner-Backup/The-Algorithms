{
  "slug": "fibonacci-large",
  "name": "Fibonacci Large",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "math/fibonacci_large.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/math/fibonacci_large.cpp",
      "code": "<span class=\"hljs-comment\">/**\n * @file\n * @brief Computes N^th Fibonacci number given as\n * input argument. Uses custom build arbitrary integers library\n * to perform additions and other operations.\n *\n * Took 0.608246 seconds to compute 50,000^th Fibonacci\n * number that contains 10450 digits!\n *\n * \\author [Krishna Vedala](https://github.com/kvedala)\n * @see fibonacci.cpp, fibonacci_fast.cpp, string_fibonacci.cpp\n */</span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cinttypes&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;ctime&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;./large_number.h&quot;</span></span>\n\n<span class=\"hljs-comment\">/** Compute fibonacci numbers using the relation\n * \\f[f(n)=f(n-1)+f(n-2)\\f]\n * and returns the result as a large_number type.\n */</span>\n<span class=\"hljs-function\">large_number <span class=\"hljs-title\">fib</span><span class=\"hljs-params\">(<span class=\"hljs-type\">uint64_t</span> n)</span> </span>{\n    <span class=\"hljs-function\">large_number <span class=\"hljs-title\">f0</span><span class=\"hljs-params\">(<span class=\"hljs-number\">1</span>)</span></span>;\n    <span class=\"hljs-function\">large_number <span class=\"hljs-title\">f1</span><span class=\"hljs-params\">(<span class=\"hljs-number\">1</span>)</span></span>;\n\n    <span class=\"hljs-keyword\">do</span> {\n        large_number f2 = f1;\n        f1 += f0;\n        f0 = f2;\n        n--;\n    } <span class=\"hljs-keyword\">while</span> (n &gt; <span class=\"hljs-number\">2</span>);  <span class=\"hljs-comment\">// since we start from 2</span>\n\n    <span class=\"hljs-keyword\">return</span> f1;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> argc, <span class=\"hljs-type\">char</span> *argv[])</span> </span>{\n    <span class=\"hljs-type\">uint64_t</span> N;\n    <span class=\"hljs-keyword\">if</span> (argc == <span class=\"hljs-number\">2</span>) {\n        N = <span class=\"hljs-built_in\">strtoull</span>(argv[<span class=\"hljs-number\">1</span>], <span class=\"hljs-literal\">NULL</span>, <span class=\"hljs-number\">10</span>);\n    } <span class=\"hljs-keyword\">else</span> {\n        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter N: &quot;</span>;\n        std::cin &gt;&gt; N;\n    }\n\n    <span class=\"hljs-type\">clock_t</span> start_time = std::<span class=\"hljs-built_in\">clock</span>();\n    large_number result = <span class=\"hljs-built_in\">fib</span>(N);\n    <span class=\"hljs-type\">clock_t</span> end_time = std::<span class=\"hljs-built_in\">clock</span>();\n    <span class=\"hljs-type\">double</span> time_taken = <span class=\"hljs-built_in\">static_cast</span>&lt;<span class=\"hljs-type\">double</span>&gt;(end_time - start_time) /\n                        <span class=\"hljs-built_in\">static_cast</span>&lt;<span class=\"hljs-type\">double</span>&gt;(CLOCKS_PER_SEC);\n\n    std::cout &lt;&lt; std::endl\n              &lt;&lt; N &lt;&lt; <span class=\"hljs-string\">&quot;^th Fibonacci number: &quot;</span> &lt;&lt; result &lt;&lt; std::endl\n              &lt;&lt; <span class=\"hljs-string\">&quot;Number of digits: &quot;</span> &lt;&lt; result.<span class=\"hljs-built_in\">num_digits</span>() &lt;&lt; std::endl\n              &lt;&lt; <span class=\"hljs-string\">&quot;Time taken: &quot;</span> &lt;&lt; std::scientific &lt;&lt; time_taken &lt;&lt; <span class=\"hljs-string\">&quot; s&quot;</span>\n              &lt;&lt; std::endl;\n\n    N = <span class=\"hljs-number\">5000</span>;\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">fib</span>(N) ==\n        <span class=\"hljs-built_in\">large_number</span>(\n            <span class=\"hljs-string\">&quot;387896845438832563370191630832590531208212771464624510616059721489&quot;</span>\n            <span class=\"hljs-string\">&quot;555013904403709701082291646221066947929345285888297381348310200895&quot;</span>\n            <span class=\"hljs-string\">&quot;498294036143015691147893836421656394410691021450563413370655865623&quot;</span>\n            <span class=\"hljs-string\">&quot;825465670071252592990385493381392883637834751890876297071203333705&quot;</span>\n            <span class=\"hljs-string\">&quot;292310769300851809384980180384781399674888176555465378829164426891&quot;</span>\n            <span class=\"hljs-string\">&quot;298038461377896902150229308247566634622492307188332480328037503913&quot;</span>\n            <span class=\"hljs-string\">&quot;035290330450584270114763524227021093463769910400671417488329842289&quot;</span>\n            <span class=\"hljs-string\">&quot;149127310405432875329804427367682297724498774987455569190770388063&quot;</span>\n            <span class=\"hljs-string\">&quot;704683279481135897373999311010621930814901857081539785437919530561&quot;</span>\n            <span class=\"hljs-string\">&quot;751076105307568878376603366735544525884488624161921055345749367589&quot;</span>\n            <span class=\"hljs-string\">&quot;784902798823435102359984466393485325641195222185956306047536464547&quot;</span>\n            <span class=\"hljs-string\">&quot;076033090242080638258492915645287629157575914234380914230291749108&quot;</span>\n            <span class=\"hljs-string\">&quot;898415520985443248659407979357131684169286803954530954538869811466&quot;</span>\n            <span class=\"hljs-string\">&quot;508206686289742063932343848846524098874239587380197699382031717420&quot;</span>\n            <span class=\"hljs-string\">&quot;893226546887936400263079778005875912967138963421425257911687275560&quot;</span>\n            <span class=\"hljs-string\">&quot;0360311370547754724604639987588046985178408674382863125&quot;</span>))\n        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Test for &quot;</span> &lt;&lt; N &lt;&lt; <span class=\"hljs-string\">&quot;^th Fibonacci number passed!&quot;</span>\n                  &lt;&lt; std::endl;\n    <span class=\"hljs-keyword\">else</span>\n        std::cerr &lt;&lt; <span class=\"hljs-string\">&quot;Test for &quot;</span> &lt;&lt; N &lt;&lt; <span class=\"hljs-string\">&quot;^th Fibonacci number failed!&quot;</span>\n                  &lt;&lt; std::endl;\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
