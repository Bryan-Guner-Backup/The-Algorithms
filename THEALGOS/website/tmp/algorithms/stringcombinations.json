{
  "slug": "stringcombinations",
  "name": "Stringcombinations",
  "categories": ["others", "stringcombinations"],
  "body": {},
  "implementations": {
    "go": {
      "dir": "other/stringcombinations/stringcombinations.go",
      "url": "https://github.com/TheAlgorithms/go/tree/master/other/stringcombinations/stringcombinations.go",
      "code": "<span class=\"hljs-comment\">// Package stringcombinations ...</span>\n<span class=\"hljs-keyword\">package</span> stringcombinations\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;fmt&quot;</span>\n\n<span class=\"hljs-comment\">// Combinations structure with in and out rune</span>\n<span class=\"hljs-keyword\">type</span> Combinations <span class=\"hljs-keyword\">struct</span> {\n\tout []<span class=\"hljs-keyword\">rune</span>\n\tin  []<span class=\"hljs-keyword\">rune</span>\n}\n\n<span class=\"hljs-comment\">// StartCombinations ...</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">StartCombinations</span><span class=\"hljs-params\">(input <span class=\"hljs-keyword\">string</span>)</span></span> {\n\tc := &amp;Combinations{\n\t\tin: []<span class=\"hljs-keyword\">rune</span>(input),\n\t}\n\n\tc.Combine(<span class=\"hljs-number\">0</span>)\n}\n\n<span class=\"hljs-comment\">// Combine ...</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-params\">(c *Combinations)</span> <span class=\"hljs-title\">Combine</span><span class=\"hljs-params\">(seed <span class=\"hljs-keyword\">int</span>)</span></span> {\n\tinLen := <span class=\"hljs-built_in\">len</span>(c.in)\n\t<span class=\"hljs-keyword\">for</span> i := seed; i &lt; inLen<span class=\"hljs-number\">-1</span>; i++ {\n\t\tc.out = <span class=\"hljs-built_in\">append</span>(c.out, c.in[i])\n\t\tfmt.Println(<span class=\"hljs-keyword\">string</span>(c.out))\n\t\tc.Combine(i + <span class=\"hljs-number\">1</span>)\n\t\tc.out = c.out[:<span class=\"hljs-built_in\">len</span>(c.out)<span class=\"hljs-number\">-1</span>]\n\t}\n\tc.out = <span class=\"hljs-built_in\">append</span>(c.out, c.in[inLen<span class=\"hljs-number\">-1</span>])\n\tfmt.Println(<span class=\"hljs-keyword\">string</span>(c.out))\n\tc.out = c.out[:<span class=\"hljs-built_in\">len</span>(c.out)<span class=\"hljs-number\">-1</span>]\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
