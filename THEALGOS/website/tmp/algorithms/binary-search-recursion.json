{
  "slug": "binary-search-recursion",
  "name": "Binary Search Recursion",
  "categories": ["searches"],
  "body": {},
  "implementations": {
    "dart": {
      "dir": "search/binary_search_recursion.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/search/binary_search_recursion.dart",
      "code": "<span class=\"hljs-comment\">/* Driver */</span>\n<span class=\"hljs-keyword\">void</span> main() {\n  <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; list = [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>];\n\n  <span class=\"hljs-built_in\">int</span> low = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-built_in\">int</span> high = list.length - <span class=\"hljs-number\">1</span>;\n\n  <span class=\"hljs-keyword\">assert</span>(binarySearch(list, low, high, <span class=\"hljs-number\">5</span>) == <span class=\"hljs-number\">5</span>);\n  <span class=\"hljs-keyword\">assert</span>(binarySearch(list, low, high, <span class=\"hljs-number\">9</span>) == <span class=\"hljs-number\">9</span>);\n  <span class=\"hljs-keyword\">assert</span>(binarySearch(list, low, high, <span class=\"hljs-number\">66</span>) == <span class=\"hljs-number\">-1</span>);\n}\n\n<span class=\"hljs-comment\"><span class=\"language-markdown\">/<span class=\"hljs-strong\">**\n <span class=\"hljs-emphasis\">*</span></span></span> Return the index <span class=\"language-markdown\"><span class=\"hljs-strong\"><span class=\"hljs-emphasis\">of [key] value in [list]\n *</span>/</span></span></span>\n<span class=\"hljs-built_in\">int</span> binarySearch(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; list, <span class=\"hljs-built_in\">int</span> low, <span class=\"hljs-built_in\">int</span> high, <span class=\"hljs-built_in\">int</span> key) {\n  <span class=\"hljs-keyword\">if</span> (low &gt; high) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">/* not found */</span>\n  }\n  <span class=\"hljs-built_in\">int</span> mid = (low + high) &gt;&gt; <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-keyword\">if</span> (key == list[mid]) {\n    <span class=\"hljs-keyword\">return</span> mid; <span class=\"hljs-comment\">/* found */</span>\n  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (key &gt; list[mid]) {\n    <span class=\"hljs-keyword\">return</span> binarySearch(\n        list, mid + <span class=\"hljs-number\">1</span>, high, key); <span class=\"hljs-comment\">/* search in range[mid + 1, high] */</span>\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-keyword\">return</span> binarySearch(\n        list, low, mid - <span class=\"hljs-number\">1</span>, key); <span class=\"hljs-comment\">/* search in range[low, mid - 1] */</span>\n  }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
