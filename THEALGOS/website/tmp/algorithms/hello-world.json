{
  "slug": "hello-world",
  "name": "Hello World",
  "categories": ["exercism", "helloworld"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "exercism/hello_world/hello_world.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/exercism/hello_world/hello_world.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;hello_world.h&quot;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdlib.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;string.h&gt;</span></span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-type\">char</span> *<span class=\"hljs-title function_\">hello</span><span class=\"hljs-params\">(<span class=\"hljs-type\">void</span>)</span>\n{\n    <span class=\"hljs-type\">char</span> *ans = strdup(<span class=\"hljs-string\">&quot;Hello, World!&quot;</span>);\n    <span class=\"hljs-comment\">/* string is pointer of the first character */</span>\n    <span class=\"hljs-keyword\">return</span> ans;\n}\n"
    },
    "aarch64_assembly": {
      "dir": "misc/hello_world.s",
      "url": "https://github.com/TheAlgorithms/aarch64_assembly/tree/master/misc/hello_world.s",
      "code": "<span class=\"hljs-symbol\">.equ</span> STDOUT, <span class=\"hljs-number\">1</span>\n<span class=\"hljs-symbol\">.equ</span> SVC_WRITE, <span class=\"hljs-number\">64</span>\n<span class=\"hljs-symbol\">.equ</span> SVC_EXIT, <span class=\"hljs-number\">93</span>\n \n<span class=\"hljs-symbol\">.text</span>\n<span class=\"hljs-symbol\">.global</span> _start\n \n<span class=\"hljs-symbol\">_start:</span>\n\tstp x29, x30, [<span class=\"hljs-built_in\">sp</span>, -<span class=\"hljs-number\">16</span>]!\n\t<span class=\"hljs-keyword\">mov</span> x0, <span class=\"hljs-symbol\">#STDOUT</span>\n\t<span class=\"hljs-keyword\">ldr</span> x1, <span class=\"hljs-symbol\">=msg</span>\n\t<span class=\"hljs-keyword\">mov</span> x2, <span class=\"hljs-number\">13</span>\n\t<span class=\"hljs-keyword\">mov</span> x8, <span class=\"hljs-symbol\">#SVC_WRITE</span>\n\t<span class=\"hljs-keyword\">mov</span> x29, <span class=\"hljs-built_in\">sp</span>\n\t<span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">#0</span> <span class=\"hljs-comment\">// write(stdout, msg, 13);</span>\n\tldp x29, x30, [<span class=\"hljs-built_in\">sp</span>], <span class=\"hljs-number\">16</span>\n\t<span class=\"hljs-keyword\">mov</span> x0, <span class=\"hljs-number\">#0</span>\n\t<span class=\"hljs-keyword\">mov</span> x8, <span class=\"hljs-symbol\">#SVC_EXIT</span>\n\t<span class=\"hljs-keyword\">svc</span> <span class=\"hljs-number\">#0</span> <span class=\"hljs-comment\">// exit(0);</span>\n \n<span class=\"hljs-symbol\">msg:</span>\t<span class=\"hljs-meta\">.ascii</span> <span class=\"hljs-string\">&quot;Hello World!\\n&quot;</span>\n<span class=\"hljs-symbol\">.align</span> <span class=\"hljs-number\">4</span>\n"
    }
  },
  "contributors": [
    {
      "name": "lahcenlachgar",
      "email": "lachgarlahcen@hotmail.com",
      "commits": 1
    },
    {
      "name": "A Silent Cat",
      "email": "silentcat@protonmail.com",
      "commits": 1
    },
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}
