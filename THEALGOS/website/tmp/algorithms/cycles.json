{
  "slug": "cycles",
  "name": "Cycles",
  "categories": ["datastructures", "graphs"],
  "body": {},
  "implementations": {
    "java": {
      "dir": "DataStructures/Graphs/Cycles.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/DataStructures/Graphs/Cycles.java",
      "code": "<span class=\"hljs-keyword\">package</span> DataStructures.Graphs;\n\n<span class=\"hljs-keyword\">import</span> java.util.ArrayList;\n<span class=\"hljs-keyword\">import</span> java.util.Scanner;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Cycle</span> {\n\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> nodes, edges;\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span>[][] adjacencyMatrix;\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">boolean</span>[] visited;\n  ArrayList&lt;ArrayList&lt;Integer&gt;&gt; cycles = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;ArrayList&lt;Integer&gt;&gt;();\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">Cycle</span><span class=\"hljs-params\">()</span> {\n    <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">in</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n    System.out.print(<span class=\"hljs-string\">&quot;Enter the no. of nodes: &quot;</span>);\n    nodes = in.nextInt();\n    System.out.print(<span class=\"hljs-string\">&quot;Enter the no. of Edges: &quot;</span>);\n    edges = in.nextInt();\n\n    adjacencyMatrix = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[nodes][nodes];\n    visited = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">boolean</span>[nodes];\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nodes; i++) {\n      visited[i] = <span class=\"hljs-literal\">false</span>;\n    }\n\n    System.out.println(<span class=\"hljs-string\">&quot;Enter the details of each edges &lt;Start Node&gt; &lt;End Node&gt;&quot;</span>);\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; edges; i++) {\n      <span class=\"hljs-type\">int</span> start, end;\n      start = in.nextInt();\n      end = in.nextInt();\n      adjacencyMatrix[start][end] = <span class=\"hljs-number\">1</span>;\n    }\n    in.close();\n  }\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">start</span><span class=\"hljs-params\">()</span> {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nodes; i++) {\n      ArrayList&lt;Integer&gt; temp = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();\n      dfs(i, i, temp);\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; j &lt; nodes; j++) {\n        adjacencyMatrix[i][j] = <span class=\"hljs-number\">0</span>;\n        adjacencyMatrix[j][i] = <span class=\"hljs-number\">0</span>;\n      }\n    }\n  }\n\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">dfs</span><span class=\"hljs-params\">(Integer start, Integer curr, ArrayList&lt;Integer&gt; temp)</span> {\n    temp.add(curr);\n    visited[curr] = <span class=\"hljs-literal\">true</span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nodes; i++) {\n      <span class=\"hljs-keyword\">if</span> (adjacencyMatrix[curr][i] == <span class=\"hljs-number\">1</span>) {\n        <span class=\"hljs-keyword\">if</span> (i == start) {\n          cycles.add(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;Integer&gt;(temp));\n        } <span class=\"hljs-keyword\">else</span> {\n          <span class=\"hljs-keyword\">if</span> (!visited[i]) {\n            dfs(start, i, temp);\n          }\n        }\n      }\n    }\n\n    <span class=\"hljs-keyword\">if</span> (temp.size() &gt; <span class=\"hljs-number\">0</span>) {\n      temp.remove(temp.size() - <span class=\"hljs-number\">1</span>);\n    }\n    visited[curr] = <span class=\"hljs-literal\">false</span>;\n  }\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">printAll</span><span class=\"hljs-params\">()</span> {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; cycles.size(); i++) {\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; j &lt; cycles.get(i).size(); j++) {\n        System.out.print(cycles.get(i).get(j) + <span class=\"hljs-string\">&quot; -&gt; &quot;</span>);\n      }\n      System.out.println(cycles.get(i).get(<span class=\"hljs-number\">0</span>));\n      System.out.println();\n    }\n  }\n}\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Cycles</span> {\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n    <span class=\"hljs-type\">Cycle</span> <span class=\"hljs-variable\">c</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Cycle</span>();\n    c.start();\n    c.printAll();\n  }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "shivg7706",
      "email": "shivamgupta7706@gmail.com",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 2
    },
    {
      "name": "EAlexa",
      "email": "rubi_81@outlook.de",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
