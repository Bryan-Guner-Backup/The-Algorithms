{
  "slug": "nqueen",
  "name": "NQueen",
  "categories": ["backtracking"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Backtracking/NQueen.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Backtracking/NQueen.js",
      "code": "<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">NQueen</span> {\n  <span class=\"hljs-title function_\">constructor</span> (size) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">board</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span>(size).<span class=\"hljs-title function_\">fill</span>(<span class=\"hljs-string\">&#x27;.&#x27;</span>).<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span>(size).<span class=\"hljs-title function_\">fill</span>(<span class=\"hljs-string\">&#x27;.&#x27;</span>))\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span> = size\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">solutionCount</span> = <span class=\"hljs-number\">0</span>\n  }\n\n  isValid ([row, col]) {\n    <span class=\"hljs-comment\">// function to check if the placement of the queen in the given location is valid</span>\n\n    <span class=\"hljs-comment\">// checking the left of the current row</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; col; i++) {\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">board</span>[row][i] === <span class=\"hljs-string\">&#x27;Q&#x27;</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    }\n\n    <span class=\"hljs-comment\">// checking the upper left diagonal</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = row, j = col; i &gt;= <span class=\"hljs-number\">0</span> &amp;&amp; j &gt;= <span class=\"hljs-number\">0</span>; i--, j--) {\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">board</span>[i][j] === <span class=\"hljs-string\">&#x27;Q&#x27;</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    }\n\n    <span class=\"hljs-comment\">// checking the lower left diagonal</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = row, j = col; j &gt;= <span class=\"hljs-number\">0</span> &amp;&amp; i &lt; <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>; i++, j--) {\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">board</span>[i][j] === <span class=\"hljs-string\">&#x27;Q&#x27;</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n  }\n\n  placeQueen (row, col) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">board</span>[row][col] = <span class=\"hljs-string\">&#x27;Q&#x27;</span>\n  }\n\n  removeQueen (row, col) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">board</span>[row][col] = <span class=\"hljs-string\">&#x27;.&#x27;</span>\n  }\n\n  solve (col = <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">if</span> (col &gt;= <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">printBoard</span>()\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">solutionCount</span>++\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>; i++) {\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">isValid</span>([i, col])) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">placeQueen</span>(i, col)\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">solve</span>(col + <span class=\"hljs-number\">1</span>)\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">removeQueen</span>(i, col)\n      }\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  }\n\n  printBoard () {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>)\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> row <span class=\"hljs-keyword\">of</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">board</span>) {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(...row)\n    }\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> { NQueen }\n"
    }
  },
  "contributors": [
    {
      "name": "Tapajyoti Bose",
      "email": "44058757+ruppysuppy@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "hasan",
      "email": "hasanuli10@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
