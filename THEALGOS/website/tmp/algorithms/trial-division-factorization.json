{
  "slug": "trial-division-factorization",
  "name": "Trial division Factorization",
  "categories": ["datastructures", "linkedlist"],
  "body": {},
  "implementations": {
    "c-sharp": {
      "dir": "Algorithms/Numeric/Factorization/TrialDivisionFactorizer.cs",
      "url": "https://github.com/TheAlgorithms/C-Sharp/blob/master/Algorithms/Numeric/Factorization/TrialDivisionFactorizer.cs",
      "code": "ï»¿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Linq;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Algorithms.Numeric.Factorization</span>\n{\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Factors number using trial division algorithm.</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TrialDivisionFactorizer</span> : <span class=\"hljs-title\">IFactorizer</span>\n    {\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Finds a factor of a given number or returns false if it&#x27;s prime.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;n&quot;&gt;</span>Integer to factor.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;factor&quot;&gt;</span>Found factor.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span><span class=\"hljs-doctag\">&lt;see langword=&quot;true&quot; /&gt;</span> if factor is found, <span class=\"hljs-doctag\">&lt;see langword=&quot;false&quot; /&gt;</span> if <span class=\"hljs-doctag\">&lt;paramref name=&quot;n&quot; /&gt;</span> is prime.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">TryFactor</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> n, <span class=\"hljs-keyword\">out</span> <span class=\"hljs-built_in\">int</span> factor</span>)</span>\n        {\n            n = Math.Abs(n);\n            factor = Enumerable.Range(<span class=\"hljs-number\">2</span>, (<span class=\"hljs-built_in\">int</span>)Math.Sqrt(n) - <span class=\"hljs-number\">1</span>).FirstOrDefault(i =&gt; n % i == <span class=\"hljs-number\">0</span>);\n            <span class=\"hljs-keyword\">return</span> factor != <span class=\"hljs-number\">0</span>;\n        }\n    }\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
