{
  "slug": "gauss-elimination",
  "name": "Gauss Elimination",
  "categories": ["numericalmethods"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "numerical_methods/gauss_elimination.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/numerical_methods/gauss_elimination.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;math.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> ARRAY_SIZE 20</span>\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">display</span><span class=\"hljs-params\">(<span class=\"hljs-type\">float</span> a[ARRAY_SIZE][ARRAY_SIZE], <span class=\"hljs-type\">int</span> n)</span>\n{\n    <span class=\"hljs-type\">int</span> i, j;\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)\n    {\n        <span class=\"hljs-keyword\">for</span> (j = <span class=\"hljs-number\">0</span>; j &lt;= n; j++)\n        {\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%.2f \\t&quot;</span>, a[i][j]);\n        }\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n    }\n}\n\n<span class=\"hljs-type\">float</span> <span class=\"hljs-title function_\">interchange</span><span class=\"hljs-params\">(<span class=\"hljs-type\">float</span> m[ARRAY_SIZE][ARRAY_SIZE], <span class=\"hljs-type\">int</span> i, <span class=\"hljs-type\">int</span> n)</span>\n{\n    <span class=\"hljs-type\">float</span> tmp[ARRAY_SIZE][ARRAY_SIZE];\n    <span class=\"hljs-type\">float</span> max = <span class=\"hljs-built_in\">fabs</span>(m[i][i]);\n    <span class=\"hljs-type\">int</span> j, k = i;\n\n    <span class=\"hljs-keyword\">for</span> (j = i; j &lt; n; j++)\n    {\n        <span class=\"hljs-keyword\">if</span> (max &lt; <span class=\"hljs-built_in\">fabs</span>(m[j][i]))\n        {\n            max = <span class=\"hljs-built_in\">fabs</span>(m[j][i]);\n            k = j;\n        }\n    }\n    <span class=\"hljs-keyword\">for</span> (j = <span class=\"hljs-number\">0</span>; j &lt;= n; j++)\n    {\n        tmp[i][j] = m[i][j];\n        m[i][j] = m[k][j];\n        m[k][j] = tmp[i][j];\n    }\n    <span class=\"hljs-keyword\">return</span> m[ARRAY_SIZE - <span class=\"hljs-number\">1</span>][ARRAY_SIZE - <span class=\"hljs-number\">1</span>];\n}\n<span class=\"hljs-type\">float</span> <span class=\"hljs-title function_\">eliminate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">float</span> m[ARRAY_SIZE][ARRAY_SIZE], <span class=\"hljs-type\">int</span> i, <span class=\"hljs-type\">int</span> n)</span>\n{\n    <span class=\"hljs-type\">float</span> tmp;\n    <span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">1</span>, l, j;\n    <span class=\"hljs-keyword\">for</span> (j = i; j &lt; n - <span class=\"hljs-number\">1</span>; j++)\n    {\n        tmp = -((m[i + k][i]) / (m[i][i]));\n        <span class=\"hljs-keyword\">for</span> (l = <span class=\"hljs-number\">0</span>; l &lt;= n; l++)\n        {\n            m[i + k][l] = (m[i + k][l]) + (m[i][l] * tmp);\n        }\n        k++;\n    }\n    <span class=\"hljs-keyword\">return</span> m[ARRAY_SIZE - <span class=\"hljs-number\">1</span>][ARRAY_SIZE - <span class=\"hljs-number\">1</span>];\n}\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(<span class=\"hljs-type\">void</span>)</span>\n{\n    <span class=\"hljs-type\">int</span> i, j, n, k = <span class=\"hljs-number\">0</span>, l;\n    <span class=\"hljs-type\">float</span> m[ARRAY_SIZE][ARRAY_SIZE], mul, tmp[ARRAY_SIZE][ARRAY_SIZE], val,\n        ans[ARRAY_SIZE];\n\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Total No.of Equations : &quot;</span>);\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;n);\n\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)\n    {\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Enter Co-efficient Of Equations %d &amp; Total ---&gt;&gt;&gt;\\n&quot;</span>, i + <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">for</span> (j = <span class=\"hljs-number\">0</span>; j &lt;= n; j++)\n        {\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;r%d%d : &quot;</span>, i, j);\n            <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%f&quot;</span>, &amp;m[i][j]);\n        }\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n    }\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;:::::::::::: Current Matrix ::::::::::::\\n\\n&quot;</span>);\n    display(m, n);\n\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n - <span class=\"hljs-number\">1</span>; i++)\n    {\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n-------&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;-------- %d\\n&quot;</span>, i + <span class=\"hljs-number\">1</span>);\n        m[ARRAY_SIZE - <span class=\"hljs-number\">1</span>][ARRAY_SIZE - <span class=\"hljs-number\">1</span>] = interchange(m, i, n);\n        display(m, n);\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n_______________________________________\\n&quot;</span>);\n        m[ARRAY_SIZE - <span class=\"hljs-number\">1</span>][ARRAY_SIZE - <span class=\"hljs-number\">1</span>] = eliminate(m, i, n);\n        display(m, n);\n    }\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n\\n Values are : \\n&quot;</span>);\n    <span class=\"hljs-keyword\">for</span> (i = n - <span class=\"hljs-number\">1</span>; i &gt;= <span class=\"hljs-number\">0</span>; i--)\n    {\n        l = n - <span class=\"hljs-number\">1</span>;\n        mul = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span> (j = <span class=\"hljs-number\">0</span>; j &lt; k; j++)\n        {\n            mul = mul + m[i][l] * ans[l];\n            l--;\n        }\n        k++;\n        ans[i] = (m[i][n] - mul) / m[i][i];\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;X%d = %.2f\\n&quot;</span>, i + <span class=\"hljs-number\">1</span>, ans[i]);\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Harshil Darji",
      "email": "darjiharshil2994@gmail.com",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "krishna.vedala@ieee.org",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
