{
  "slug": "modular-exponential",
  "name": "Modular Exponential",
  "categories": ["math"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/modular_exponential.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/modular_exponential.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\n    Modular Exponential.\n    Modular exponentiation is a type of exponentiation performed over a modulus.\n    For more explanation, please check\n    https://en.wikipedia.org/wiki/Modular_exponentiation\n&quot;&quot;&quot;</span>\n\n<span class=\"hljs-string\">&quot;&quot;&quot;Calculate Modular Exponential.&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">modular_exponential</span>(<span class=\"hljs-params\">base: <span class=\"hljs-built_in\">int</span>, power: <span class=\"hljs-built_in\">int</span>, mod: <span class=\"hljs-built_in\">int</span></span>):\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    &gt;&gt;&gt; modular_exponential(5, 0, 10)\n    1\n    &gt;&gt;&gt; modular_exponential(2, 8, 7)\n    4\n    &gt;&gt;&gt; modular_exponential(3, -2, 9)\n    -1\n    &quot;&quot;&quot;</span>\n\n    <span class=\"hljs-keyword\">if</span> power &lt; <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>\n    base %= mod\n    result = <span class=\"hljs-number\">1</span>\n\n    <span class=\"hljs-keyword\">while</span> power &gt; <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">if</span> power &amp; <span class=\"hljs-number\">1</span>:\n            result = (result * base) % mod\n        power = power &gt;&gt; <span class=\"hljs-number\">1</span>\n        base = (base * base) % mod\n\n    <span class=\"hljs-keyword\">return</span> result\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    <span class=\"hljs-string\">&quot;&quot;&quot;Call Modular Exponential Function.&quot;&quot;&quot;</span>\n    <span class=\"hljs-built_in\">print</span>(modular_exponential(<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">13</span>))\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n\n    main()\n"
    }
  },
  "contributors": [
    {
      "name": "AlexDvorak",
      "email": "opti.jawsome@gmail.com",
      "commits": 1
    },
    {
      "name": "PatOnTheBack",
      "email": "51241310+PatOnTheBack@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Iqrar Agalosi Nureyza",
      "email": "misteriqrar@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "PiyushPawar17",
      "email": "piyushpawar25@gmail.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}
