{
  "slug": "word-count",
  "name": "Word Count",
  "categories": ["exercism", "wordcount"],
  "body": {},
  "implementations": {
    "c": {
      "dir": "exercism/word_count/word_count.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/exercism/word_count/word_count.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;word_count.h&quot;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;string.h&gt;</span></span>\n\n<span class=\"hljs-comment\">/*\n    word_count: returns the full number of words in the input_text,\n                otherwise an error code: (see below)\n\n    error codes: EXCESSIVE_LENGTH_WORD     -1\n                 EXCESSIVE_NUMBER_OF_WORDS -2\n\n    The function manipulates the given structure of type word_count_word_t\n    After that process the member count contains the number of occures.\n*/</span>\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">word_count</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-type\">char</span> *input_text, <span class=\"hljs-type\">word_count_word_t</span> *words)</span>\n{\n    <span class=\"hljs-type\">char</span> word_list[MAX_WORDS][MAX_WORD_LENGTH];\n    <span class=\"hljs-type\">char</span> input[<span class=\"hljs-number\">1000</span>];\n    <span class=\"hljs-built_in\">strcpy</span>(input, input_text);\n    <span class=\"hljs-type\">char</span> *p_str = input;\n\n    <span class=\"hljs-comment\">/* index for iteration over input string */</span>\n    <span class=\"hljs-type\">int</span> index = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-comment\">/* index for word_list */</span>\n    <span class=\"hljs-type\">int</span> index_list = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-comment\">/* counts all words */</span>\n    <span class=\"hljs-type\">int</span> count_all = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-comment\">/* for controlling the while loop */</span>\n    <span class=\"hljs-type\">int</span> loop = <span class=\"hljs-number\">1</span>;\n\n    <span class=\"hljs-comment\">/* for the for-loop */</span>\n    <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-comment\">/* collects all words in the word_list */</span>\n    <span class=\"hljs-keyword\">while</span> (input[index] &amp;&amp; loop)\n    {\n        <span class=\"hljs-keyword\">if</span> (input[index] == <span class=\"hljs-string\">&#x27; &#x27;</span>)\n        {\n            input[index] = <span class=\"hljs-string\">&#x27;\\0&#x27;</span>;\n            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">strlen</span>(p_str) &lt;= MAX_WORD_LENGTH)\n            {\n                <span class=\"hljs-keyword\">if</span> (index_list &lt;= MAX_WORDS)\n                {\n                    <span class=\"hljs-built_in\">strcpy</span>(word_list[index_list], p_str);\n\n                    <span class=\"hljs-comment\">/* sets pointer to the next position */</span>\n                    p_str = input + index + <span class=\"hljs-number\">1</span>;\n                    index_list++;\n\n                    <span class=\"hljs-comment\">/* counts the word */</span>\n                    count_all++;\n                }\n                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-comment\">/* error case too many words */</span>\n                {\n                    count_all = EXCESSIVE_NUMBER_OF_WORDS;\n                    loop = <span class=\"hljs-number\">0</span>;\n                }\n            }\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-comment\">/* error case: word is too long */</span>\n            {\n                count_all = EXCESSIVE_LENGTH_WORD;\n                loop = <span class=\"hljs-number\">0</span>;\n            }\n        }\n\n        index++;\n    }\n\n    words-&gt;count = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-comment\">/* make sure none error is occured */</span>\n    <span class=\"hljs-keyword\">if</span> (loop)\n    {\n        <span class=\"hljs-comment\">/* collects the last word up to the \\0-character. and counts it.*/</span>\n        <span class=\"hljs-built_in\">strcpy</span>(word_list[index_list], p_str);\n        count_all++;\n\n        <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt;= index_list; i++)\n        {\n            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">strcmp</span>(word_list[i], words-&gt;text) == <span class=\"hljs-number\">0</span>)\n            {\n                words-&gt;count++;\n            }\n        }\n    }\n\n    <span class=\"hljs-comment\">/* returns the number of words or an error code */</span>\n    <span class=\"hljs-keyword\">return</span> count_all;\n}"
    }
  },
  "contributors": [
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
