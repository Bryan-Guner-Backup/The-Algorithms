{
  "slug": "build-directory-md",
  "name": "Build Directory Md",
  "categories": ["scripts"],
  "body": {},
  "implementations": {
    "python": {
      "dir": "scripts/build_directory_md.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/scripts/build_directory_md.py",
      "code": "<span class=\"hljs-comment\">#!/usr/bin/env python3</span>\n\n<span class=\"hljs-keyword\">import</span> os\n<span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> Iterator\n\nURL_BASE = <span class=\"hljs-string\">&quot;https://github.com/TheAlgorithms/Python/blob/master&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">good_file_paths</span>(<span class=\"hljs-params\">top_dir: <span class=\"hljs-built_in\">str</span> = <span class=\"hljs-string\">&quot;.&quot;</span></span>) -&gt; Iterator[<span class=\"hljs-built_in\">str</span>]:\n    <span class=\"hljs-keyword\">for</span> dir_path, dir_names, filenames <span class=\"hljs-keyword\">in</span> os.walk(top_dir):\n        dir_names[:] = [d <span class=\"hljs-keyword\">for</span> d <span class=\"hljs-keyword\">in</span> dir_names <span class=\"hljs-keyword\">if</span> d != <span class=\"hljs-string\">&quot;scripts&quot;</span> <span class=\"hljs-keyword\">and</span> d[<span class=\"hljs-number\">0</span>] <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">&quot;._&quot;</span>]\n        <span class=\"hljs-keyword\">for</span> filename <span class=\"hljs-keyword\">in</span> filenames:\n            <span class=\"hljs-keyword\">if</span> filename == <span class=\"hljs-string\">&quot;__init__.py&quot;</span>:\n                <span class=\"hljs-keyword\">continue</span>\n            <span class=\"hljs-keyword\">if</span> os.path.splitext(filename)[<span class=\"hljs-number\">1</span>] <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-string\">&quot;.py&quot;</span>, <span class=\"hljs-string\">&quot;.ipynb&quot;</span>):\n                <span class=\"hljs-keyword\">yield</span> os.path.join(dir_path, filename).lstrip(<span class=\"hljs-string\">&quot;./&quot;</span>)\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">md_prefix</span>(<span class=\"hljs-params\">i</span>):\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{i * <span class=\"hljs-string\">&#x27;  &#x27;</span>}</span>*&quot;</span> <span class=\"hljs-keyword\">if</span> i <span class=\"hljs-keyword\">else</span> <span class=\"hljs-string\">&quot;\\n##&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">print_path</span>(<span class=\"hljs-params\">old_path: <span class=\"hljs-built_in\">str</span>, new_path: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:\n    old_parts = old_path.split(os.sep)\n    <span class=\"hljs-keyword\">for</span> i, new_part <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(new_path.split(os.sep)):\n        <span class=\"hljs-keyword\">if</span> i + <span class=\"hljs-number\">1</span> &gt; <span class=\"hljs-built_in\">len</span>(old_parts) <span class=\"hljs-keyword\">or</span> old_parts[i] != new_part:\n            <span class=\"hljs-keyword\">if</span> new_part:\n                <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{md_prefix(i)}</span> <span class=\"hljs-subst\">{new_part.replace(<span class=\"hljs-string\">&#x27;_&#x27;</span>, <span class=\"hljs-string\">&#x27; &#x27;</span>).title()}</span>&quot;</span>)\n    <span class=\"hljs-keyword\">return</span> new_path\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">print_directory_md</span>(<span class=\"hljs-params\">top_dir: <span class=\"hljs-built_in\">str</span> = <span class=\"hljs-string\">&quot;.&quot;</span></span>) -&gt; <span class=\"hljs-literal\">None</span>:\n    old_path = <span class=\"hljs-string\">&quot;&quot;</span>\n    <span class=\"hljs-keyword\">for</span> filepath <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">sorted</span>(good_file_paths(top_dir)):\n        filepath, filename = os.path.split(filepath)\n        <span class=\"hljs-keyword\">if</span> filepath != old_path:\n            old_path = print_path(old_path, filepath)\n        indent = (filepath.count(os.sep) + <span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">if</span> filepath <span class=\"hljs-keyword\">else</span> <span class=\"hljs-number\">0</span>\n        url = <span class=\"hljs-string\">&quot;/&quot;</span>.join((URL_BASE, filepath, filename)).replace(<span class=\"hljs-string\">&quot; &quot;</span>, <span class=\"hljs-string\">&quot;%20&quot;</span>)\n        filename = os.path.splitext(filename.replace(<span class=\"hljs-string\">&quot;_&quot;</span>, <span class=\"hljs-string\">&quot; &quot;</span>).title())[<span class=\"hljs-number\">0</span>]\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{md_prefix(indent)}</span> [<span class=\"hljs-subst\">{filename}</span>](<span class=\"hljs-subst\">{url}</span>)&quot;</span>)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    print_directory_md(<span class=\"hljs-string\">&quot;.&quot;</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "Martin RÃ¶bke",
      "email": "martin.roebke@web.de",
      "commits": 1
    },
    {
      "name": "matkosoric",
      "email": "soric.matko@gmail.com",
      "commits": 1
    },
    {
      "name": "Ankur Chattopadhyay",
      "email": "39518771+chttrjeankr@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "DanishSheikh1999",
      "email": "43725095+DanishSheikh1999@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Jai Kumar Dewani",
      "email": "jai.dewani.99@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 5
    }
  ],
  "explanationUrl": {}
}
