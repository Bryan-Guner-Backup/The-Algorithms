{
  "slug": "convexhullgraham",
  "name": "ConvexHullGraham",
  "categories": ["geometry"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Geometry/ConvexHullGraham.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Geometry/ConvexHullGraham.js",
      "code": "<span class=\"hljs-comment\">/**\n * Author: Arnab Ray\n * ConvexHull using Graham Scan\n * Wikipedia: https://en.wikipedia.org/wiki/Graham_scan\n * Given a set of points in the plane. The Convex hull of the set is the smallest convex polygon that contains all the points of it.\n */</span>\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">compare</span> (a, b) {\n  <span class=\"hljs-comment\">// Compare Function to Sort the points, a and b are points to compare</span>\n  <span class=\"hljs-keyword\">if</span> (a.<span class=\"hljs-property\">x</span> &lt; b.<span class=\"hljs-property\">x</span>) <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">if</span> (a.<span class=\"hljs-property\">x</span> === b.<span class=\"hljs-property\">x</span> &amp;&amp; a.<span class=\"hljs-property\">y</span> &lt; b.<span class=\"hljs-property\">y</span>) <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n}\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">orientation</span> (a, b, c) {\n  <span class=\"hljs-comment\">// Check orientation of Line(a,b) and Line(b,c)</span>\n  <span class=\"hljs-keyword\">const</span> alpha = (b.<span class=\"hljs-property\">y</span> - a.<span class=\"hljs-property\">y</span>) / (b.<span class=\"hljs-property\">x</span> - a.<span class=\"hljs-property\">x</span>)\n  <span class=\"hljs-keyword\">const</span> beta = (c.<span class=\"hljs-property\">y</span> - b.<span class=\"hljs-property\">y</span>) / (c.<span class=\"hljs-property\">x</span> - b.<span class=\"hljs-property\">x</span>)\n\n  <span class=\"hljs-comment\">// Clockwise</span>\n  <span class=\"hljs-keyword\">if</span> (alpha &gt; beta) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-comment\">// Anticlockwise</span>\n  <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (beta &gt; alpha) <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-comment\">// Colinear</span>\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">convexHull</span> (points) {\n  <span class=\"hljs-keyword\">const</span> pointsLen = points.<span class=\"hljs-property\">length</span>\n  <span class=\"hljs-keyword\">if</span> (pointsLen &lt;= <span class=\"hljs-number\">2</span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Minimum of 3 points is required to form closed polygon!&#x27;</span>)\n  }\n\n  points.<span class=\"hljs-title function_\">sort</span>(compare)\n  <span class=\"hljs-keyword\">const</span> p1 = points[<span class=\"hljs-number\">0</span>]; <span class=\"hljs-keyword\">const</span> p2 = points[pointsLen - <span class=\"hljs-number\">1</span>]\n\n  <span class=\"hljs-comment\">// Divide Hull in two halfs</span>\n  <span class=\"hljs-keyword\">const</span> upperPoints = []; <span class=\"hljs-keyword\">const</span> lowerPoints = []\n\n  upperPoints.<span class=\"hljs-title function_\">push</span>(p1)\n  lowerPoints.<span class=\"hljs-title function_\">push</span>(p1)\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; pointsLen; i++) {\n    <span class=\"hljs-keyword\">if</span> (i === pointsLen - <span class=\"hljs-number\">1</span> || <span class=\"hljs-title function_\">orientation</span>(p1, points[i], p2) !== -<span class=\"hljs-number\">1</span>) {\n      <span class=\"hljs-keyword\">let</span> upLen = upperPoints.<span class=\"hljs-property\">length</span>\n\n      <span class=\"hljs-keyword\">while</span> (upLen &gt;= <span class=\"hljs-number\">2</span> &amp;&amp; <span class=\"hljs-title function_\">orientation</span>(upperPoints[upLen - <span class=\"hljs-number\">2</span>], upperPoints[upLen - <span class=\"hljs-number\">1</span>], points[i]) === -<span class=\"hljs-number\">1</span>) {\n        upperPoints.<span class=\"hljs-title function_\">pop</span>()\n        upLen = upperPoints.<span class=\"hljs-property\">length</span>\n      }\n      upperPoints.<span class=\"hljs-title function_\">push</span>(points[i])\n    }\n    <span class=\"hljs-keyword\">if</span> (i === pointsLen - <span class=\"hljs-number\">1</span> || <span class=\"hljs-title function_\">orientation</span>(p1, points[i], p2) !== <span class=\"hljs-number\">1</span>) {\n      <span class=\"hljs-keyword\">let</span> lowLen = lowerPoints.<span class=\"hljs-property\">length</span>\n      <span class=\"hljs-keyword\">while</span> (lowLen &gt;= <span class=\"hljs-number\">2</span> &amp;&amp; <span class=\"hljs-title function_\">orientation</span>(lowerPoints[lowLen - <span class=\"hljs-number\">2</span>], lowerPoints[lowLen - <span class=\"hljs-number\">1</span>], points[i]) === <span class=\"hljs-number\">1</span>) {\n        lowerPoints.<span class=\"hljs-title function_\">pop</span>()\n        lowLen = lowerPoints.<span class=\"hljs-property\">length</span>\n      }\n      lowerPoints.<span class=\"hljs-title function_\">push</span>(points[i])\n    }\n  }\n  <span class=\"hljs-keyword\">const</span> hull = []\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; upperPoints.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>; i++) {\n    hull.<span class=\"hljs-title function_\">push</span>(upperPoints[i])\n  }\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = lowerPoints.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>; i &gt;= <span class=\"hljs-number\">0</span>; i--) {\n    hull.<span class=\"hljs-title function_\">push</span>(lowerPoints[i])\n  }\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;The Convex Hull found is: \\n&#x27;</span>)\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(hull)\n}\n\n<span class=\"hljs-keyword\">const</span> points = [\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">3</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">1</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">2</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">4</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">4</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">0</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">2</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">1</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">3</span> }]\n\n<span class=\"hljs-title function_\">convexHull</span>(points)\n"
    }
  },
  "contributors": [
    {
      "name": "arnabuchiha",
      "email": "arnabkeya04@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}
