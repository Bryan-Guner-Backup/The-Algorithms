{
  "slug": "searching-of-element-in-dynamic-array",
  "name": "Searching of Element in Dynamic Array",
  "categories": ["dynamicprogramming"],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "dynamic_programming/searching_of_element_in_dynamic_array.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/dynamic_programming/searching_of_element_in_dynamic_array.cpp",
      "code": "<span class=\"hljs-comment\">/*\n *this program is use to find any elemet in any row with variable array size\n *aplication of pointer is use in it\n *important point start from here to:\n *the index value of array can be go to 1 to 100000\n *check till array[1000]\n *end here\n *how to work example:\n **Question:\n ***number of array 2\n ***quarry 3\n ***array 1 is {1 2 3 4 5}\n ***array 2 is {6 7}\n ****i) what is 2nd element in 1st array\n ****ii) what is 1st element in 2nd array\n ****iii) what is 5th element in 1st array\n *****output:\n *****Enter Number of array you want to Store : 2\n *****Enter Number of Question or Quary you want to do Related to Array : 3\n *****Enter number of element in 1 rows : 5\n *****Enter the element of Array 1 2 3 4 5\n *****Enter number of element in 2 rows : 2\n *****Enter the element of Array 6 7\n *****enter the number of row which element You want to find : 1\n *****enter the position of element which You want to find : 2\n *****The element is 2\n *****enter the number of row which element You want to find : 2\n *****enter the position of element which You want to find : 1\n *****The element is 6\n *****enter the number of row which element You want to find : 1\n *****enter the position of element which You want to find : 5\n *****The element is 5\n */</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-comment\">// this is main fuction</span>\n<span class=\"hljs-comment\">// ***</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-type\">int64_t</span> r, mr = <span class=\"hljs-number\">0</span>, x, q, i, z;\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter Number of array you want to Store :&quot;</span>;\n    std::cin &gt;&gt; x;\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter Number of &quot;</span>;\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Question or Quary you &quot;</span>;\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;want to do Related to Array :&quot;</span>;\n    std::cin &gt;&gt; q;\n    <span class=\"hljs-comment\">// create a Array in run time because use can</span>\n    <span class=\"hljs-comment\">// change the size of each array which he/she is going to store</span>\n    <span class=\"hljs-comment\">// create a 2D array</span>\n    <span class=\"hljs-type\">int</span>** ar = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">int</span>*[x]();\n    <span class=\"hljs-comment\">// this for loop is use for entering different variable size array</span>\n    <span class=\"hljs-comment\">// ***</span>\n    <span class=\"hljs-keyword\">for</span> (r = <span class=\"hljs-number\">0</span>; r &lt; x; r++) {\n        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter number of element in &quot;</span> &lt;&lt; r + <span class=\"hljs-number\">1</span> &lt;&lt; <span class=\"hljs-string\">&quot; rows :&quot;</span>;\n        std::cin &gt;&gt; mr;\n        <span class=\"hljs-comment\">// creating a 1D array</span>\n        <span class=\"hljs-type\">int</span>* ac = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">int</span>[mr]();\n        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter the element of Array &quot;</span>;\n        <span class=\"hljs-comment\">// this for loop is use for storing values in array</span>\n        <span class=\"hljs-comment\">// ***</span>\n        <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; mr; i++) {\n            <span class=\"hljs-comment\">// entering the value of rows in array in Horizontal</span>\n            std::cin &gt;&gt; ac[i];\n        }\n        <span class=\"hljs-comment\">// Change the position of Array so that new arrays entery will be done</span>\n        ar[r] = ac;\n    }\n    <span class=\"hljs-comment\">// this for loop is use for display result of querry</span>\n    <span class=\"hljs-comment\">// ***</span>\n    <span class=\"hljs-keyword\">for</span> (z = <span class=\"hljs-number\">0</span>; z &lt; q; z++) {\n        <span class=\"hljs-type\">int64_t</span> r1 = <span class=\"hljs-number\">0</span>, q1 = <span class=\"hljs-number\">0</span>;\n        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;enter the number of row which element you want to find :&quot;</span>;\n        std::cin &gt;&gt; r1;\n        r1 = r1 - <span class=\"hljs-number\">1</span>;\n        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;enter the position of element which you want to find :&quot;</span>;\n        std::cin &gt;&gt; q1;\n        q1 = q1 - <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-comment\">// use this to find desire position of element in desire array</span>\n        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;The element is &quot;</span> &lt;&lt; ar[r1][q1] &lt;&lt; std::endl;\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Faizan Ahamed",
      "email": "faizanahamed1414@gmail.com",
      "commits": 13
    }
  ],
  "explanationUrl": {}
}
