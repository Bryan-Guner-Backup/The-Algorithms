{
  "slug": "caesarscipher",
  "name": "CaesarsCipher",
  "categories": ["ciphers"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Ciphers/CaesarsCipher.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Ciphers/CaesarsCipher.js",
      "code": "<span class=\"hljs-comment\">/**\n * Caesar&#x27;s Cipher - also known as the ROT13 Cipher is when\n * a letter is replaced by the one that is 13 spaces away\n * from it in the alphabet. If the letter is in the first half\n * of the alphabet we add 13, if it&#x27;s in the latter half we\n * subtract 13 from the character code value.\n */</span>\n\n<span class=\"hljs-comment\">/**\n * Decrypt a ROT13 cipher\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">String</span>} <span class=\"hljs-variable\">str</span> - string to be decrypted\n * <span class=\"hljs-doctag\">@return</span> {<span class=\"hljs-type\">String</span>} decrypted string\n */</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">rot13</span> (str) {\n  <span class=\"hljs-keyword\">const</span> response = []\n  <span class=\"hljs-keyword\">const</span> strLength = str.<span class=\"hljs-property\">length</span>\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; strLength; i++) {\n    <span class=\"hljs-keyword\">const</span> char = str.<span class=\"hljs-title function_\">charCodeAt</span>(i)\n\n    <span class=\"hljs-keyword\">if</span> (char &lt; <span class=\"hljs-number\">65</span> || (char &gt; <span class=\"hljs-number\">90</span> &amp;&amp; char &lt; <span class=\"hljs-number\">97</span>) || char &gt; <span class=\"hljs-number\">122</span>) {\n      response.<span class=\"hljs-title function_\">push</span>(str.<span class=\"hljs-title function_\">charAt</span>(i))\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((char &gt; <span class=\"hljs-number\">77</span> &amp;&amp; char &lt;= <span class=\"hljs-number\">90</span>) || (char &gt; <span class=\"hljs-number\">109</span> &amp;&amp; char &lt;= <span class=\"hljs-number\">122</span>)) {\n      response.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">fromCharCode</span>(str.<span class=\"hljs-title function_\">charCodeAt</span>(i) - <span class=\"hljs-number\">13</span>))\n    } <span class=\"hljs-keyword\">else</span> {\n      response.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">fromCharCode</span>(str.<span class=\"hljs-title function_\">charCodeAt</span>(i) + <span class=\"hljs-number\">13</span>))\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> response.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n}\n\n<span class=\"hljs-comment\">// Caesars Cipher Example</span>\n<span class=\"hljs-keyword\">const</span> encryptedString = <span class=\"hljs-string\">&#x27;Uryyb Jbeyq&#x27;</span>\n<span class=\"hljs-keyword\">const</span> decryptedString = <span class=\"hljs-title function_\">rot13</span>(encryptedString)\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(decryptedString) <span class=\"hljs-comment\">// Hello World</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 1
    },
    {
      "name": "PatOnTheBack",
      "email": "51241310+PatOnTheBack@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ed Mendoza",
      "email": "polyneue@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
