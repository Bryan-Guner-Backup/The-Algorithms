{
  "slug": "createpermutations",
  "name": "CreatePermutations",
  "categories": ["strings"],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "String/CreatePermutations.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/String/CreatePermutations.js",
      "code": "<span class=\"hljs-comment\">/*\na permutation of a set is, loosely speaking, an arrangement of its members into a sequence or linear order, or if the set is already ordered, a rearrangement of its elements.\nThe word &quot;permutation&quot; also refers to the act or process of changing the linear order of an ordered set\nMore at : https://en.wikipedia.org/wiki/Permutation\n*/</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">createPermutations</span> = (<span class=\"hljs-params\">str</span>) =&gt; {\n<span class=\"hljs-comment\">// convert string to array</span>\n  <span class=\"hljs-keyword\">const</span> arr = str.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n\n  <span class=\"hljs-comment\">// get array length</span>\n  <span class=\"hljs-keyword\">const</span> strLen = arr.<span class=\"hljs-property\">length</span>\n  <span class=\"hljs-comment\">// this will hold all the permutations</span>\n  <span class=\"hljs-keyword\">const</span> perms = []\n  <span class=\"hljs-keyword\">let</span> rest\n  <span class=\"hljs-keyword\">let</span> picked\n  <span class=\"hljs-keyword\">let</span> restPerms\n  <span class=\"hljs-keyword\">let</span> next\n\n  <span class=\"hljs-comment\">// if strLen is zero, return the same string</span>\n  <span class=\"hljs-keyword\">if</span> (strLen === <span class=\"hljs-number\">0</span>) { <span class=\"hljs-keyword\">return</span> [str] }\n  <span class=\"hljs-comment\">// loop to the length to get all permutations</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; strLen; i++) {\n    rest = <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">create</span>(arr)\n    picked = rest.<span class=\"hljs-title function_\">splice</span>(i, <span class=\"hljs-number\">1</span>)\n\n    restPerms = <span class=\"hljs-title function_\">createPermutations</span>(rest.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>))\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>, jLen = restPerms.<span class=\"hljs-property\">length</span>; j &lt; jLen; j++) {\n      next = picked.<span class=\"hljs-title function_\">concat</span>(restPerms[j])\n      perms.<span class=\"hljs-title function_\">push</span>(next.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>))\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> perms\n}\n<span class=\"hljs-keyword\">export</span> { createPermutations }\n"
    }
  },
  "contributors": [
    {
      "name": "Thivagar Manickam",
      "email": "thivagar200@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}
