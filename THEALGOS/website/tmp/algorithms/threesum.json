{
  "slug": "threesum",
  "name": "ThreeSum",
  "categories": ["others"],
  "body": {},
  "implementations": {
    "java": {
      "dir": "Others/ThreeSum.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/Others/ThreeSum.java",
      "code": "<span class=\"hljs-keyword\">package</span> Others;\n\n<span class=\"hljs-keyword\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\">import</span> java.util.Scanner;\n\n<span class=\"hljs-comment\">/**\n * To find triplet equals to given sum in complexity O(n*log(n))\n *\n * &lt;p&gt;Array must be sorted\n *\n * <span class=\"hljs-doctag\">@author</span> Ujjawal Joshi\n * <span class=\"hljs-doctag\">@date</span> 2020.05.18\n *     &lt;p&gt;Test Cases: Input: 6 //Length of array 12 3 4 1 6 9 target=24 Output:3 9 12 Explanation:\n *     There is a triplet (12, 3 and 9) present in the array whose sum is 24.\n */</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ThreeSum</span> {\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\n    <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">sc</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> sc.nextInt(); <span class=\"hljs-comment\">// Length of an array</span>\n\n    <span class=\"hljs-type\">int</span> a[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[n];\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n      a[i] = sc.nextInt();\n    }\n    System.out.println(<span class=\"hljs-string\">&quot;Target&quot;</span>);\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n_find</span> <span class=\"hljs-operator\">=</span> sc.nextInt();\n\n    Arrays.sort(a); <span class=\"hljs-comment\">// Sort the array if array is not sorted</span>\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n\n      <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">l</span> <span class=\"hljs-operator\">=</span> i + <span class=\"hljs-number\">1</span>, r = n - <span class=\"hljs-number\">1</span>;\n\n      <span class=\"hljs-keyword\">while</span> (l &lt; r) {\n        <span class=\"hljs-keyword\">if</span> (a[i] + a[l] + a[r] == n_find) {\n          System.out.println(a[i] + <span class=\"hljs-string\">&quot; &quot;</span> + a[l] + <span class=\"hljs-string\">&quot; &quot;</span> + a[r]);\n          <span class=\"hljs-keyword\">break</span>;\n        } <span class=\"hljs-comment\">// if you want all the triplets write l++;r--; insted of break;</span>\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (a[i] + a[l] + a[r] &lt; n_find) l++;\n        <span class=\"hljs-keyword\">else</span> r--;\n      }\n    }\n\n    sc.close();\n  }\n}\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}
