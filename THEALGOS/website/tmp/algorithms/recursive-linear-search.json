{
  "slug": "recursive-linear-search",
  "name": "Recursive Linear Search",
  "categories": ["searches"],
  "body": {},
  "implementations": {
    "ruby": {
      "dir": "searches/recursive_linear_search.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/searches/recursive_linear_search.rb",
      "code": "<span class=\"hljs-comment\"># A pure Ruby implementation of a recursive linear search algorithm</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">rec_linear_search</span><span class=\"hljs-params\">(sequence, low, high, target)</span></span>\n  raise Exception(<span class=\"hljs-string\">&#x27;Invalid upper or lower bound!&#x27;</span>) <span class=\"hljs-keyword\">unless</span> high &lt; sequence.length &amp;&amp; low &lt; sequence.length\n\n  <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">if</span> high &lt; low\n\n  <span class=\"hljs-keyword\">return</span> low <span class=\"hljs-keyword\">if</span> sequence[low] == target\n\n  <span class=\"hljs-keyword\">return</span> high <span class=\"hljs-keyword\">if</span> sequence[high] == target\n\n  rec_linear_search(sequence, low + <span class=\"hljs-number\">1</span>, high - <span class=\"hljs-number\">1</span>, target)\n<span class=\"hljs-keyword\">end</span>\n\nputs(rec_linear_search([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">500</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">700</span>], <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">0</span>))\n<span class=\"hljs-comment\"># =&gt; 0</span>\n\nputs(rec_linear_search([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">500</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">700</span>], <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">700</span>))\n<span class=\"hljs-comment\"># =&gt; 4</span>\n\nputs(rec_linear_search([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">500</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">700</span>], <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">30</span>))\n<span class=\"hljs-comment\"># =&gt; 1</span>\n\nputs(rec_linear_search([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">500</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">700</span>], <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">4</span>, -<span class=\"hljs-number\">6</span>))\n<span class=\"hljs-comment\"># =&gt; -1</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}
